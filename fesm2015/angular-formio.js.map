{"version":3,"file":"angular-formio.js","sources":["../../../projects/angular-formio/src/formio.config.ts","../../../projects/angular-formio/src/formio.common.ts","../../../projects/angular-formio/src/formio.service.ts","../../../projects/angular-formio/src/formio-promise.service.ts","../../../projects/angular-formio/src/formio.utils.ts","../../../projects/angular-formio/src/components/alerts/formio.alerts.ts","../../../projects/angular-formio/src/types/alerts-position.ts","../../../projects/angular-formio/src/custom-component/custom-tags.service.ts","../../../projects/angular-formio/src/FormioBaseComponent.ts","../../../projects/angular-formio/src/components/loader/formio.loader.component.html","../../../projects/angular-formio/src/components/loader/formio.loader.component.ts","../../../projects/angular-formio/src/components/alerts/parse-html-content.pipe.ts","../../../projects/angular-formio/src/components/alerts/formio.alerts.component.html","../../../projects/angular-formio/src/components/alerts/formio.alerts.component.ts","../../../projects/angular-formio/src/components/formio/formio.component.html","../../../projects/angular-formio/src/components/formio/formio.component.ts","../../../projects/angular-formio/src/components/formbuilder/formbuilder.component.ts","../../../projects/angular-formio/src/components/formbuilder/formbuilder.component.html","../../../projects/angular-formio/src/formio.module.ts","../../../projects/angular-formio/src/custom-component/create-custom-component.ts","../../../projects/angular-formio/src/custom-component/register-custom-component.ts","../../../projects/angular-formio/src/public-api.ts","../../../projects/angular-formio/src/angular-formio.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class FormioAppConfig {\n  appUrl = '';\n  apiUrl = '';\n  icons?: string;\n  formOnly?: boolean;\n}\n","import { ExtendedComponentSchema, ValidateOptions } from 'formiojs';\nimport { AlertsPosition } from './types/alerts-position';\nexport { ConditionalOptions, ValidateOptions } from 'formiojs';\n\nexport interface ComponentOptions<T = any, V = ValidateOptions> extends ExtendedComponentSchema<T> {\n  validate?: V;\n}\n\nexport interface FormioRefreshValue {\n  property?: string;\n  value?: object;\n  form?: object;\n  submission?: object;\n}\n\nexport interface AccessSetting {\n  type: string;\n  roles: string[];\n}\n\nexport interface FormioForm {\n  title?: string;\n  display?: string;\n  name?: string;\n  path?: string;\n  type?: string;\n  project?: string;\n  template?: string;\n  components?: ExtendedComponentSchema[];\n  tags?: string[];\n  access?: AccessSetting[];\n  submissionAccess?: AccessSetting[];\n}\n\nexport interface ComponentInstance {\n  component: ExtendedComponentSchema;\n  id: string;\n  type: string;\n  asString?(value: any): string;\n  getView(value: any): string;\n}\n\nexport interface AlertsOptions {\n  submitMessage: string;\n}\n\nexport interface ErrorsOptions {\n  message: string;\n}\n\nexport class FormioError {\n  constructor(\n    public message: string,\n    public component: ExtendedComponentSchema,\n    public silent?: boolean,\n  ) {}\n}\n\nexport type FormioSubmissionCallback = (\n  error: FormioError,\n  submission: object\n) => void;\nexport type FormioBeforeSubmit = (\n  submission: object,\n  callback: FormioSubmissionCallback\n) => void;\n\nexport interface FormioHookOptions {\n  beforeSubmit: FormioBeforeSubmit;\n}\n\nexport interface FormioOptions {\n  errors?: ErrorsOptions;\n  alerts?: AlertsOptions;\n  alertsPosition?: AlertsPosition;\n  disableAlerts?: boolean;\n  i18n?: object;\n  fileService?: object;\n  hooks?: FormioHookOptions;\n  sanitizeConfig?: any;\n}\n","import { Observable, Observer } from 'rxjs';\nimport { FormioForm } from './formio.common';\nimport { Formio } from 'formiojs';\n\nexport class FormioService {\n  public formio: any;\n  constructor(public url: string, public options?: object) {\n    this.formio = new Formio(this.url, this.options);\n  }\n  requestWrapper(fn: any) {\n    let record: any;\n    let called = false;\n    return Observable.create((observer: Observer<any>) => {\n      try {\n        if (!called) {\n          called = true;\n          fn()\n            .then((_record: any) => {\n              record = _record;\n              observer.next(record);\n              observer.complete();\n            })\n            .catch((err: any) => observer.error(err));\n        } else if (record) {\n          observer.next(record);\n          observer.complete();\n        }\n      } catch (err) {\n        observer.error(err);\n      }\n    });\n  }\n  saveForm(form: FormioForm, options?: any): Observable<FormioForm> {\n    return this.requestWrapper(() => this.formio.saveForm(form, options));\n  }\n  loadForm(query?: any, options?: any): Observable<FormioForm> {\n    return this.requestWrapper(() => this.formio.loadForm(query, options));\n  }\n  loadForms(query: any, options?: any): Observable<FormioForm> {\n    return this.requestWrapper(() => this.formio.loadForms(query, options));\n  }\n  loadSubmission(query?: any, options?: any): Observable<{}> {\n    return this.requestWrapper(() => this.formio.loadSubmission(query, options));\n  }\n  userPermissions(user: any, form: any, submission: any): Observable<{}> {\n    return this.requestWrapper(() => this.formio.userPermissions(user, form, submission));\n  }\n  deleteSubmission(data?: any, options?: any): Observable<{}> {\n    return this.requestWrapper(() => this.formio.deleteSubmission(data, options));\n  }\n  saveSubmission(submission: {}, options?: any): Observable<{}> {\n    return this.requestWrapper(() => this.formio.saveSubmission(submission, options));\n  }\n  loadSubmissions(query?: any, options?: any): Observable<{}> {\n    return this.requestWrapper(() => this.formio.loadSubmissions(query, options));\n  }\n}\n","import { from } from 'rxjs';\nimport { FormioService } from './formio.service';\nimport { FormioForm } from './formio.common';\n\nexport class FormioPromiseService {\n  private formioService: FormioService;\n\n  constructor(public url: string, public options?: object) {\n    this.formioService = new FormioService(url, options);\n  }\n\n  saveForm(form: FormioForm, options?: any): Promise<any> {\n    return this.formioService.saveForm(form, options).toPromise();\n  }\n  loadForm(query?: any, options?: any): Promise<any> {\n    return this.formioService.loadForm(query, options).toPromise();\n  }\n  loadSubmission(query?: any, options?: any): Promise<any> {\n    return this.formioService.loadSubmission(query, options).toPromise();\n  }\n  userPermissions(user: any, form: any, submission: any): Promise<any> {\n    return this.formioService.userPermissions(user, form, submission).toPromise();\n  }\n  deleteSubmission(data?: any, options?: any): Promise<any> {\n    return this.formioService.deleteSubmission(data, options).toPromise();\n  }\n  loadForms(query: any, options?: any): Promise<any> {\n    return this.formioService.loadForms(query, options).toPromise();\n  }\n  saveSubmission(submission: {}, options?: any): Promise<any> {\n    return this.formioService.saveSubmission(submission, options).toPromise();\n  }\n  loadSubmissions(query?: any, options?: any): Promise<any> {\n    return this.formioService.loadSubmissions(query, options).toPromise();\n  }\n}\n","import { RouterModule } from '@angular/router';\nimport { find, trim, each, intersection } from 'lodash';\n\nexport function extendRouter(Class: any, config: any, ClassRoutes: any) {\n  each(Class.decorators, decorator => {\n    each(decorator.args, arg => {\n      if (arg.declarations) {\n        each(config, component => arg.declarations.push(component));\n      }\n      if (arg.imports) {\n        each(arg.imports, (_import, index) => {\n          if (\n            (_import.ngModule && (_import.ngModule.name === 'RouterModule')) ||\n            (_import.name === 'RouterModule')\n          ) {\n            arg.imports[index] = RouterModule.forChild(ClassRoutes(config));\n          }\n        });\n      }\n    });\n  });\n  return Class;\n}\n","export interface FormioAlert {\n  type: string;\n  message: string;\n  component?: any;\n}\n\nexport class FormioAlerts {\n  public alerts: FormioAlert[] = [];\n\n  setAlert(alert: FormioAlert) {\n    this.alerts = [alert];\n  }\n\n  addAlert(alert: FormioAlert) {\n    this.alerts.push(alert);\n  }\n\n  setAlerts(alerts: FormioAlert[]) {\n    this.alerts = alerts;\n  }\n}\n","export enum AlertsPosition {\n  none,\n  top,\n  bottom,\n  both\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CustomTagsService {\n  tags: string[] = [];\n\n  addCustomTag(tag: string) {\n    this.tags.push(tag);\n  }\n}\n","import { Component, ElementRef, EventEmitter, Input, NgZone, OnChanges, OnDestroy, OnInit, Optional, Output, ViewChild } from '@angular/core';\nimport { FormioService } from './formio.service';\nimport { FormioAlerts } from './components/alerts/formio.alerts';\nimport { FormioAppConfig } from './formio.config';\nimport { FormioError, FormioForm, FormioOptions, FormioRefreshValue } from './formio.common';\nimport { assign, get, isEmpty } from 'lodash';\nimport { CustomTagsService } from './custom-component/custom-tags.service';\nimport Evaluator from 'formiojs/utils/Evaluator';\nimport { AlertsPosition } from './types/alerts-position';\n\n@Component({\n  template: ''\n})\nexport abstract class FormioBaseComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() form?: FormioForm;\n  @Input() submission?: any = {};\n  @Input() src?: string;\n  @Input() url?: string;\n  @Input() service?: FormioService;\n  @Input() options?: FormioOptions;\n  @Input() noeval ? = false;\n  @Input() formioOptions?: any;\n  @Input() renderOptions?: any;\n  @Input() readOnly ? = false;\n  @Input() viewOnly ? = false;\n  @Input() hideComponents?: string[];\n  @Input() refresh?: EventEmitter<FormioRefreshValue>;\n  @Input() error?: EventEmitter<any>;\n  @Input() success?: EventEmitter<object>;\n  @Input() language?: EventEmitter<string>;\n  @Input() hooks?: any = {};\n  @Input() renderer?: any;\n  @Input() watchSubmissionErrors ? = false;\n  @Output() render = new EventEmitter<object>();\n  @Output() customEvent = new EventEmitter<object>();\n  @Output() fileUploadingStatus = new EventEmitter<string>();\n  @Output() submit = new EventEmitter<object>();\n  @Output() prevPage = new EventEmitter<object>();\n  @Output() nextPage = new EventEmitter<object>();\n  @Output() beforeSubmit = new EventEmitter<object>();\n  @Output() change = new EventEmitter<object>();\n  @Output() invalid = new EventEmitter<boolean>();\n  @Output() errorChange = new EventEmitter<any>();\n  @Output() formLoad = new EventEmitter<any>();\n  @Output() submissionLoad = new EventEmitter<any>();\n  @Output() ready = new EventEmitter<FormioBaseComponent>();\n  @ViewChild('formio', { static: true }) formioElement?: ElementRef<any>;\n\n  public AlertsPosition = AlertsPosition;\n  public formio: any;\n  public initialized = false;\n  public alerts = new FormioAlerts();\n  public formioReady: Promise<any>;\n\n  private formioReadyResolve: any;\n  private submitting = false;\n  private submissionSuccess = false;\n  public isLoading: boolean;\n\n  constructor(\n    public ngZone: NgZone,\n    @Optional() public config: FormioAppConfig,\n    @Optional() public customTags?: CustomTagsService,\n  ) {\n    this.isLoading = true;\n    this.formioReady = new Promise((ready) => {\n      this.formioReadyResolve = ready;\n    });\n  }\n\n  getRenderer() {\n    return this.renderer;\n  }\n\n  getRendererOptions() {\n    const extraTags = this.customTags ? this.customTags.tags : [];\n    return assign({}, {\n      icons: get(this.config, 'icons', 'fontawesome'),\n      noAlerts: get(this.options, 'noAlerts', true),\n      readOnly: this.readOnly,\n      viewAsHtml: this.viewOnly,\n      i18n: get(this.options, 'i18n', null),\n      fileService: get(this.options, 'fileService', null),\n      hooks: this.hooks,\n      sanitizeConfig: {\n        addTags: extraTags\n      }\n    }, this.renderOptions || {});\n  }\n\n  createRenderer() {\n    const Renderer = this.getRenderer();\n    const form = (new Renderer(\n      this.formioElement ? this.formioElement.nativeElement : null,\n      this.form,\n      this.getRendererOptions()\n    ));\n    return form.instance;\n  }\n\n  setForm(form: FormioForm) {\n    this.form = form;\n    if (this.formio) {\n      this.formio.destroy();\n    }\n    // Clear out the element to render the new form.\n    if (this.formioElement && this.formioElement.nativeElement) {\n      this.formioElement.nativeElement.innerHTML = '';\n    }\n    this.formio = this.createRenderer();\n    this.formio.submission = this.submission;\n    if (this.renderOptions && this.renderOptions.validateOnInit) {\n      this.formio.setValue(this.submission, {validateOnInit: true});\n    }\n    if (this.url) {\n      this.formio.setUrl(this.url, this.formioOptions || {});\n    }\n    if (this.src) {\n      this.formio.setUrl(this.src, this.formioOptions || {});\n    }\n    this.formio.nosubmit = true;\n    this.formio.on('prevPage', (data: any) => this.ngZone.run(() => this.onPrevPage(data)));\n    this.formio.on('nextPage', (data: any) => this.ngZone.run(() => this.onNextPage(data)));\n    this.formio.on('change', (value: any, flags: any, isModified: boolean) => this.ngZone.run(() => this.onChange(value, flags, isModified)));\n    this.formio.on('customEvent', (event: any) =>\n      this.ngZone.run(() => this.customEvent.emit(event))\n    );\n    ['fileUploadingStart', 'fileUploadingEnd'].forEach((eventName, index) => {\n      const status = !!index ? 'end' : 'start';\n      this.formio.on(eventName, () =>\n        this.ngZone.run(() => this.fileUploadingStatus.emit(status))\n      );\n    });\n    this.formio.on('submit', (submission: any, saved: boolean) =>\n      this.ngZone.run(() => this.submitForm(submission, saved))\n    );\n    this.formio.on('error', (err: any) => this.ngZone.run(() => {\n      this.submissionSuccess = false;\n      return this.onError(err);\n    }));\n    this.formio.on('render', () => this.ngZone.run(() => this.render.emit()));\n    this.formio.on('formLoad', (loadedForm: any) =>\n      this.ngZone.run(() => this.formLoad.emit(loadedForm))\n    );\n\n    return this.formio.ready.then(() => {\n      this.ngZone.run(() => {\n        this.isLoading = false;\n        this.ready.emit(this);\n        this.formioReadyResolve(this.formio);\n        if (this.formio.submissionReady) {\n          this.formio.submissionReady.then((submission) => {\n            this.submissionLoad.emit(submission);\n          });\n        }\n      });\n      return this.formio;\n    });\n  }\n\n  initialize() {\n    if (this.initialized) {\n      return;\n    }\n\n    const extraTags = this.customTags ? this.customTags.tags : [];\n    const defaultOptions: FormioOptions = {\n      errors: {\n        message: 'Please fix the following errors before submitting.'\n      },\n      alerts: {\n        submitMessage: 'Submission Complete.'\n      },\n      disableAlerts: false,\n      hooks: {\n        beforeSubmit: null\n      },\n      sanitizeConfig: {\n        addTags: extraTags\n      },\n      alertsPosition: AlertsPosition.top,\n    };\n    this.options = Object.assign(defaultOptions, this.options);\n    if (this.options.disableAlerts) {\n      this.options.alertsPosition = AlertsPosition.none;\n    }\n    this.initialized = true;\n  }\n\n  ngOnInit() {\n    Evaluator.noeval = this.noeval;\n    this.initialize();\n\n    if (this.language) {\n      if (typeof this.language === 'string') {\n        this.formio.language = this.language;\n      } else {\n        this.language.subscribe((lang: string) => {\n          this.formio.language = lang;\n        });\n      }\n    }\n\n    if (this.refresh) {\n      this.refresh.subscribe((refresh: FormioRefreshValue) =>\n        this.onRefresh(refresh)\n      );\n    }\n\n    if (this.error) {\n      this.error.subscribe((err: any) => this.onError(err));\n    }\n\n    if (this.success) {\n      this.success.subscribe((message: string) => {\n        this.alerts.setAlert({\n          type: 'success',\n          message: message || get(this.options, 'alerts.submitMessage')\n        });\n      });\n    }\n\n    if (this.src) {\n      if (!this.service) {\n        this.service = new FormioService(this.src);\n      }\n      this.isLoading = true;\n      this.service.loadForm({ params: { live: 1 } }).subscribe(\n        (form: FormioForm) => {\n          if (form && form.components) {\n            this.ngZone.runOutsideAngular(() => {\n              this.setForm(form);\n            });\n          }\n\n          // if a submission is also provided.\n          if (\n            isEmpty(this.submission) &&\n            this.service &&\n            this.service.formio.submissionId\n          ) {\n            this.service.loadSubmission().subscribe(\n              (submission: any) => {\n                if (this.readOnly) {\n                  this.formio.options.readOnly = true;\n                }\n                this.submission = this.formio.submission = submission;\n              },\n              err => this.onError(err)\n            );\n          }\n        },\n        err => this.onError(err)\n      );\n    }\n    if (this.url && !this.service) {\n      this.service = new FormioService(this.url);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.formio) {\n      this.formio.destroy();\n    }\n  }\n\n  onRefresh(refresh: FormioRefreshValue) {\n    this.formioReady.then(() => {\n      if (refresh.form) {\n        this.formio.setForm(refresh.form).then(() => {\n          if (refresh.submission) {\n            this.formio.setSubmission(refresh.submission);\n          }\n        });\n      } else if (refresh.submission) {\n        this.formio.setSubmission(refresh.submission);\n      } else {\n        switch (refresh.property) {\n          case 'submission':\n            this.formio.submission = refresh.value;\n            break;\n          case 'form':\n            this.formio.form = refresh.value;\n            break;\n        }\n      }\n    });\n  }\n\n  ngOnChanges(changes: any) {\n    Evaluator.noeval = this.noeval;\n    this.initialize();\n\n    if (changes.form && changes.form.currentValue) {\n      this.ngZone.runOutsideAngular(() => {\n        this.setForm(changes.form.currentValue);\n      });\n    }\n\n    this.formioReady.then(() => {\n      if (changes.submission && changes.submission.currentValue) {\n        this.formio.setSubmission(changes.submission.currentValue, {\n          fromSubmission: false,\n        });\n      }\n\n      if (changes.hideComponents && changes.hideComponents.currentValue) {\n        const hiddenComponents = changes.hideComponents.currentValue;\n        this.formio.options.hide = hiddenComponents;\n        this.formio.everyComponent((component) => {\n          component.options.hide = hiddenComponents;\n          if (hiddenComponents.includes(component.component.key)) {\n            component.visible = false;\n          }\n        });\n      }\n    });\n  }\n\n  onPrevPage(data: any) {\n    this.alerts.setAlerts([]);\n    this.prevPage.emit(data);\n  }\n\n  onNextPage(data: any) {\n    this.alerts.setAlerts([]);\n    this.nextPage.emit(data);\n  }\n\n  onSubmit(submission: any, saved: boolean, noemit?: boolean) {\n    this.submitting = false;\n    this.submissionSuccess = true;\n    if (saved) {\n      this.formio.emit('submitDone', submission);\n    }\n    if (!noemit) {\n      this.submit.emit(submission);\n    }\n    if (!this.success) {\n      this.alerts.setAlert({\n        type: 'success',\n        message: get(this.options, 'alerts.submitMessage')\n      });\n    }\n  }\n\n  onError(err: any) {\n    this.alerts.setAlerts([]);\n    this.submitting = false;\n    this.isLoading = false;\n\n    if (!err) {\n      return;\n    }\n\n    // Make sure it is an array.\n    const errors = Array.isArray(err) ? err : [err];\n\n    // Emit these errors again.\n    this.errorChange.emit(errors);\n\n    if (err.silent) {\n      return;\n    }\n\n    if (this.formio && errors.length) {\n      this.formio.emit('submitError', errors);\n    }\n\n    // Iterate through each one and set the alerts array.\n    errors.forEach((error: any) => {\n      const {\n        message,\n        paths,\n      } = error\n        ? error.details\n          ? {\n            message: error.details.map((detail) => detail.message).join(' '),\n            paths: error.details.map((detail) => detail.path),\n          }\n          : {\n            message: error.message || error.toString(),\n            paths: error.path ? [error.path] : [],\n          }\n        : {\n          message: '',\n          paths: [],\n        };\n\n      this.alerts.addAlert({\n        type: 'danger',\n        message,\n        component: error.component,\n      });\n\n      if (this.formio) {\n        paths.forEach((path) => {\n          const component = this.formio.getComponent(path);\n          if (component) {\n            const components = Array.isArray(component) ? component : [component];\n            components.forEach((comp) => comp.setCustomValidity(message, true));\n          }\n        });\n      }\n    });\n  }\n\n  focusOnComponet(key: any) {\n    if (this.formio) {\n      this.formio.focusOnComponent(key);\n    }\n  }\n\n  submitExecute(submission: object, saved = false) {\n    if (this.service && !this.url && !saved) {\n      this.service\n        .saveSubmission(submission)\n        .subscribe(\n          (sub: {}) => this.onSubmit(sub, true),\n          err => this.onError(err)\n        );\n    } else {\n      this.onSubmit(submission, false);\n    }\n  }\n\n  submitForm(submission: any, saved = false) {\n    // Keep double submits from occurring...\n    if (this.submitting) {\n      return;\n    }\n    this.submissionSuccess = false;\n    this.submitting = true;\n    this.beforeSubmit.emit(submission);\n\n    // if they provide a beforeSubmit hook, then allow them to alter the submission asynchronously\n    // or even provide a custom Error method.\n    const beforeSubmit = get(this.options, 'hooks.beforeSubmit');\n    if (beforeSubmit) {\n      beforeSubmit(submission, (err: FormioError, sub: object) => {\n        if (err) {\n          this.onError(err);\n          return;\n        }\n        this.submitExecute(sub, saved);\n      });\n    } else {\n      this.submitExecute(submission, saved);\n    }\n  }\n\n  onChange(value: any, flags: any, isModified: boolean) {\n    if (this.watchSubmissionErrors && !this.submissionSuccess) {\n      const errors = get(this, 'formio.errors', []);\n      const alerts = get(this, 'alerts.alerts', []);\n      const submitted = get(this, 'formio.submitted', false);\n      if (submitted && (errors.length || alerts.length)) {\n        this.onError(errors);\n      }\n    }\n    return this.change.emit({...value, flags, isModified});\n  }\n}\n","<div class=\"formio-loader-wrapper\" *ngIf=\"isLoading\">\n  <div class=\"formio-loader\"></div>\n</div>\n","import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'formio-loader',\n  styleUrls: ['./formio.loader.component.scss'],\n  templateUrl: './formio.loader.component.html'\n})\nexport class FormioLoaderComponent {\n  @Input() isLoading: boolean;\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'parseHtmlContent', pure: false })\nexport class ParseHtmlContentPipe implements PipeTransform {\n\n  /*\n    Some messages that are come from formiojs have hex codes. So the main aim of this pipe is transform this messages to html.\n    And then render in template.\n  */\n  transform(content) {\n    const parsedContent = new DOMParser().parseFromString(content, 'text/html').body.childNodes[0];\n\n    return parsedContent.textContent;\n  }\n}\n","<div *ngFor=\"let alert of alerts.alerts\" class=\"alert alert-{{ alert.type }}\" role=\"alert\" (click)=\"getComponent($event, alert)\">\n  {{alert.message | parseHtmlContent}}\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport { FormioAlerts } from './formio.alerts';\n\n@Component({\n  selector: 'formio-alerts',\n  templateUrl: './formio.alerts.component.html'\n})\nexport class FormioAlertsComponent implements OnInit {\n  @Input() alerts: FormioAlerts;\n  @Output() focusComponent = new EventEmitter<object>();\n  ngOnInit() {\n    if (!this.alerts) {\n      this.alerts = new FormioAlerts();\n    }\n  }\n  getComponent (event, alert) {\n    this.focusComponent.emit(alert.component.key);\n  }\n}\n","<div>\n  <div *ngIf=\"isLoading\" style=\"position:relative;height:200px\">\n    <formio-loader [isLoading]=\"isLoading\"></formio-loader>\n  </div>\n  <formio-alerts *ngIf=\"this.options.alertsPosition === AlertsPosition.top || this.options.alertsPosition === AlertsPosition.both\" (focusComponent)=\"focusOnComponet($event)\" [alerts]=\"alerts\"></formio-alerts>\n  <div #formio></div>\n  <formio-alerts *ngIf=\"this.options.alertsPosition === AlertsPosition.bottom || this.options.alertsPosition === AlertsPosition.both\" (focusComponent)=\"focusOnComponet($event)\" [alerts]=\"alerts\"></formio-alerts>\n</div>\n","import { Component, OnInit, Optional, ViewEncapsulation, Input, NgZone, OnChanges } from '@angular/core';\nimport { FormioAppConfig } from '../../formio.config';\nimport { Formio, Form } from 'formiojs';\nimport { FormioBaseComponent } from '../../FormioBaseComponent';\nimport { CustomTagsService } from '../../custom-component/custom-tags.service';\n\n/* tslint:disable */\n@Component({\n  selector: 'formio',\n  templateUrl: './formio.component.html',\n  styleUrls: ['./formio.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\n/* tslint:enable */\nexport class FormioComponent extends FormioBaseComponent implements OnInit, OnChanges {\n  constructor(\n    public ngZone: NgZone,\n    @Optional() public config: FormioAppConfig,\n    @Optional() public customTags?: CustomTagsService,\n  ) {\n    super(ngZone, config, customTags);\n    if (this.config) {\n      Formio.setBaseUrl(this.config.apiUrl);\n      Formio.setProjectUrl(this.config.appUrl);\n    } else {\n      console.warn('You must provide an AppConfig within your application!');\n    }\n  }\n\n  getRenderer() {\n    return this.renderer || Form;\n  }\n}\n","import {\n  Component,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  ViewEncapsulation,\n  Optional,\n  ElementRef,\n  ViewChild,\n  EventEmitter,\n  Output,\n  NgZone\n} from '@angular/core';\nimport { FormioAppConfig } from '../../formio.config';\nimport {\n  FormioForm,\n  FormioOptions\n} from '../../formio.common';\nimport { Formio, FormBuilder, Utils } from 'formiojs';\nimport { assign } from 'lodash';\nimport { Observable, Subscription } from 'rxjs';\nimport { CustomTagsService } from '../../custom-component/custom-tags.service';\n\n/* tslint:disable */\n@Component({\n  selector: 'form-builder',\n  templateUrl: './formbuilder.component.html',\n  styleUrls: ['./formbuilder.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n/* tslint:enable */\nexport class FormBuilderComponent implements OnInit, OnChanges, OnDestroy {\n  public ready: Promise<object>;\n  public readyResolve: any;\n  public formio: any;\n  public builder: FormBuilder;\n  public componentAdding = false;\n  private refreshSubscription: Subscription;\n  @Input() form?: FormioForm;\n  @Input() options?: FormioOptions;\n  @Input() formbuilder?: any;\n  @Input() noeval ? = false;\n  @Input() refresh?: Observable<void>;\n  @Input() rebuild?: Observable<object>;\n  @Output() change?: EventEmitter<object>;\n  @ViewChild('builder', { static: true }) builderElement?: ElementRef<any>;\n\n  constructor(\n    private ngZone: NgZone,\n    @Optional() private config: FormioAppConfig,\n    @Optional() private customTags?: CustomTagsService\n  ) {\n    if (this.config) {\n      Formio.setBaseUrl(this.config.apiUrl);\n      Formio.setProjectUrl(this.config.appUrl);\n    } else {\n      console.warn('You must provide an AppConfig within your application!');\n    }\n\n    this.change = new EventEmitter();\n    this.ready = new Promise((resolve: any) => {\n      this.readyResolve = resolve;\n    });\n  }\n\n  ngOnInit() {\n    Utils.Evaluator.noeval = this.noeval;\n\n    if (this.refresh) {\n      this.refreshSubscription = this.refresh.subscribe(() => {\n        this.ngZone.runOutsideAngular(() => {\n          this.buildForm(this.form);\n        });\n      });\n    }\n\n    if (this.rebuild) {\n      this.rebuild.subscribe((options) => {\n        this.ngZone.runOutsideAngular(() => {\n          this.rebuildForm(this.form, options);\n        });\n      });\n    }\n  }\n\n  setInstance(instance: any) {\n    this.formio = instance;\n    instance.off('addComponent');\n    instance.off('saveComponent');\n    instance.off('updateComponent');\n    instance.off('removeComponent');\n    instance.on('addComponent', (component, parent, path, index, isNew) => {\n      this.ngZone.run(() => {\n        if (isNew) {\n          this.componentAdding = true;\n        } else {\n          this.change.emit({\n            type: 'addComponent',\n            builder: instance,\n            form: instance.schema,\n            component: component,\n            parent: parent,\n            path: path,\n            index: index\n          });\n          this.componentAdding = false;\n        }\n      });\n    });\n    instance.on('saveComponent', (component, original, parent, path, index, isNew) => {\n      this.ngZone.run(() => {\n        this.change.emit({\n          type: this.componentAdding ? 'addComponent' : 'saveComponent',\n          builder: instance,\n          form: instance.schema,\n          component: component,\n          originalComponent: original,\n          parent: parent,\n          path: path,\n          index: index,\n          isNew: isNew || false\n        });\n        this.componentAdding = false;\n      });\n    });\n    instance.on('updateComponent', (component) => {\n      this.ngZone.run(() => {\n        this.change.emit({\n          type: 'updateComponent',\n          builder: instance,\n          form: instance.schema,\n          component: component\n        });\n      });\n    });\n    instance.on('removeComponent', (component, parent, path, index) => {\n      this.ngZone.run(() => {\n        this.change.emit({\n          type: 'deleteComponent',\n          builder: instance,\n          form: instance.schema,\n          component: component,\n          parent: parent,\n          path: path,\n          index: index\n        });\n      });\n    });\n    this.ngZone.run(() => {\n      this.readyResolve(instance);\n    });\n    return instance;\n  }\n\n  setDisplay(display: String) {\n    return this.builder.setDisplay(display).then(instance => this.setInstance(instance));\n  }\n\n  buildForm(form: any) {\n    if (!form || !this.builderElement || !this.builderElement.nativeElement) {\n      return;\n    }\n\n    if (this.builder) {\n      return this.setDisplay(form.display).then(() => {\n        this.builder.form = form;\n        this.builder.instance.form = form;\n        return this.builder.instance;\n      });\n    }\n\n    return this.rebuildForm(form);\n  }\n\n  rebuildForm(form: any, options?: object) {\n    const Builder = this.formbuilder || FormBuilder;\n    const extraTags = this.customTags ? this.customTags.tags : [];\n    this.builder = new Builder(\n      this.builderElement.nativeElement,\n      form,\n      assign({\n        icons: 'fontawesome',\n        sanitizeConfig: {\n          addTags: extraTags\n        }\n      }, options || this.options || {})\n    );\n    return this.builder.ready.then(instance => this.setInstance(instance));\n  }\n\n  ngOnChanges(changes: any) {\n    Utils.Evaluator.noeval = this.noeval;\n\n    if (changes.form && changes.form.currentValue) {\n      this.ngZone.runOutsideAngular(() => {\n        this.buildForm(changes.form.currentValue || {components: []});\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.refreshSubscription) {\n      this.refreshSubscription.unsubscribe();\n    }\n\n    if (this.formio) {\n      this.formio.destroy();\n    }\n  }\n}\n","<div #builder></div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormioComponent } from './components/formio/formio.component';\nimport { FormBuilderComponent } from './components/formbuilder/formbuilder.component';\nimport { FormioAlerts } from './components/alerts/formio.alerts';\nimport { ParseHtmlContentPipe } from './components/alerts/parse-html-content.pipe';\nimport { FormioAlertsComponent } from './components/alerts/formio.alerts.component';\nimport { FormioLoaderComponent } from './components/loader/formio.loader.component';\nimport { CustomTagsService } from './custom-component/custom-tags.service';\n\n@NgModule({\n  declarations: [\n    FormioComponent,\n    FormBuilderComponent,\n    FormioLoaderComponent,\n    FormioAlertsComponent,\n    ParseHtmlContentPipe\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    FormioComponent,\n    FormBuilderComponent,\n    FormioLoaderComponent,\n    FormioAlertsComponent\n  ],\n  providers: [\n    FormioAlerts,\n    CustomTagsService\n  ],\n  entryComponents: [\n    FormioComponent,\n    FormBuilderComponent\n  ]\n})\nexport class FormioModule {}\n","// @ts-nocheck\nimport { BuilderInfo, Components, ExtendedComponentSchema, Utils as FormioUtils } from 'formiojs';\nimport { FormioCustomComponentInfo, FormioCustomElement, FormioEvent } from '../elements.common';\nimport { clone, isNil, isArray } from 'lodash';\n\nconst BaseInputComponent = Components.components.input;\nconst TextfieldComponent = Components.components.textfield;\n\nexport function createCustomFormioComponent(customComponentOptions: FormioCustomComponentInfo) {\n  return class CustomComponent extends BaseInputComponent {\n    static editForm = customComponentOptions.editForm || TextfieldComponent.editForm;\n    id = FormioUtils.getRandomComponentId();\n    type = customComponentOptions.type;\n    _customAngularElement: FormioCustomElement;\n\n    static schema() {\n      return BaseInputComponent.schema({\n        ...customComponentOptions.schema,\n        type: customComponentOptions.type,\n      });\n    }\n\n    get defaultSchema() {\n      return CustomComponent.schema();\n    }\n\n    get emptyValue() {\n      return customComponentOptions.emptyValue || null;\n    }\n\n    static get builderInfo(): BuilderInfo {\n      return {\n        title: customComponentOptions.title,\n        group: customComponentOptions.group,\n        icon: customComponentOptions.icon,\n        weight: customComponentOptions.weight,\n        documentation: customComponentOptions.documentation,\n        schema: CustomComponent.schema(),\n      };\n    }\n\n    constructor(public component: ExtendedComponentSchema, options: any, data: any) {\n      super(component, {\n        ...options,\n        sanitizeConfig: {\n          addTags: [customComponentOptions.selector],\n        },\n      }, data);\n\n      if (customComponentOptions.extraValidators) {\n        this.validators = this.validators.concat(customComponentOptions.extraValidators);\n      }\n    }\n\n    elementInfo() {\n      const info = super.elementInfo();\n      info.type = customComponentOptions.selector;\n      info.changeEvent = customComponentOptions.changeEvent || 'valueChange';\n      info.attr = {\n        ...info.attr,\n        class: info.attr.class.replace('form-control', 'form-control-custom-field') // remove the form-control class as the custom angular component may look different\n      };\n      return info;\n    }\n\n    get inputInfo() {\n      const info = {\n        id: this.key,\n        ...this.elementInfo()\n      }\n      return info;\n    }\n\n    renderElement(value: any, index: number) {\n      const info = this.inputInfo;\n      return this.renderTemplate(customComponentOptions.template || 'input', {\n        input: info,\n        value,\n        index\n      });\n    }\n\n    attach(element: HTMLElement) {\n      let superAttach = super.attach(element);\n\n      this._customAngularElement = element.querySelector(customComponentOptions.selector);\n\n      // Bind the custom options and the validations to the Angular component's inputs (flattened)\n      if (this._customAngularElement) {\n        // To make sure we have working input in IE...\n        // IE doesn't render it properly if it's not visible on the screen\n        // due to the whole structure applied via innerHTML to the parent\n        // so we need to use appendChild\n        if (!this._customAngularElement.getAttribute('ng-version')) {\n          this._customAngularElement.removeAttribute('ref');\n\n          const newCustomElement = document.createElement(customComponentOptions.selector) as FormioCustomElement;\n\n          newCustomElement.setAttribute('ref', 'input');\n          Object.keys(this.inputInfo.attr).forEach((attr: string) => {\n            newCustomElement.setAttribute(attr, this.inputInfo.attr[attr]);\n          });\n\n          this._customAngularElement.appendChild(newCustomElement);\n          this._customAngularElement = newCustomElement;\n\n          superAttach = super.attach(element);\n        }\n\n        // Bind customOptions\n        for (const key in this.component.customOptions) {\n          if (this.component.customOptions.hasOwnProperty(key)) {\n            this._customAngularElement[key] = this.component.customOptions[key];\n          }\n        }\n        // Bind validate options\n        for (const key in this.component.validate) {\n          if (this.component.validate.hasOwnProperty(key)) {\n            this._customAngularElement[key] = this.component.validate[key];\n          }\n        }\n        // Bind options explicitly set\n        const fieldOptions = customComponentOptions.fieldOptions;\n        if (isArray(fieldOptions) && fieldOptions.length > 0) {\n          for (const key in fieldOptions) {\n            if (fieldOptions.hasOwnProperty(key)) {\n              this._customAngularElement[fieldOptions[key]] = this.component[fieldOptions[key]];\n            }\n          }\n        }\n\n        // Attach event listener for emit event\n        this._customAngularElement.addEventListener('formioEvent', (event: CustomEvent<FormioEvent>) => {\n          this.emit(event.detail.eventName, {\n            ...event.detail.data,\n            component: this.component\n          });\n        });\n\n        // Ensure we bind the value (if it isn't a multiple-value component with no wrapper)\n        if (!this._customAngularElement.value && !this.component.disableMultiValueWrapper) {\n          this.restoreValue();\n        }\n\n      }\n      return superAttach;\n    }\n\n    // Add extra option to support multiple value (e.g. datagrid) with single angular component (disableMultiValueWrapper)\n    useWrapper() {\n      return this.component.hasOwnProperty('multiple') && this.component.multiple && !this.component.disableMultiValueWrapper;\n    }\n\n    get defaultValue() {\n      let defaultValue = this.emptyValue;\n\n      // handle falsy default value\n      if (!isNil(this.component.defaultValue)) {\n        defaultValue = this.component.defaultValue;\n      }\n\n      if (this.component.customDefaultValue && !this.options.preview) {\n        defaultValue = this.evaluate(\n          this.component.customDefaultValue,\n          { value: '' },\n          'value'\n        );\n      }\n\n      return clone(defaultValue);\n    }\n  };\n}\n","import { Injector, Type } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\nimport { Components } from 'formiojs';\nimport { FormioCustomComponentInfo } from '../elements.common';\nimport { createCustomFormioComponent } from './create-custom-component';\nimport { CustomTagsService } from './custom-tags.service';\n\nexport function registerCustomTag(tag: string, injector: Injector): void {\n  injector.get(CustomTagsService).addCustomTag(tag);\n}\n\nexport function registerCustomTags(tags: string[], injector: Injector): void {\n  tags.forEach(tag => registerCustomTag(tag, injector));\n}\n\nexport function registerCustomFormioComponent(\n  options: FormioCustomComponentInfo,\n  angularComponent: Type<any>,\n  injector: Injector,\n): void {\n  registerCustomTag(options.selector, injector);\n\n  const complexCustomComponent = createCustomElement(angularComponent, { injector });\n  customElements.define(options.selector, complexCustomComponent);\n\n  Components.setComponent(options.type, createCustomFormioComponent(options));\n}\n\nexport function registerCustomFormioComponentWithClass(\n  options: FormioCustomComponentInfo,\n  angularComponent: Type<any>,\n  formioClass: any,\n  injector: Injector,\n): void {\n  registerCustomTag(options.selector, injector);\n\n  const complexCustomComponent = createCustomElement(angularComponent, { injector });\n  customElements.define(options.selector, complexCustomComponent);\n\n  Components.setComponent(options.type, formioClass);\n}\n","/*\n * Public API Surface of angular-formio\n */\n\nexport * from './index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵelement","i0.ɵɵelementEnd","i0.ɵɵtemplate","i0.ɵɵproperty","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵclassMapInterpolate1","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","FormioUtils"],"mappings":";;;;;;;;;;MAGa,eAAe;IAD5B;QAEE,WAAM,GAAG,EAAE,CAAC;QACZ,WAAM,GAAG,EAAE,CAAC;KAGb;;8EALY,eAAe;oDAAf,eAAe,WAAf,eAAe;+CAAf,eAAe;cAD3B,UAAU;;;MCgDE,WAAW;IACtB,YACS,OAAe,EACf,SAAkC,EAClC,MAAgB;QAFhB,YAAO,GAAP,OAAO,CAAQ;QACf,cAAS,GAAT,SAAS,CAAyB;QAClC,WAAM,GAAN,MAAM,CAAU;KACrB;;;MCnDO,aAAa;IAExB,YAAmB,GAAW,EAAS,OAAgB;QAApC,QAAG,GAAH,GAAG,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAS;QACrD,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;KAClD;IACD,cAAc,CAAC,EAAO;QACpB,IAAI,MAAW,CAAC;QAChB,IAAI,MAAM,GAAG,KAAK,CAAC;QACnB,OAAO,UAAU,CAAC,MAAM,CAAC,CAAC,QAAuB;YAC/C,IAAI;gBACF,IAAI,CAAC,MAAM,EAAE;oBACX,MAAM,GAAG,IAAI,CAAC;oBACd,EAAE,EAAE;yBACD,IAAI,CAAC,CAAC,OAAY;wBACjB,MAAM,GAAG,OAAO,CAAC;wBACjB,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBACtB,QAAQ,CAAC,QAAQ,EAAE,CAAC;qBACrB,CAAC;yBACD,KAAK,CAAC,CAAC,GAAQ,KAAK,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC7C;qBAAM,IAAI,MAAM,EAAE;oBACjB,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACtB,QAAQ,CAAC,QAAQ,EAAE,CAAC;iBACrB;aACF;YAAC,OAAO,GAAG,EAAE;gBACZ,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACrB;SACF,CAAC,CAAC;KACJ;IACD,QAAQ,CAAC,IAAgB,EAAE,OAAa;QACtC,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;KACvE;IACD,QAAQ,CAAC,KAAW,EAAE,OAAa;QACjC,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;KACxE;IACD,SAAS,CAAC,KAAU,EAAE,OAAa;QACjC,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;KACzE;IACD,cAAc,CAAC,KAAW,EAAE,OAAa;QACvC,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;KAC9E;IACD,eAAe,CAAC,IAAS,EAAE,IAAS,EAAE,UAAe;QACnD,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC;KACvF;IACD,gBAAgB,CAAC,IAAU,EAAE,OAAa;QACxC,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;KAC/E;IACD,cAAc,CAAC,UAAc,EAAE,OAAa;QAC1C,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,CAAC;KACnF;IACD,eAAe,CAAC,KAAW,EAAE,OAAa;QACxC,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;KAC/E;;;MCnDU,oBAAoB;IAG/B,YAAmB,GAAW,EAAS,OAAgB;QAApC,QAAG,GAAH,GAAG,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAS;QACrD,IAAI,CAAC,aAAa,GAAG,IAAI,aAAa,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;KACtD;IAED,QAAQ,CAAC,IAAgB,EAAE,OAAa;QACtC,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,SAAS,EAAE,CAAC;KAC/D;IACD,QAAQ,CAAC,KAAW,EAAE,OAAa;QACjC,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,SAAS,EAAE,CAAC;KAChE;IACD,cAAc,CAAC,KAAW,EAAE,OAAa;QACvC,OAAO,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,SAAS,EAAE,CAAC;KACtE;IACD,eAAe,CAAC,IAAS,EAAE,IAAS,EAAE,UAAe;QACnD,OAAO,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC,SAAS,EAAE,CAAC;KAC/E;IACD,gBAAgB,CAAC,IAAU,EAAE,OAAa;QACxC,OAAO,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,SAAS,EAAE,CAAC;KACvE;IACD,SAAS,CAAC,KAAU,EAAE,OAAa;QACjC,OAAO,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,SAAS,EAAE,CAAC;KACjE;IACD,cAAc,CAAC,UAAc,EAAE,OAAa;QAC1C,OAAO,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,SAAS,EAAE,CAAC;KAC3E;IACD,eAAe,CAAC,KAAW,EAAE,OAAa;QACxC,OAAO,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,SAAS,EAAE,CAAC;KACvE;;;SC/Ba,YAAY,CAAC,KAAU,EAAE,MAAW,EAAE,WAAgB;IACpE,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,SAAS;QAC9B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,GAAG;YACtB,IAAI,GAAG,CAAC,YAAY,EAAE;gBACpB,IAAI,CAAC,MAAM,EAAE,SAAS,IAAI,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aAC7D;YACD,IAAI,GAAG,CAAC,OAAO,EAAE;gBACf,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,KAAK;oBAC/B,IACE,CAAC,OAAO,CAAC,QAAQ,KAAK,OAAO,CAAC,QAAQ,CAAC,IAAI,KAAK,cAAc,CAAC;yBAC9D,OAAO,CAAC,IAAI,KAAK,cAAc,CAAC,EACjC;wBACA,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;qBACjE;iBACF,CAAC,CAAC;aACJ;SACF,CAAC,CAAC;KACJ,CAAC,CAAC;IACH,OAAO,KAAK,CAAC;AACf;;MChBa,YAAY;IAAzB;QACS,WAAM,GAAkB,EAAE,CAAC;KAanC;IAXC,QAAQ,CAAC,KAAkB;QACzB,IAAI,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,CAAC;KACvB;IAED,QAAQ,CAAC,KAAkB;QACzB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACzB;IAED,SAAS,CAAC,MAAqB;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;ACnBH,IAAY,cAKX;AALD,WAAY,cAAc;IACxB,mDAAI,CAAA;IACJ,iDAAG,CAAA;IACH,uDAAM,CAAA;IACN,mDAAI,CAAA;AACN,CAAC,EALW,cAAc,KAAd,cAAc;;MCGb,iBAAiB;IAD9B;QAEE,SAAI,GAAa,EAAE,CAAC;KAKrB;IAHC,YAAY,CAAC,GAAW;QACtB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACrB;;kFALU,iBAAiB;sDAAjB,iBAAiB,WAAjB,iBAAiB;+CAAjB,iBAAiB;cAD7B,UAAU;;;;MCWW,mBAAmB;IA8CvC,YACS,MAAc,EACF,MAAuB,EACvB,UAA8B;QAF1C,WAAM,GAAN,MAAM,CAAQ;QACF,WAAM,GAAN,MAAM,CAAiB;QACvB,eAAU,GAAV,UAAU,CAAoB;QA/C1C,eAAU,GAAS,EAAE,CAAC;QAKtB,WAAM,GAAK,KAAK,CAAC;QAGjB,aAAQ,GAAK,KAAK,CAAC;QACnB,aAAQ,GAAK,KAAK,CAAC;QAMnB,UAAK,GAAS,EAAE,CAAC;QAEjB,0BAAqB,GAAK,KAAK,CAAC;QAC/B,WAAM,GAAG,IAAI,YAAY,EAAU,CAAC;QACpC,gBAAW,GAAG,IAAI,YAAY,EAAU,CAAC;QACzC,wBAAmB,GAAG,IAAI,YAAY,EAAU,CAAC;QACjD,WAAM,GAAG,IAAI,YAAY,EAAU,CAAC;QACpC,aAAQ,GAAG,IAAI,YAAY,EAAU,CAAC;QACtC,aAAQ,GAAG,IAAI,YAAY,EAAU,CAAC;QACtC,iBAAY,GAAG,IAAI,YAAY,EAAU,CAAC;QAC1C,WAAM,GAAG,IAAI,YAAY,EAAU,CAAC;QACpC,YAAO,GAAG,IAAI,YAAY,EAAW,CAAC;QACtC,gBAAW,GAAG,IAAI,YAAY,EAAO,CAAC;QACtC,aAAQ,GAAG,IAAI,YAAY,EAAO,CAAC;QACnC,mBAAc,GAAG,IAAI,YAAY,EAAO,CAAC;QACzC,UAAK,GAAG,IAAI,YAAY,EAAuB,CAAC;QAGnD,mBAAc,GAAG,cAAc,CAAC;QAEhC,gBAAW,GAAG,KAAK,CAAC;QACpB,WAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAI3B,eAAU,GAAG,KAAK,CAAC;QACnB,sBAAiB,GAAG,KAAK,CAAC;QAQhC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,IAAI,OAAO,CAAC,CAAC,KAAK;YACnC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;SACjC,CAAC,CAAC;KACJ;IAED,WAAW;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IAED,kBAAkB;QAChB,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,EAAE,CAAC;QAC9D,OAAO,MAAM,CAAC,EAAE,EAAE;YAChB,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE,aAAa,CAAC;YAC/C,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,EAAE,IAAI,CAAC;YAC7C,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,UAAU,EAAE,IAAI,CAAC,QAAQ;YACzB,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC;YACrC,WAAW,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,aAAa,EAAE,IAAI,CAAC;YACnD,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,cAAc,EAAE;gBACd,OAAO,EAAE,SAAS;aACnB;SACF,EAAE,IAAI,CAAC,aAAa,IAAI,EAAE,CAAC,CAAC;KAC9B;IAED,cAAc;QACZ,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACpC,MAAM,IAAI,IAAI,IAAI,QAAQ,CACxB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,EAC5D,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,kBAAkB,EAAE,CAC1B,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IAED,OAAO,CAAC,IAAgB;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;SACvB;;QAED,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE;YAC1D,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,SAAS,GAAG,EAAE,CAAC;SACjD;QACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACzC,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE;YAC3D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,EAAC,cAAc,EAAE,IAAI,EAAC,CAAC,CAAC;SAC/D;QACD,IAAI,IAAI,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,aAAa,IAAI,EAAE,CAAC,CAAC;SACxD;QACD,IAAI,IAAI,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,aAAa,IAAI,EAAE,CAAC,CAAC;SACxD;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,IAAS,KAAK,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACxF,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,IAAS,KAAK,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACxF,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,KAAU,EAAE,KAAU,EAAE,UAAmB,KAAK,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;QAC1I,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,KAAU,KACvC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CACpD,CAAC;QACF,CAAC,oBAAoB,EAAE,kBAAkB,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,KAAK;YAClE,MAAM,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,KAAK,GAAG,OAAO,CAAC;YACzC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,MACxB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAC7D,CAAC;SACH,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,UAAe,EAAE,KAAc,KACvD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,CAC1D,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,GAAQ,KAAK,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;YACpD,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAC/B,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;SAC1B,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QAC1E,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,UAAe,KACzC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CACtD,CAAC;QAEF,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC;YAC5B,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;gBACd,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACrC,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE;oBAC/B,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,UAAU;wBAC1C,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;qBACtC,CAAC,CAAC;iBACJ;aACF,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,MAAM,CAAC;SACpB,CAAC,CAAC;KACJ;IAED,UAAU;QACR,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,OAAO;SACR;QAED,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,EAAE,CAAC;QAC9D,MAAM,cAAc,GAAkB;YACpC,MAAM,EAAE;gBACN,OAAO,EAAE,oDAAoD;aAC9D;YACD,MAAM,EAAE;gBACN,aAAa,EAAE,sBAAsB;aACtC;YACD,aAAa,EAAE,KAAK;YACpB,KAAK,EAAE;gBACL,YAAY,EAAE,IAAI;aACnB;YACD,cAAc,EAAE;gBACd,OAAO,EAAE,SAAS;aACnB;YACD,cAAc,EAAE,cAAc,CAAC,GAAG;SACnC,CAAC;QACF,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAC3D,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE;YAC9B,IAAI,CAAC,OAAO,CAAC,cAAc,GAAG,cAAc,CAAC,IAAI,CAAC;SACnD;QACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;KACzB;IAED,QAAQ;QACN,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC/B,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,OAAO,IAAI,CAAC,QAAQ,KAAK,QAAQ,EAAE;gBACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;aACtC;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,IAAY;oBACnC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;iBAC7B,CAAC,CAAC;aACJ;SACF;QAED,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,OAA2B,KACjD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CACxB,CAAC;SACH;QAED,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,GAAQ,KAAK,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;SACvD;QAED,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,OAAe;gBACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;oBACnB,IAAI,EAAE,SAAS;oBACf,OAAO,EAAE,OAAO,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,sBAAsB,CAAC;iBAC9D,CAAC,CAAC;aACJ,CAAC,CAAC;SACJ;QAED,IAAI,IAAI,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACjB,IAAI,CAAC,OAAO,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAC5C;YACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,SAAS,CACtD,CAAC,IAAgB;gBACf,IAAI,IAAI,IAAI,IAAI,CAAC,UAAU,EAAE;oBAC3B,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;wBAC5B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;qBACpB,CAAC,CAAC;iBACJ;;gBAGD,IACE,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC;oBACxB,IAAI,CAAC,OAAO;oBACZ,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,YAAY,EAChC;oBACA,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,SAAS,CACrC,CAAC,UAAe;wBACd,IAAI,IAAI,CAAC,QAAQ,EAAE;4BACjB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;yBACrC;wBACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,UAAU,CAAC;qBACvD,EACD,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CACzB,CAAC;iBACH;aACF,EACD,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CACzB,CAAC;SACH;QACD,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YAC7B,IAAI,CAAC,OAAO,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAC5C;KACF;IAED,WAAW;QACT,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;SACvB;KACF;IAED,SAAS,CAAC,OAA2B;QACnC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;YACpB,IAAI,OAAO,CAAC,IAAI,EAAE;gBAChB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;oBACrC,IAAI,OAAO,CAAC,UAAU,EAAE;wBACtB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;qBAC/C;iBACF,CAAC,CAAC;aACJ;iBAAM,IAAI,OAAO,CAAC,UAAU,EAAE;gBAC7B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;aAC/C;iBAAM;gBACL,QAAQ,OAAO,CAAC,QAAQ;oBACtB,KAAK,YAAY;wBACf,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC;wBACvC,MAAM;oBACR,KAAK,MAAM;wBACT,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC;wBACjC,MAAM;iBACT;aACF;SACF,CAAC,CAAC;KACJ;IAED,WAAW,CAAC,OAAY;QACtB,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC/B,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,IAAI,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE;YAC7C,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;gBAC5B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aACzC,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;YACpB,IAAI,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,UAAU,CAAC,YAAY,EAAE;gBACzD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,EAAE;oBACzD,cAAc,EAAE,KAAK;iBACtB,CAAC,CAAC;aACJ;YAED,IAAI,OAAO,CAAC,cAAc,IAAI,OAAO,CAAC,cAAc,CAAC,YAAY,EAAE;gBACjE,MAAM,gBAAgB,GAAG,OAAO,CAAC,cAAc,CAAC,YAAY,CAAC;gBAC7D,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,GAAG,gBAAgB,CAAC;gBAC5C,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,SAAS;oBACnC,SAAS,CAAC,OAAO,CAAC,IAAI,GAAG,gBAAgB,CAAC;oBAC1C,IAAI,gBAAgB,CAAC,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;wBACtD,SAAS,CAAC,OAAO,GAAG,KAAK,CAAC;qBAC3B;iBACF,CAAC,CAAC;aACJ;SACF,CAAC,CAAC;KACJ;IAED,UAAU,CAAC,IAAS;QAClB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC1B;IAED,UAAU,CAAC,IAAS;QAClB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC1B;IAED,QAAQ,CAAC,UAAe,EAAE,KAAc,EAAE,MAAgB;QACxD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;SAC5C;QACD,IAAI,CAAC,MAAM,EAAE;YACX,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC9B;QACD,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;gBACnB,IAAI,EAAE,SAAS;gBACf,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,sBAAsB,CAAC;aACnD,CAAC,CAAC;SACJ;KACF;IAED,OAAO,CAAC,GAAQ;QACd,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QAC1B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAEvB,IAAI,CAAC,GAAG,EAAE;YACR,OAAO;SACR;;QAGD,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;;QAGhD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAE9B,IAAI,GAAG,CAAC,MAAM,EAAE;YACd,OAAO;SACR;QAED,IAAI,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE;YAChC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;SACzC;;QAGD,MAAM,CAAC,OAAO,CAAC,CAAC,KAAU;YACxB,MAAM,EACJ,OAAO,EACP,KAAK,GACN,GAAG,KAAK;kBACL,KAAK,CAAC,OAAO;sBACX;wBACA,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;wBAChE,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,IAAI,CAAC;qBAClD;sBACC;wBACA,OAAO,EAAE,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,QAAQ,EAAE;wBAC1C,KAAK,EAAE,KAAK,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE;qBACtC;kBACD;oBACA,OAAO,EAAE,EAAE;oBACX,KAAK,EAAE,EAAE;iBACV,CAAC;YAEJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;gBACnB,IAAI,EAAE,QAAQ;gBACd,OAAO;gBACP,SAAS,EAAE,KAAK,CAAC,SAAS;aAC3B,CAAC,CAAC;YAEH,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI;oBACjB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;oBACjD,IAAI,SAAS,EAAE;wBACb,MAAM,UAAU,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,SAAS,GAAG,CAAC,SAAS,CAAC,CAAC;wBACtE,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;qBACrE;iBACF,CAAC,CAAC;aACJ;SACF,CAAC,CAAC;KACJ;IAED,eAAe,CAAC,GAAQ;QACtB,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;SACnC;KACF;IAED,aAAa,CAAC,UAAkB,EAAE,KAAK,GAAG,KAAK;QAC7C,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE;YACvC,IAAI,CAAC,OAAO;iBACT,cAAc,CAAC,UAAU,CAAC;iBAC1B,SAAS,CACR,CAAC,GAAO,KAAK,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,EACrC,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CACzB,CAAC;SACL;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;SAClC;KACF;IAED,UAAU,CAAC,UAAe,EAAE,KAAK,GAAG,KAAK;;QAEvC,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,OAAO;SACR;QACD,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;;;QAInC,MAAM,YAAY,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,oBAAoB,CAAC,CAAC;QAC7D,IAAI,YAAY,EAAE;YAChB,YAAY,CAAC,UAAU,EAAE,CAAC,GAAgB,EAAE,GAAW;gBACrD,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;oBAClB,OAAO;iBACR;gBACD,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;aAChC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;SACvC;KACF;IAED,QAAQ,CAAC,KAAU,EAAE,KAAU,EAAE,UAAmB;QAClD,IAAI,IAAI,CAAC,qBAAqB,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;YACzD,MAAM,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,eAAe,EAAE,EAAE,CAAC,CAAC;YAC9C,MAAM,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,eAAe,EAAE,EAAE,CAAC,CAAC;YAC9C,MAAM,SAAS,GAAG,GAAG,CAAC,IAAI,EAAE,kBAAkB,EAAE,KAAK,CAAC,CAAC;YACvD,IAAI,SAAS,KAAK,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,EAAE;gBACjD,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;aACtB;SACF;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,iCAAK,KAAK,KAAE,KAAK,EAAE,UAAU,IAAE,CAAC;KACxD;;sFAhcmB,mBAAmB;qDAAnB,mBAAmB;;;;;;+CAAnB,mBAAmB;cAHxC,SAAS;eAAC;gBACT,QAAQ,EAAE,EAAE;aACb;;sBAiDI,QAAQ;;sBACR,QAAQ;wBAhDF,IAAI;kBAAZ,KAAK;YACG,UAAU;kBAAlB,KAAK;YACG,GAAG;kBAAX,KAAK;YACG,GAAG;kBAAX,KAAK;YACG,OAAO;kBAAf,KAAK;YACG,OAAO;kBAAf,KAAK;YACG,MAAM;kBAAd,KAAK;YACG,aAAa;kBAArB,KAAK;YACG,aAAa;kBAArB,KAAK;YACG,QAAQ;kBAAhB,KAAK;YACG,QAAQ;kBAAhB,KAAK;YACG,cAAc;kBAAtB,KAAK;YACG,OAAO;kBAAf,KAAK;YACG,KAAK;kBAAb,KAAK;YACG,OAAO;kBAAf,KAAK;YACG,QAAQ;kBAAhB,KAAK;YACG,KAAK;kBAAb,KAAK;YACG,QAAQ;kBAAhB,KAAK;YACG,qBAAqB;kBAA7B,KAAK;YACI,MAAM;kBAAf,MAAM;YACG,WAAW;kBAApB,MAAM;YACG,mBAAmB;kBAA5B,MAAM;YACG,MAAM;kBAAf,MAAM;YACG,QAAQ;kBAAjB,MAAM;YACG,QAAQ;kBAAjB,MAAM;YACG,YAAY;kBAArB,MAAM;YACG,MAAM;kBAAf,MAAM;YACG,OAAO;kBAAhB,MAAM;YACG,WAAW;kBAApB,MAAM;YACG,QAAQ;kBAAjB,MAAM;YACG,cAAc;kBAAvB,MAAM;YACG,KAAK;kBAAd,MAAM;YACgC,aAAa;kBAAnD,SAAS;mBAAC,QAAQ,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;;;IC9CvCA,2BACE;IAAAC,sBAAiC;IACnCC,cAAM;;MCKO,qBAAqB;;0FAArB,qBAAqB;uDAArB,qBAAqB;QDPlCC,mEACE;;QADiCC,iCAAiB;;+CCOvC,qBAAqB;cALjC,SAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,SAAS,EAAE,CAAC,gCAAgC,CAAC;gBAC7C,WAAW,EAAE,gCAAgC;aAC9C;gBAEU,SAAS;kBAAjB,KAAK;;;MCLK,oBAAoB;;;;;IAM/B,SAAS,CAAC,OAAO;QACf,MAAM,aAAa,GAAG,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAE/F,OAAO,aAAa,CAAC,WAAW,CAAC;KAClC;;wFAVU,oBAAoB;4EAApB,oBAAoB;+CAApB,oBAAoB;cADhC,IAAI;eAAC,EAAE,IAAI,EAAE,kBAAkB,EAAE,IAAI,EAAE,KAAK,EAAE;;;;;ICF/CJ,2BACE;IADyFK,qOAAqC;IAC9HC,SACF;;IAAAJ,cAAM;;;IAFmCK,yDAAoC;IAC3EC,YACF;IADEC,kEACF;;MCKa,qBAAqB;IAJlC;QAMY,mBAAc,GAAG,IAAI,YAAY,EAAU,CAAC;KASvD;IARC,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,IAAI,CAAC,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;SAClC;KACF;IACD,YAAY,CAAE,KAAK,EAAE,KAAK;QACxB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;KAC/C;;0FAVU,qBAAqB;uDAArB,qBAAqB;QDPlCN,mEACE;;QADGC,wCAAmC;;+CCO3B,qBAAqB;cAJjC,SAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,gCAAgC;aAC9C;gBAEU,MAAM;kBAAd,KAAK;YACI,cAAc;kBAAvB,MAAM;;;;ICRPJ,2BACE;IAAAC,gCAAuD;IACzDC,cAAM;;;IADWM,YAAuB;IAAvBJ,yCAAuB;;;;IAExCJ,qCAA8M;IAA7EK,8NAA0C;IAAmBH,cAAgB;;;IAAlCE,mCAAiB;;;;IAE7LJ,qCAAiN;IAA7EK,8NAA0C;IAAmBH,cAAgB;;;IAAlCE,mCAAiB;;ACAlM;AAOA;MACa,eAAgB,SAAQ,mBAAmB;IACtD,YACS,MAAc,EACF,MAAuB,EACvB,UAA8B;QAEjD,KAAK,CAAC,MAAM,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;QAJ3B,WAAM,GAAN,MAAM,CAAQ;QACF,WAAM,GAAN,MAAM,CAAiB;QACvB,eAAU,GAAV,UAAU,CAAoB;QAGjD,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACtC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SAC1C;aAAM;YACL,OAAO,CAAC,IAAI,CAAC,wDAAwD,CAAC,CAAC;SACxE;KACF;IAED,WAAW;QACT,OAAO,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC;KAC9B;;8EAjBU,eAAe;iDAAf,eAAe;QDd5BJ,wBACE;QAAAG,6DACE;QAEFA,iFAA8L;QAC9LF,4BAAmB;QACnBE,iFAAiM;QACnMD,cAAM;;QANCM,YAAiB;QAAjBJ,iCAAiB;QAGPI,YAAiH;QAAjHJ,mIAAiH;QAEjHI,YAAoH;QAApHJ,sIAAoH;;+CCQxH,eAAe;cAP3B,SAAS;eAAC;gBACT,QAAQ,EAAE,QAAQ;gBAClB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;gBACtC,aAAa,EAAE,iBAAiB,CAAC,IAAI;aACtC;;sBAKI,QAAQ;;sBACR,QAAQ;;;;ACMb;AAOA;MACa,oBAAoB;IAgB/B,YACU,MAAc,EACF,MAAuB,EACvB,UAA8B;QAF1C,WAAM,GAAN,MAAM,CAAQ;QACF,WAAM,GAAN,MAAM,CAAiB;QACvB,eAAU,GAAV,UAAU,CAAoB;QAd7C,oBAAe,GAAG,KAAK,CAAC;QAKtB,WAAM,GAAK,KAAK,CAAC;QAWxB,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACtC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SAC1C;aAAM;YACL,OAAO,CAAC,IAAI,CAAC,wDAAwD,CAAC,CAAC;SACxE;QAED,IAAI,CAAC,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QACjC,IAAI,CAAC,KAAK,GAAG,IAAI,OAAO,CAAC,CAAC,OAAY;YACpC,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;SAC7B,CAAC,CAAC;KACJ;IAED,QAAQ;QACN,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAErC,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;gBAChD,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;oBAC5B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC3B,CAAC,CAAC;aACJ,CAAC,CAAC;SACJ;QAED,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,OAAO;gBAC7B,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;oBAC5B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;iBACtC,CAAC,CAAC;aACJ,CAAC,CAAC;SACJ;KACF;IAED,WAAW,CAAC,QAAa;QACvB,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;QACvB,QAAQ,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC7B,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC9B,QAAQ,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAChC,QAAQ,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAChC,QAAQ,CAAC,EAAE,CAAC,cAAc,EAAE,CAAC,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK;YAChE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;gBACd,IAAI,KAAK,EAAE;oBACT,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;iBAC7B;qBAAM;oBACL,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;wBACf,IAAI,EAAE,cAAc;wBACpB,OAAO,EAAE,QAAQ;wBACjB,IAAI,EAAE,QAAQ,CAAC,MAAM;wBACrB,SAAS,EAAE,SAAS;wBACpB,MAAM,EAAE,MAAM;wBACd,IAAI,EAAE,IAAI;wBACV,KAAK,EAAE,KAAK;qBACb,CAAC,CAAC;oBACH,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;iBAC9B;aACF,CAAC,CAAC;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,EAAE,CAAC,eAAe,EAAE,CAAC,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK;YAC3E,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;gBACd,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;oBACf,IAAI,EAAE,IAAI,CAAC,eAAe,GAAG,cAAc,GAAG,eAAe;oBAC7D,OAAO,EAAE,QAAQ;oBACjB,IAAI,EAAE,QAAQ,CAAC,MAAM;oBACrB,SAAS,EAAE,SAAS;oBACpB,iBAAiB,EAAE,QAAQ;oBAC3B,MAAM,EAAE,MAAM;oBACd,IAAI,EAAE,IAAI;oBACV,KAAK,EAAE,KAAK;oBACZ,KAAK,EAAE,KAAK,IAAI,KAAK;iBACtB,CAAC,CAAC;gBACH,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;aAC9B,CAAC,CAAC;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,EAAE,CAAC,iBAAiB,EAAE,CAAC,SAAS;YACvC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;gBACd,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;oBACf,IAAI,EAAE,iBAAiB;oBACvB,OAAO,EAAE,QAAQ;oBACjB,IAAI,EAAE,QAAQ,CAAC,MAAM;oBACrB,SAAS,EAAE,SAAS;iBACrB,CAAC,CAAC;aACJ,CAAC,CAAC;SACJ,CAAC,CAAC;QACH,QAAQ,CAAC,EAAE,CAAC,iBAAiB,EAAE,CAAC,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK;YAC5D,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;gBACd,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;oBACf,IAAI,EAAE,iBAAiB;oBACvB,OAAO,EAAE,QAAQ;oBACjB,IAAI,EAAE,QAAQ,CAAC,MAAM;oBACrB,SAAS,EAAE,SAAS;oBACpB,MAAM,EAAE,MAAM;oBACd,IAAI,EAAE,IAAI;oBACV,KAAK,EAAE,KAAK;iBACb,CAAC,CAAC;aACJ,CAAC,CAAC;SACJ,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;YACd,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;SAC7B,CAAC,CAAC;QACH,OAAO,QAAQ,CAAC;KACjB;IAED,UAAU,CAAC,OAAe;QACxB,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;KACtF;IAED,SAAS,CAAC,IAAS;QACjB,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE;YACvE,OAAO;SACR;QAED,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC;gBACxC,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;gBACzB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;gBAClC,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;aAC9B,CAAC,CAAC;SACJ;QAED,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;KAC/B;IAED,WAAW,CAAC,IAAS,EAAE,OAAgB;QACrC,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,IAAI,WAAW,CAAC;QAChD,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,EAAE,CAAC;QAC9D,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CACxB,IAAI,CAAC,cAAc,CAAC,aAAa,EACjC,IAAI,EACJ,MAAM,CAAC;YACL,KAAK,EAAE,aAAa;YACpB,cAAc,EAAE;gBACd,OAAO,EAAE,SAAS;aACnB;SACF,EAAE,OAAO,IAAI,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC,CAClC,CAAC;QACF,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;KACxE;IAED,WAAW,CAAC,OAAY;QACtB,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAErC,IAAI,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE;YAC7C,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;gBAC5B,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,IAAI,EAAC,UAAU,EAAE,EAAE,EAAC,CAAC,CAAC;aAC/D,CAAC,CAAC;SACJ;KACF;IAED,WAAW;QACT,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC5B,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;SACxC;QAED,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;SACvB;KACF;;wFAjLU,oBAAoB;sDAApB,oBAAoB;;;;;;QChCjCH,4BAAoB;;+CDgCP,oBAAoB;cAPhC,SAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;gBAC3C,aAAa,EAAE,iBAAiB,CAAC,IAAI;aACtC;;sBAoBI,QAAQ;;sBACR,QAAQ;wBAZF,IAAI;kBAAZ,KAAK;YACG,OAAO;kBAAf,KAAK;YACG,WAAW;kBAAnB,KAAK;YACG,MAAM;kBAAd,KAAK;YACG,OAAO;kBAAf,KAAK;YACG,OAAO;kBAAf,KAAK;YACI,MAAM;kBAAf,MAAM;YACiC,cAAc;kBAArD,SAAS;mBAAC,SAAS,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;;MEV3B,YAAY;;6CAAZ,YAAY;oGAAZ,YAAY,mBATZ;QACT,YAAY;QACZ,iBAAiB;KAClB,YAZQ;YACP,YAAY;SACb;qFAgBU,YAAY,mBAxBrB,eAAe;QACf,oBAAoB;QACpB,qBAAqB;QACrB,qBAAqB;QACrB,oBAAoB,aAGpB,YAAY,aAGZ,eAAe;QACf,oBAAoB;QACpB,qBAAqB;QACrB,qBAAqB;+CAWZ,YAAY;cA1BxB,QAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,eAAe;oBACf,oBAAoB;oBACpB,qBAAqB;oBACrB,qBAAqB;oBACrB,oBAAoB;iBACrB;gBACD,OAAO,EAAE;oBACP,YAAY;iBACb;gBACD,OAAO,EAAE;oBACP,eAAe;oBACf,oBAAoB;oBACpB,qBAAqB;oBACrB,qBAAqB;iBACtB;gBACD,SAAS,EAAE;oBACT,YAAY;oBACZ,iBAAiB;iBAClB;gBACD,eAAe,EAAE;oBACf,eAAe;oBACf,oBAAoB;iBACrB;aACF;;;ACnCD;AAKA,MAAM,kBAAkB,GAAG,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC;AACvD,MAAM,kBAAkB,GAAG,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC;SAE3C,2BAA2B,CAAC,sBAAiD;;IAC3F,YAAO,MAAM,eAAgB,SAAQ,kBAAkB;YAgCrD,YAAmB,SAAkC,EAAE,OAAY,EAAE,IAAS;gBAC5E,KAAK,CAAC,SAAS,kCACV,OAAO,KACV,cAAc,EAAE;wBACd,OAAO,EAAE,CAAC,sBAAsB,CAAC,QAAQ,CAAC;qBAC3C,KACA,IAAI,CAAC,CAAC;gBANQ,cAAS,GAAT,SAAS,CAAyB;gBA9BrD,OAAE,GAAGS,KAAW,CAAC,oBAAoB,EAAE,CAAC;gBACxC,SAAI,GAAG,sBAAsB,CAAC,IAAI,CAAC;gBAqCjC,IAAI,sBAAsB,CAAC,eAAe,EAAE;oBAC1C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,sBAAsB,CAAC,eAAe,CAAC,CAAC;iBAClF;aACF;YArCD,OAAO,MAAM;gBACX,OAAO,kBAAkB,CAAC,MAAM,iCAC3B,sBAAsB,CAAC,MAAM,KAChC,IAAI,EAAE,sBAAsB,CAAC,IAAI,IACjC,CAAC;aACJ;YAED,IAAI,aAAa;gBACf,OAAO,eAAe,CAAC,MAAM,EAAE,CAAC;aACjC;YAED,IAAI,UAAU;gBACZ,OAAO,sBAAsB,CAAC,UAAU,IAAI,IAAI,CAAC;aAClD;YAED,WAAW,WAAW;gBACpB,OAAO;oBACL,KAAK,EAAE,sBAAsB,CAAC,KAAK;oBACnC,KAAK,EAAE,sBAAsB,CAAC,KAAK;oBACnC,IAAI,EAAE,sBAAsB,CAAC,IAAI;oBACjC,MAAM,EAAE,sBAAsB,CAAC,MAAM;oBACrC,aAAa,EAAE,sBAAsB,CAAC,aAAa;oBACnD,MAAM,EAAE,eAAe,CAAC,MAAM,EAAE;iBACjC,CAAC;aACH;YAeD,WAAW;gBACT,MAAM,IAAI,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;gBACjC,IAAI,CAAC,IAAI,GAAG,sBAAsB,CAAC,QAAQ,CAAC;gBAC5C,IAAI,CAAC,WAAW,GAAG,sBAAsB,CAAC,WAAW,IAAI,aAAa,CAAC;gBACvE,IAAI,CAAC,IAAI,mCACJ,IAAI,CAAC,IAAI,KACZ,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,EAAE,2BAA2B,CAAC;mBAC5E,CAAC;gBACF,OAAO,IAAI,CAAC;aACb;YAED,IAAI,SAAS;gBACX,MAAM,IAAI,mBACR,EAAE,EAAE,IAAI,CAAC,GAAG,IACT,IAAI,CAAC,WAAW,EAAE,CACtB,CAAA;gBACD,OAAO,IAAI,CAAC;aACb;YAED,aAAa,CAAC,KAAU,EAAE,KAAa;gBACrC,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;gBAC5B,OAAO,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,QAAQ,IAAI,OAAO,EAAE;oBACrE,KAAK,EAAE,IAAI;oBACX,KAAK;oBACL,KAAK;iBACN,CAAC,CAAC;aACJ;YAED,MAAM,CAAC,OAAoB;gBACzB,IAAI,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBAExC,IAAI,CAAC,qBAAqB,GAAG,OAAO,CAAC,aAAa,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;;gBAGpF,IAAI,IAAI,CAAC,qBAAqB,EAAE;;;;;oBAK9B,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE;wBAC1D,IAAI,CAAC,qBAAqB,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;wBAElD,MAAM,gBAAgB,GAAG,QAAQ,CAAC,aAAa,CAAC,sBAAsB,CAAC,QAAQ,CAAwB,CAAC;wBAExG,gBAAgB,CAAC,YAAY,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;wBAC9C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,IAAY;4BACpD,gBAAgB,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;yBAChE,CAAC,CAAC;wBAEH,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;wBACzD,IAAI,CAAC,qBAAqB,GAAG,gBAAgB,CAAC;wBAE9C,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;qBACrC;;oBAGD,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;wBAC9C,IAAI,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;4BACpD,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;yBACrE;qBACF;;oBAED,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE;wBACzC,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;4BAC/C,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;yBAChE;qBACF;;oBAED,MAAM,YAAY,GAAG,sBAAsB,CAAC,YAAY,CAAC;oBACzD,IAAI,OAAO,CAAC,YAAY,CAAC,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;wBACpD,KAAK,MAAM,GAAG,IAAI,YAAY,EAAE;4BAC9B,IAAI,YAAY,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;gCACpC,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;6BACnF;yBACF;qBACF;;oBAGD,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,KAA+B;wBACzF,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,kCAC3B,KAAK,CAAC,MAAM,CAAC,IAAI,KACpB,SAAS,EAAE,IAAI,CAAC,SAAS,IACzB,CAAC;qBACJ,CAAC,CAAC;;oBAGH,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,wBAAwB,EAAE;wBACjF,IAAI,CAAC,YAAY,EAAE,CAAC;qBACrB;iBAEF;gBACD,OAAO,WAAW,CAAC;aACpB;;YAGD,UAAU;gBACR,OAAO,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,wBAAwB,CAAC;aACzH;YAED,IAAI,YAAY;gBACd,IAAI,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC;;gBAGnC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE;oBACvC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;iBAC5C;gBAED,IAAI,IAAI,CAAC,SAAS,CAAC,kBAAkB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;oBAC9D,YAAY,GAAG,IAAI,CAAC,QAAQ,CAC1B,IAAI,CAAC,SAAS,CAAC,kBAAkB,EACjC,EAAE,KAAK,EAAE,EAAE,EAAE,EACb,OAAO,CACR,CAAC;iBACH;gBAED,OAAO,KAAK,CAAC,YAAY,CAAC,CAAC;aAC5B;SACF;QAjKQ,WAAQ,GAAG,sBAAsB,CAAC,QAAQ,IAAI,kBAAkB,CAAC,QAAS;WAiKjF;AACJ;;SCrKgB,iBAAiB,CAAC,GAAW,EAAE,QAAkB;IAC/D,QAAQ,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;AACpD,CAAC;SAEe,kBAAkB,CAAC,IAAc,EAAE,QAAkB;IACnE,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,iBAAiB,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC;AACxD,CAAC;SAEe,6BAA6B,CAC3C,OAAkC,EAClC,gBAA2B,EAC3B,QAAkB;IAElB,iBAAiB,CAAC,OAAO,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;IAE9C,MAAM,sBAAsB,GAAG,mBAAmB,CAAC,gBAAgB,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC;IACnF,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,sBAAsB,CAAC,CAAC;IAEhE,UAAU,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,2BAA2B,CAAC,OAAO,CAAC,CAAC,CAAC;AAC9E,CAAC;SAEe,sCAAsC,CACpD,OAAkC,EAClC,gBAA2B,EAC3B,WAAgB,EAChB,QAAkB;IAElB,iBAAiB,CAAC,OAAO,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;IAE9C,MAAM,sBAAsB,GAAG,mBAAmB,CAAC,gBAAgB,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC;IACnF,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,sBAAsB,CAAC,CAAC;IAEhE,UAAU,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;AACrD;;ACxCA;;;;ACAA;;;;;;"}