{"version":3,"file":"angular-formio-grid.js","sources":["../../../projects/angular-formio/grid/src/types/grid-footer-positions.ts","../../../projects/angular-formio/grid/src/GridHeaderComponent.ts","../../../projects/angular-formio/grid/src/types/grid-header.ts","../../../projects/angular-formio/grid/src/form/FormGridHeader.component.html","../../../projects/angular-formio/grid/src/form/FormGridHeader.component.ts","../../../projects/angular-formio/grid/src/GridBodyComponent.ts","../../../projects/angular-formio/grid/src/form/FormGridBody.component.html","../../../projects/angular-formio/grid/src/form/FormGridBody.component.ts","../../../projects/angular-formio/grid/src/GridFooterComponent.ts","../../../projects/angular-formio/grid/src/form/FormGridFooter.component.html","../../../projects/angular-formio/grid/src/form/FormGridFooter.component.ts","../../../projects/angular-formio/grid/src/form/index.ts","../../../projects/angular-formio/grid/src/submission/SubmissionGridHeader.component.html","../../../projects/angular-formio/grid/src/submission/SubmissionGridHeader.component.ts","../../../projects/angular-formio/grid/src/submission/SubmissionGridBody.component.html","../../../projects/angular-formio/grid/src/submission/SubmissionGridBody.component.ts","../../../projects/angular-formio/grid/src/submission/SubmissionGridFooter.component.html","../../../projects/angular-formio/grid/src/submission/SubmissionGridFooter.component.ts","../../../projects/angular-formio/grid/src/submission/index.ts","../../../projects/angular-formio/grid/src/grid.component.html","../../../projects/angular-formio/grid/src/grid.component.ts","../../../projects/angular-formio/grid/src/grid.module.ts","../../../projects/angular-formio/grid/src/public_api.ts","../../../projects/angular-formio/grid/src/angular-formio-grid.ts"],"sourcesContent":["export enum GridFooterPositions {\n  bottom,\n  top,\n  both\n}\n","import { Output, EventEmitter, ViewChild, TemplateRef, Input, Component } from '@angular/core';\nimport {FormioPromiseService} from 'angular-formio';\nimport {GridHeader} from './types/grid-header';\n\n@Component({\n  template: ''\n})\nexport abstract class GridHeaderComponent {\n  @Input() actionAllowed: any;\n  @Output() sort: EventEmitter<GridHeader>;\n  @ViewChild(TemplateRef, {static: true}) template: TemplateRef<any>;\n  public headers: Array<GridHeader>;\n  constructor() {\n    this.headers = [];\n    this.sort = new EventEmitter();\n  }\n\n  get numHeaders() {\n    return this.headers.length;\n  }\n\n  load(formio: FormioPromiseService, query?: any, columns?: Array<any>): Promise<any> {\n    return Promise.resolve([]);\n  }\n}\n","import {ComponentInstance} from 'angular-formio';\n\nexport interface GridHeader {\n  component?: ComponentInstance;\n  key: string;\n  sort?: SortType;\n  label: string;\n  renderCell?(cellValue: any, component?: ComponentInstance): string;\n}\n\nexport enum SortType {\n  ASC = 'asc',\n  DESC = 'desc'\n}\n","<ng-template>\n  <thead>\n    <tr>\n      <th>\n        <div class=\"row\">\n          <div class=\"col-sm-8\">\n            <a (click)=\"sort.emit(header)\">\n              {{ header.label }}&nbsp;<span [ngClass]=\"{'glyphicon-triangle-top fa-caret-up': (header.sort === 'asc'), 'glyphicon-triangle-bottom fa-caret-down': (header.sort === 'desc')}\" class=\"glyphicon fa\" *ngIf=\"header.sort\"></span>\n            </a>\n          </div>\n          <div class=\"col-sm-4\">\n            Operations\n          </div>\n        </div>\n      </th>\n    </tr>\n  </thead>\n</ng-template>\n","import {Component} from '@angular/core';\nimport {GridHeaderComponent} from '../GridHeaderComponent';\nimport {GridHeader, SortType} from '../types/grid-header';\n\n@Component({\n  selector: 'form-grid-header',\n  templateUrl: './FormGridHeader.component.html'\n})\nexport class FormGridHeaderComponent extends GridHeaderComponent {\n  public header: GridHeader;\n  load(formio?: any) {\n    this.header = {\n      label: 'Title',\n      key: 'title',\n      sort: SortType.ASC\n    };\n    this.headers = [this.header];\n    return Promise.resolve(this.headers);\n  }\n\n  get numHeaders() {\n    return 2;\n  }\n}\n","import { Input, Output, EventEmitter, ViewChild, TemplateRef, Component } from '@angular/core';\nimport { each, clone } from 'lodash';\nimport { GridHeaderComponent } from './GridHeaderComponent';\nimport {FormioPromiseService} from 'angular-formio';\n\n@Component({\n  template: ''\n})\nexport abstract class GridBodyComponent {\n  @Input() header: GridHeaderComponent;\n  @Input() actionAllowed: any;\n  @Output() rowSelect: EventEmitter<any>;\n  @Output() rowAction: EventEmitter<any>;\n  @ViewChild(TemplateRef, {static: true}) template: TemplateRef<any>;\n  public rows: Array<any>;\n  public loading: Boolean;\n  public firstItem = 0;\n  public lastItem = 0;\n  public skip = 0;\n  public limit = 0;\n  public total = 0;\n  constructor() {\n    this.rowSelect = new EventEmitter();\n    this.rowAction = new EventEmitter();\n    this.loading = true;\n  }\n\n  load(formio: FormioPromiseService, query?: any): Promise<any> {\n    return formio.loadForm(query);\n  }\n\n  onRowSelect(event, row) {\n    event.preventDefault();\n    this.rowSelect.emit(row);\n  }\n\n  onRowAction(event, row, action) {\n    event.preventDefault();\n    this.rowAction.emit({ row, action });\n  }\n\n  /**\n   * Set the rows for this Grid body.\n   *\n   * @param query\n   * @param items\n   * @return any\n   */\n  setRows(query: any, items: any) {\n    this.rows = [];\n\n    if (typeof items !== 'object') {\n      this.firstItem = 0;\n      this.lastItem = 0;\n      this.total = 0;\n      this.skip = 0;\n      this.loading = false;\n      return this.rows;\n    }\n\n    this.firstItem = query.skip + 1;\n    this.lastItem = this.firstItem + items.length - 1;\n    this.total = items.serverCount;\n    this.limit = query.limit;\n    this.skip = Math.floor(items.skip / query.limit) + 1;\n    this.loading = false;\n    each(items, (item: any) => {\n      this.rows.push(clone(item));\n    });\n    return this.rows;\n  }\n}\n","<ng-template>\n  <tbody *ngIf=\"rows\">\n    <tr *ngFor=\"let form of rows\">\n      <td>\n        <div class=\"row\">\n          <div class=\"col-sm-8\">\n            <a routerLink=\"{{form._id}}/view\" (click)=\"onRowSelect($event, form)\"><h5>{{ form.title }}</h5></a>\n          </div>\n          <div class=\"col-sm-4\">\n            <button *ngIf=\"actionAllowed('formView')\" class=\"btn btn-secondary btn-sm form-btn\" (click)=\"onRowAction($event, form, 'view')\"><span class=\"fa fa-pencil\"></span> Enter Data</button>&nbsp;\n            <button *ngIf=\"actionAllowed('submissionIndex')\" class=\"btn btn-secondary btn-sm form-btn\" (click)=\"onRowAction($event, form, 'submission')\"><span class=\"fa fa-list-alt\"></span> View Data</button>&nbsp;\n            <button *ngIf=\"actionAllowed('formEdit')\" class=\"btn btn-secondary btn-sm form-btn\" (click)=\"onRowAction($event, form, 'edit')\"><span class=\"fa fa-edit\"></span> Edit Form</button>&nbsp;\n            <button *ngIf=\"actionAllowed('formDelete')\" class=\"btn btn-secondary btn-sm form-btn\" (click)=\"onRowAction($event, form, 'delete')\"><span class=\"fa fa-trash\"></span></button>\n          </div>\n        </div>\n      </td>\n    </tr>\n  </tbody>\n</ng-template>\n","import { Component } from '@angular/core';\nimport { GridBodyComponent } from '../GridBodyComponent';\nimport { FormioPromiseService } from 'angular-formio';\n\n@Component({\n  selector: 'form-grid-body',\n  styleUrls: ['./FormGridBody.component.scss'],\n  templateUrl: './FormGridBody.component.html'\n})\nexport class FormGridBodyComponent extends GridBodyComponent {\n  load(formio: FormioPromiseService, query?: any) {\n    query = query || {};\n    return formio.loadForms({ params: query }).then((forms: any) => this.setRows(query, forms));\n  }\n}\n","import { GridFooterPositions } from './types/grid-footer-positions';\nimport { Input, Output, ViewChild, TemplateRef, EventEmitter, Component } from '@angular/core';\nimport { GridHeaderComponent } from './GridHeaderComponent';\nimport { GridBodyComponent } from './GridBodyComponent';\n\n@Component({\n  template: ''\n})\nexport abstract class GridFooterComponent {\n  @Input() header: GridHeaderComponent;\n  @Input() body: GridBodyComponent;\n  @Input() createText: String;\n  @Input() size: number;\n  @Input() actionAllowed: any;\n  @Output() pageChanged: EventEmitter<any>;\n  @Output() createItem: EventEmitter<any>;\n  @ViewChild(TemplateRef, {static: true}) template: TemplateRef<any>;\n\n  public footerPositions = GridFooterPositions;\n\n  constructor() {\n    this.pageChanged = new EventEmitter();\n    this.createItem = new EventEmitter();\n  }\n}\n","<ng-template #footer let-position=\"position\">\n  <thead class=\"formio-grid-footer\" *ngIf=\"position === footerPositions.top\">\n    <ng-container [ngTemplateOutlet]=\"defaultFooterTemplate\"></ng-container>\n  </thead>\n  <tfoot class=\"formio-grid-footer\" *ngIf=\"position === footerPositions.bottom\">\n    <ng-container [ngTemplateOutlet]=\"defaultFooterTemplate\"></ng-container>\n  </tfoot>\n</ng-template>\n\n<ng-template #defaultFooterTemplate>\n  <tr>\n    <td *ngIf=\"header\" [colSpan]=\"header.numHeaders\">\n      <button *ngIf=\"actionAllowed('formCreate')\" class=\"btn btn-primary pull-left float-left\" (click)=\"createItem.emit('form')\"><i class=\"glyphicon glyphicon-plus fa fa-plus\"></i> {{ createText }}</button>\n      <span class=\"pull-right float-right item-counter\"><span class=\"page-num\">{{ body.firstItem }} - {{ body.lastItem }}</span> / {{ body.total }} total</span>\n      <pagination [totalItems]=\"body.total\" [itemsPerPage]=\"body.limit\" [(ngModel)]=\"body.skip\" (pageChanged)=\"pageChanged.emit($event)\" [maxSize]=\"size\" class=\"justify-content-center pagination-sm\">\n      </pagination>\n    </td>\n  </tr>\n</ng-template>\n","import {Component, ViewEncapsulation, OnInit } from '@angular/core';\nimport { GridFooterComponent } from '../GridFooterComponent';\n\n@Component({\n  templateUrl: './FormGridFooter.component.html',\n  styleUrls: ['../grid.footer.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class FormGridFooterComponent extends GridFooterComponent implements OnInit {\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    if (!this.createText) {\n      this.createText = 'Create Form';\n    }\n    if (!this.size) {\n      this.size = 7;\n    }\n  }\n}\n","import { FormGridHeaderComponent } from './FormGridHeader.component';\nimport { FormGridBodyComponent } from './FormGridBody.component';\nimport { FormGridFooterComponent } from './FormGridFooter.component';\nexport default {\n  header: FormGridHeaderComponent,\n  body: FormGridBodyComponent,\n  footer: FormGridFooterComponent\n};\n","<ng-template>\n  <thead>\n    <tr>\n      <th *ngFor=\"let header of headers\">\n        <a (click)=\"sort.emit(header)\">\n          {{ header.label }}&nbsp;<span [ngClass]=\"{'glyphicon-triangle-top': (header.sort === 'asc'), 'glyphicon-triangle-bottom': (header.sort === 'desc')}\" class=\"glyphicon\" *ngIf=\"header.sort\"></span>\n        </a>\n      </th>\n    </tr>\n  </thead>\n</ng-template>\n","import {Component, EventEmitter} from '@angular/core';\nimport {Utils, Components, ExtendedComponentSchema} from 'formiojs';\nimport {GridHeaderComponent} from '../GridHeaderComponent';\nimport {FormioPromiseService} from 'angular-formio';\nimport {ComponentInstance, FormioForm} from 'angular-formio';\nimport {GridColumn} from '../types/grid-column';\nimport {GridHeader, SortType} from '../types/grid-header';\n\n@Component({\n  templateUrl: './SubmissionGridHeader.component.html'\n})\nexport class SubmissionGridHeaderComponent extends GridHeaderComponent {\n\n  // Map structure where the key is the path and the value is the component\n  formComponents: Map<string, ExtendedComponentSchema>;\n\n  load(formio: FormioPromiseService, query?: any, columns?: Array<GridColumn>) {\n    query = query || {};\n    return formio.loadForm({params: query}).then((form: FormioForm) => {\n      this.headers = [];\n      this.formComponents = new Map<string, ExtendedComponentSchema>();\n      this.setComponents(form.components);\n      columns ? columns.forEach(column => {\n          this.setHeader(this.getHeaderForColumn(column, this.formComponents.get(column.path)));\n        }) : this.setComponentsHeaders(this.formComponents);\n\n      return this.headers;\n    });\n  }\n\n  setHeader(header: GridHeader) {\n    this.headers.push(header);\n  }\n\n  getHeaderForColumn(column: GridColumn, component?: ExtendedComponentSchema, sort?: SortType) {\n    return {\n      label: column.label,\n      key: column.path,\n      sort: sort,\n      component: component ? Components.create(component, null, null, true) as ComponentInstance : undefined,\n      renderCell: column ? column.renderCell : undefined\n    };\n  }\n\n  getHeaderForComponent(component: ExtendedComponentSchema, path: string, sort?: SortType) {\n    return {\n      label: component.label,\n      key: path,\n      sort: sort,\n      component: component ? Components.create(component, null, null, true) as ComponentInstance : undefined,\n    };\n  }\n  // Set headers from components in case if columns are not provided\n  setComponentsHeaders(components: Map<string, ExtendedComponentSchema>, sort?: SortType) {\n    components.forEach((component, path) => {\n      if (\n        component.input &&\n        (!component.hasOwnProperty('tableView') || component.tableView)\n      ) {\n        this.setHeader(this.getHeaderForComponent(component, path, sort));\n      }\n    });\n  }\n\n  // Map components\n  setComponents(components) {\n    Utils.eachComponent(components, (component: ExtendedComponentSchema, newPath: string) => {\n      this.formComponents.set(`data.${newPath}`, component);\n    });\n  }\n}\n\n","<ng-template>\n  <tbody>\n    <tr *ngFor=\"let row of rows\" (click)=\"onRowSelect($event, row)\">\n      <td *ngFor=\"let rowHeader of header.headers\" [innerHTML]=\"view(row, rowHeader)\"></td>\n    </tr>\n  </tbody>\n</ng-template>\n","import { Component } from '@angular/core';\nimport { each, get } from 'lodash';\nimport { GridBodyComponent } from '../GridBodyComponent';\nimport {FormioPromiseService} from 'angular-formio';\nimport { GridHeader } from '../types/grid-header';\nimport {FormioSubmission} from 'angular-formio';\n@Component({\n  templateUrl: './SubmissionGridBody.component.html'\n})\nexport class SubmissionGridBodyComponent extends GridBodyComponent {\n  load(formio: FormioPromiseService, query?: any) {\n    query = query || {};\n    return formio.loadSubmissions({ params: query })\n      .then((submissions: any) => this.setRows(query, submissions));\n  }\n\n  /**\n   * Render the cell data.\n   *\n   * @param submission\n   * @param header\n   * @return any\n   */\n  view(submission: FormioSubmission, header: GridHeader): string {\n    const cellValue: any = get(submission, header.key);\n    if (header.renderCell) {\n      return header.renderCell(cellValue, header.component);\n    } else {\n      if (header.component) {\n        if (header.component.getView) {\n          return header.component.getView(cellValue);\n        }\n        return header.component.asString(cellValue);\n      } else {\n        return cellValue.toString();\n      }\n    }\n  }\n}\n","<ng-template #footer let-position=\"position\">\n  <thead class=\"formio-grid-footer\" *ngIf=\"position === footerPositions.top\">\n    <ng-container [ngTemplateOutlet]=\"defaultFooterTemplate\"></ng-container>\n  </thead>\n  <tfoot class=\"formio-grid-footer\" *ngIf=\"position === footerPositions.bottom\">\n    <ng-container [ngTemplateOutlet]=\"defaultFooterTemplate\"></ng-container>\n  </tfoot>\n</ng-template>\n\n<ng-template #defaultFooterTemplate>\n  <tr>\n    <td *ngIf=\"header\" [colSpan]=\"header.numHeaders\">\n      <button *ngIf=\"actionAllowed('submissionCreate') && createText\" class=\"btn btn-primary pull-left float-left\" (click)=\"createItem.emit('form')\"><i class=\"glyphicon glyphicon-plus fa fa-plus\"></i> {{ createText }}</button>\n      <span class=\"pull-right float-right item-counter\"><span class=\"page-num\">{{ body.firstItem }} - {{ body.lastItem }}</span> / {{ body.total }} total</span>\n      <pagination [totalItems]=\"body.total\" [itemsPerPage]=\"body.limit\" [(ngModel)]=\"body.skip\" (pageChanged)=\"pageChanged.emit($event)\" [maxSize]=\"size\" class=\"justify-content-center pagination-sm\"></pagination>\n    </td>\n  </tr>\n</ng-template>\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport { GridFooterComponent } from '../GridFooterComponent';\n\n@Component({\n  templateUrl: './SubmissionGridFooter.component.html',\n  styleUrls: ['../grid.footer.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class SubmissionGridFooterComponent extends GridFooterComponent implements OnInit {\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    if (!this.size) {\n      this.size = 7;\n    }\n  }\n}\n","import { SubmissionGridHeaderComponent } from './SubmissionGridHeader.component';\nimport { SubmissionGridBodyComponent } from './SubmissionGridBody.component';\nimport { SubmissionGridFooterComponent } from './SubmissionGridFooter.component';\nexport default {\n  header: SubmissionGridHeaderComponent,\n  body: SubmissionGridBodyComponent,\n  footer: SubmissionGridFooterComponent\n};\n","<ng-template #headerTemplate></ng-template>\n<ng-template #bodyTemplate></ng-template>\n<ng-template #footerTemplate></ng-template>\n<div class=\"formio-grid\">\n  <formio-alerts [alerts]=\"alerts\"></formio-alerts>\n  <table class=\"table table-bordered table-striped table-hover\">\n    <ng-container *ngIf=\"initialized && [footerPositions.top, footerPositions.both].indexOf(footerPosition) !== -1\"\n      [ngTemplateOutlet]=\"footer.template\" [ngTemplateOutletContext]=\"{ position: footerPositions.top }\">\n    </ng-container>\n    <ng-container *ngIf=\"initialized\"\n      [ngTemplateOutlet]=\"header.template\"></ng-container>\n    <formio-loader [isLoading]=\"isLoading\"></formio-loader>\n    <ng-container *ngIf=\"initialized\" [ngTemplateOutlet]=\"body.template\"></ng-container>\n    <ng-container *ngIf=\"initialized && [footerPositions.bottom, footerPositions.both].indexOf(footerPosition) !== -1\"\n      [ngTemplateOutlet]=\"footer.template\" [ngTemplateOutletContext]=\"{ position: footerPositions.bottom }\">\n    </ng-container>\n  </table>\n</div>\n","import { GridFooterPositions } from './types/grid-footer-positions';\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport {FormioAlerts} from 'angular-formio';\nimport {each} from 'lodash';\nimport {Formio} from 'formiojs';\nimport {GridHeaderComponent} from './GridHeaderComponent';\nimport {GridBodyComponent} from './GridBodyComponent';\nimport {GridFooterComponent} from './GridFooterComponent';\nimport FormComponents from './form/index';\nimport SubmissionComponents from './submission/index';\nimport {FormioPromiseService} from 'angular-formio';\nimport {GridColumn} from './types/grid-column';\nimport {GridHeader, SortType} from './types/grid-header';\n\n@Component({\n  selector: 'formio-grid',\n  styleUrls: ['./grid.component.scss'],\n  templateUrl: './grid.component.html'\n})\nexport class FormioGridComponent implements OnChanges, OnInit, AfterViewInit {\n  @Input() footerPosition = GridFooterPositions.bottom;\n  @Input() src?: string;\n  @Input() items?: Array<any>;\n  @Input() onForm?: Promise<any>;\n  @Input() query?: any;\n  @Input() refresh?: EventEmitter<object>;\n  @Input() columns?: Array<GridColumn>;\n  @Input() gridType?: string;\n  @Input() size?: number;\n  @Input() components?: any;\n  @Input() formio?: FormioPromiseService;\n  @Input() createText: String;\n  @Input() isActionAllowed: any;\n  @Output() select: EventEmitter<object>;\n  @Output() rowSelect: EventEmitter<object>;\n  @Output() rowAction: EventEmitter<object>;\n  @Output() createItem: EventEmitter<any>;\n  @Output() error: EventEmitter<any>;\n  @ViewChild('headerTemplate', {read: ViewContainerRef, static: true}) headerElement: ViewContainerRef;\n  @ViewChild('bodyTemplate', {read: ViewContainerRef, static: true}) bodyElement: ViewContainerRef;\n  @ViewChild('footerTemplate', {read: ViewContainerRef, static: true}) footerElement: ViewContainerRef;\n\n  public page = 0;\n  public isLoading = false;\n  public initialized = false;\n  public header: GridHeaderComponent;\n  public body: GridBodyComponent;\n  public footer: GridFooterComponent;\n  public footerPositions = GridFooterPositions;\n\n  constructor(\n    public alerts: FormioAlerts,\n    private resolver: ComponentFactoryResolver,\n    private ref: ChangeDetectorRef\n  ) {\n    this.select = this.rowSelect = new EventEmitter();\n    this.rowAction = new EventEmitter();\n    this.createItem = new EventEmitter();\n    this.error = new EventEmitter();\n    this.isLoading = true;\n  }\n\n  createComponent(property, component) {\n    const factory = this.resolver.resolveComponentFactory(component);\n    const componentRef = property.createComponent(factory);\n    return componentRef.instance;\n  }\n\n  loadGrid(src?: string) {\n    // If no source is provided, then skip.\n    if (!src && !this.formio) {\n      return;\n    }\n    // Do not double load.\n    if (this.formio && this.src && (src === this.src)) {\n      return;\n    }\n\n    if (src) {\n      this.src = src;\n      this.formio = new FormioPromiseService(this.src, { formOnly: true });\n    }\n\n    // Load the header.\n    this.header.load(this.formio, {}, this.columns)\n      .then(() => this.setPage(0))\n      .catch(error => this.onError(error));\n  }\n\n  ngOnInit() {\n    // Create our components.\n    const comps = this.components || ((this.gridType === 'form') ? FormComponents : SubmissionComponents);\n\n    this.header = this.createComponent(this.headerElement, comps.header);\n    this.header.actionAllowed = this.actionAllowed.bind(this);\n    this.header.sort.subscribe(header => this.sortColumn(header));\n\n    this.body = this.createComponent(this.bodyElement, comps.body);\n    this.body.header = this.header;\n    this.body.actionAllowed = this.actionAllowed.bind(this);\n    this.body.rowSelect.subscribe(row => this.rowSelect.emit(row));\n    this.body.rowAction.subscribe(action => this.rowAction.emit(action));\n\n    this.footer = this.createComponent(this.footerElement, comps.footer);\n    this.footer.header = this.header;\n    this.footer.body = this.body;\n    this.footer.actionAllowed = this.actionAllowed.bind(this);\n    this.footer.createText = this.createText;\n    this.footer.size = this.size;\n    this.footer.pageChanged.subscribe(page => this.pageChanged(page));\n    this.footer.createItem.subscribe(item => this.createItem.emit(item));\n  }\n\n  ngOnChanges(changes: any) {\n    if (this.initialized) {\n      if (\n        (changes.src && changes.src.currentValue) ||\n        (changes.formio && changes.formio.currentValue)\n      ) {\n        this.loadGrid(changes.src.currentValue);\n      }\n\n      if (changes.items && changes.items.currentValue) {\n        this.refreshGrid();\n      }\n    }\n\n    if (this.footer &&\n        (changes.createText && changes.createText.currentValue)) {\n      this.footer.createText = changes.createText.currentValue;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.alerts.setAlerts([]);\n    this.query = this.query || {};\n    if (this.refresh) {\n      this.refresh.subscribe((query: object) => this.refreshGrid(query));\n    }\n    this.loadGrid(this.src);\n    this.initialized = true;\n    this.ref.detectChanges();\n  }\n\n  actionAllowed(action) {\n    if (this.isActionAllowed) {\n      return this.isActionAllowed(action);\n    } else {\n      return true;\n    }\n  }\n\n  onError(error: any) {\n    this.isLoading = false;\n    this.error.emit(error);\n    this.alerts.setAlert({\n      type: 'danger',\n      message: error\n    });\n  }\n\n  refreshGrid(query?: any) {\n    this.alerts.setAlerts([]);\n    this.query = query || this.query;\n    if (!this.query.hasOwnProperty('limit')) {\n      this.query.limit = 10;\n    }\n    if (!this.query.hasOwnProperty('skip')) {\n      this.query.skip = 0;\n    }\n    this.isLoading = true;\n    this.ref.detectChanges();\n    Formio.cache = {};\n    let loader = null;\n    if (this.items) {\n      loader = Promise.resolve(this.body.setRows(this.query, this.items));\n    } else {\n      loader = this.body.load(this.formio, this.query);\n    }\n\n    return loader.then(info => {\n      this.isLoading = false;\n      this.initialized = true;\n      this.ref.detectChanges();\n    }).catch(error => this.onError(error));\n  }\n\n  setPage(num = -1) {\n    this.page = num !== -1 ? num : this.page;\n    if (!this.query.hasOwnProperty('limit')) {\n      this.query.limit = 10;\n    }\n    if (!this.query.hasOwnProperty('skip')) {\n      this.query.skip = 0;\n    }\n    this.query.skip = this.page * this.query.limit;\n    this.refreshGrid();\n  }\n\n  sortColumn(header: GridHeader) {\n    // Reset all other column sorts.\n    each(this.header.headers, (col: any) => {\n      if (col.key !== header.key) {\n        col.sort = '';\n      }\n    });\n    switch (header.sort) {\n      case 'asc':\n        header.sort = SortType.DESC;\n        this.query.sort = '-' + header.key;\n        break;\n      case 'desc':\n        header.sort = undefined;\n        delete this.query.sort;\n        break;\n      case undefined:\n        header.sort = SortType.ASC;\n        this.query.sort = header.key;\n        break;\n    }\n    this.refreshGrid();\n  }\n\n  pageChanged(page: any) {\n    this.setPage(page.page - 1);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { FormioModule } from 'angular-formio';\nimport { FormioAlerts } from 'angular-formio';\nimport { FormioGridComponent } from './grid.component';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { FormGridHeaderComponent } from './form/FormGridHeader.component';\nimport { FormGridBodyComponent } from './form/FormGridBody.component';\nimport { FormGridFooterComponent } from './form/FormGridFooter.component';\nimport { SubmissionGridHeaderComponent } from './submission/SubmissionGridHeader.component';\nimport { SubmissionGridBodyComponent } from './submission/SubmissionGridBody.component';\nimport { SubmissionGridFooterComponent } from './submission/SubmissionGridFooter.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    FormioModule,\n    RouterModule,\n    PaginationModule.forRoot()\n  ],\n  declarations: [\n    FormioGridComponent,\n    FormGridHeaderComponent,\n    FormGridBodyComponent,\n    FormGridFooterComponent,\n    SubmissionGridHeaderComponent,\n    SubmissionGridBodyComponent,\n    SubmissionGridFooterComponent\n  ],\n  exports: [\n    FormioGridComponent\n  ],\n  entryComponents: [\n    FormGridHeaderComponent,\n    FormGridBodyComponent,\n    FormGridFooterComponent,\n    SubmissionGridHeaderComponent,\n    SubmissionGridBodyComponent,\n    SubmissionGridFooterComponent\n  ],\n  providers: [\n    FormioAlerts\n  ]\n})\nexport class FormioGrid {}\n","/*\n * Public API Surface of angular-formio\n */\n\nexport * from './index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i0.ɵɵelement","i0.ɵɵproperty","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵtemplate","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵpropertyInterpolate1","i0.ɵɵtextInterpolate","i0.ɵɵelementContainer","i0.ɵɵtextInterpolate2"],"mappings":"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"}