{"version":3,"file":"angular-formio-auth.umd.js","sources":["../../../projects/angular-formio/auth/src/auth.config.ts","../../../projects/angular-formio/auth/src/auth.service.ts","../../../projects/angular-formio/auth/src/auth.component.ts","../../../projects/angular-formio/auth/src/auth.component.html","../../../projects/angular-formio/auth/src/login/login.component.ts","../../../projects/angular-formio/auth/src/login/login.component.html","../../../projects/angular-formio/auth/src/register/register.component.ts","../../../projects/angular-formio/auth/src/register/register.component.html","../../../projects/angular-formio/auth/src/auth.routes.ts","../../../projects/angular-formio/auth/src/auth.module.ts","../../../projects/angular-formio/auth/src/public_api.ts","../../../projects/angular-formio/auth/src/angular-formio-auth.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nexport interface FormioAuthFormConfig {\n  path?: string;\n  form?: string;\n  component?: any;\n}\n\nexport interface FormioAuthRouteConfig {\n  auth?: any;\n  login?: any;\n  register?: any;\n}\n\n@Injectable()\nexport class FormioAuthConfig {\n  component?: any;\n  delayAuth?: any;\n  login?: FormioAuthFormConfig;\n  register?: FormioAuthFormConfig;\n  oauth?: FormioOAuthConfig;\n}\n\n\nexport interface FormioOAuthConfig {\n  type: FormioOauthType;\n  options: FormioOktaConfig | FormioSamlConfig;\n}\n\nexport enum FormioOauthType {\n  okta = 'okta',\n  saml = 'saml',\n}\n\nexport interface FormioOktaConfig extends OktaConfig {\n  formio?: any;\n}\n\nexport interface FormioSamlConfig {\n  relay: string;\n}\n\n// for more details about Okta configuration options see https://github.com/okta/okta-auth-js#configuration-reference\nexport interface OktaConfig {\n  url?: string;\n  tokenManager?: OktaTokenManagerConfig;\n  issuer?: string;\n  clientId?: string;\n  redirectUri?: string;\n  postLogoutRedirectUri?: string;\n  pkce?: boolean;\n  authorizeUrl?: string;\n  userinfoUrl?: string;\n  tokenUrl?: string;\n  ignoreSignature?: boolean;\n  maxClockSkew?: number;\n  scopes?: string[];\n  httpRequestClient?: Function;\n}\n\nexport interface OktaTokenManagerConfig {\n  storage?: string | {\n    getItem?: Function;\n    setItem?: Function;\n  };\n  secure?: boolean;\n  autoRenew?: boolean;\n  expireEarlySeconds?: number;\n  storageKey?: string;\n}\n","import { EventEmitter, Injectable, Inject } from '@angular/core';\nimport { FormioAuthConfig } from './auth.config';\nimport { FormioAppConfig } from 'angular-formio';\nimport { get, each } from 'lodash';\nimport { Formio } from 'formiojs';\n\n@Injectable()\nexport class FormioAuthService {\n  public user: any;\n  public authenticated = false;\n\n  public loginForm: string;\n  public onLogin: EventEmitter<object>;\n  public onLogout: EventEmitter<object>;\n\n  public registerForm: string;\n  public onRegister: EventEmitter<object>;\n  public onUser: EventEmitter<object>;\n  public onError: EventEmitter<any>;\n\n  public ready: Promise<boolean>;\n  public readyResolve: any;\n  public readyReject: any;\n\n  public projectReady?: Promise<any>;\n  public accessReady?: Promise<any>;\n  public userReady?: Promise<any>;\n  public formAccess: any = {};\n  public submissionAccess: any = {};\n  public roles: any;\n  public is: any = {};\n\n  constructor(\n    public appConfig: FormioAppConfig,\n    public config: FormioAuthConfig\n  ) {\n    this.user = null;\n\n    if (this.appConfig && this.appConfig.appUrl) {\n      Formio.setBaseUrl(this.appConfig.apiUrl);\n      Formio.setProjectUrl(this.appConfig.appUrl);\n      Formio.formOnly = !!this.appConfig.formOnly;\n    } else {\n      console.error('You must provide an AppConfig within your application!');\n    }\n\n    this.loginForm =\n      this.appConfig.appUrl +\n      '/' +\n      get(this.config, 'login.form', 'user/login');\n    this.registerForm =\n      this.appConfig.appUrl +\n      '/' +\n      get(this.config, 'register.form', 'user/register');\n    this.onLogin = new EventEmitter();\n    this.onLogout = new EventEmitter();\n    this.onRegister = new EventEmitter();\n    this.onUser = new EventEmitter();\n    this.onError = new EventEmitter();\n\n    this.ready = new Promise((resolve: any, reject: any) => {\n      this.readyResolve = resolve;\n      this.readyReject = reject;\n    });\n\n    // Register for the core events.\n    Formio.events.on('formio.badToken', () => this.logoutError());\n    Formio.events.on('formio.sessionExpired', () => this.logoutError());\n    if (!this.config.delayAuth) {\n      this.init();\n    }\n  }\n\n  onLoginSubmit(submission: object) {\n    this.setUser(submission);\n    this.onLogin.emit(submission);\n  }\n\n  onRegisterSubmit(submission: object) {\n    this.setUser(submission);\n    this.onRegister.emit(submission);\n  }\n\n  init() {\n    this.projectReady = Formio.makeStaticRequest(this.appConfig.appUrl).then(\n      (project: any) => {\n        each(project.access, (access: any) => {\n          this.formAccess[access.type] = access.roles;\n        });\n      },\n      (): any => {\n        this.formAccess = {};\n        return null;\n      }\n    );\n\n    // Get the access for this project.\n    this.accessReady = Formio.makeStaticRequest(\n      this.appConfig.appUrl + '/access'\n    ).then(\n      (access: any) => {\n        each(access.forms, (form: any) => {\n          this.submissionAccess[form.name] = {};\n          form.submissionAccess.forEach((subAccess: any) => {\n            this.submissionAccess[form.name][subAccess.type] = subAccess.roles;\n          });\n        });\n        this.roles = access.roles;\n        return access;\n      },\n      (): any => {\n        this.roles = {};\n        return null;\n      }\n    );\n\n    let currentUserPromise: Promise<any>;\n    if (this.config.oauth) {\n      // Make a fix to the hash to remove starting \"/\" that angular might put there.\n      if (window.location.hash && window.location.hash.match(/^#\\/access_token/)) {\n        history.pushState(null, null, window.location.hash.replace(/^#\\/access_token/, '#access_token'));\n      }\n\n      // Initiate the SSO if they provide oauth settings.\n      currentUserPromise = Formio.ssoInit(this.config.oauth.type, this.config.oauth.options);\n    } else {\n      currentUserPromise = Formio.currentUser();\n    }\n\n    this.userReady = currentUserPromise.then((user: any) => {\n      this.setUser(user);\n      return user;\n    });\n\n    // Trigger we are redy when all promises have resolved.\n    if (this.accessReady) {\n      this.accessReady\n        .then(() => this.projectReady)\n        .then(() => this.userReady)\n        .then(() => this.readyResolve(true))\n        .catch((err: any) => this.readyReject(err));\n    }\n  }\n\n  setUser(user: any) {\n    const namespace = Formio.namespace || 'formio';\n    if (user) {\n      this.user = user;\n      localStorage.setItem(`${namespace}AppUser`, JSON.stringify(user));\n      this.setUserRoles();\n    } else {\n      this.user = null;\n      this.is = {};\n      localStorage.removeItem(`${namespace}AppUser`);\n      Formio.clearCache();\n      Formio.setUser(null);\n    }\n\n    this.authenticated = !!Formio.getToken();\n    this.onUser.emit(this.user);\n  }\n\n  setUserRoles() {\n    if (this.accessReady) {\n      this.accessReady.then(() => {\n        each(this.roles, (role: any, roleName: string) => {\n          if (this.user.roles.indexOf(role._id) !== -1) {\n            this.is[roleName] = true;\n          }\n        });\n      });\n    }\n  }\n\n  logoutError() {\n    this.setUser(null);\n    const namespace = Formio.namespace || 'formio';\n    localStorage.removeItem(`${namespace}Token`);\n    this.onError.emit();\n  }\n\n  logout() {\n    this.setUser(null);\n    const namespace = Formio.namespace || 'formio';\n    localStorage.removeItem(`${namespace}Token`);\n    Formio.logout()\n      .then(() => this.onLogout.emit())\n      .catch(() => this.logoutError());\n  }\n}\n","import { Component } from '@angular/core';\n@Component({\n  templateUrl: './auth.component.html'\n})\nexport class FormioAuthComponent {}\n","<div class=\"card card-primary panel panel-default\">\n  <div class=\"card-header panel-heading\">\n    <ul class=\"nav nav-tabs card-header-tabs\">\n      <li class=\"nav-item\" role=\"presentation\" routerLinkActive=\"active\"><a class=\"nav-link\" routerLink=\"login\" routerLinkActive=\"active\">Login</a></li>\n      <li class=\"nav-item\" role=\"presentation\" routerLinkActive=\"active\"><a class=\"nav-link\" routerLink=\"register\" routerLinkActive=\"active\">Register</a></li>\n    </ul>\n  </div>\n  <div class=\"card-body panel-body\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { FormioAuthService } from '../auth.service';\n@Component({\n  templateUrl: './login.component.html'\n})\nexport class FormioAuthLoginComponent {\n  constructor(public service: FormioAuthService) {}\n}\n","<formio [src]=\"service.loginForm\" (submit)=\"service.onLoginSubmit($event)\"></formio>\n","import { Component } from '@angular/core';\nimport { FormioAuthService } from '../auth.service';\n@Component({\n  templateUrl: './register.component.html'\n})\nexport class FormioAuthRegisterComponent {\n  constructor(public service: FormioAuthService) {}\n}\n","<formio [src]=\"service.registerForm\" (submit)=\"service.onRegisterSubmit($event)\"></formio>\n","import { Routes } from '@angular/router';\nimport { FormioAuthRouteConfig } from './auth.config';\nimport { FormioAuthComponent } from './auth.component';\nimport { FormioAuthLoginComponent } from './login/login.component';\nimport { FormioAuthRegisterComponent } from './register/register.component';\nexport function FormioAuthRoutes(config?: FormioAuthRouteConfig): Routes {\n  return [\n    {\n      path: '',\n      component: config && config.auth ? config.auth : FormioAuthComponent,\n      children: [\n        {\n          path: '',\n          redirectTo: 'login',\n          pathMatch: 'full'\n        },\n        {\n          path: 'login',\n          component: config && config.login ? config.login : FormioAuthLoginComponent\n        },\n        {\n          path: 'register',\n          component: config && config.register ? config.register : FormioAuthRegisterComponent\n        }\n      ]\n    }\n  ];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormioModule } from 'angular-formio';\nimport { FormioAuthComponent } from './auth.component';\nimport { FormioAuthLoginComponent } from './login/login.component';\nimport { FormioAuthRegisterComponent } from './register/register.component';\nimport { FormioAuthRouteConfig } from './auth.config';\nimport { FormioAuthRoutes } from './auth.routes';\nimport { extendRouter } from 'angular-formio';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormioModule,\n    RouterModule\n  ],\n  declarations: [\n    FormioAuthComponent,\n    FormioAuthLoginComponent,\n    FormioAuthRegisterComponent\n  ]\n})\nexport class FormioAuth {\n  static forRoot(config?: FormioAuthRouteConfig): any {\n    return extendRouter(FormioAuth, config, FormioAuthRoutes);\n  }\n  static forChild(config?: FormioAuthRouteConfig): any {\n    return extendRouter(FormioAuth, config, FormioAuthRoutes);\n  }\n}\n","/*\n * Public API Surface of angular-formio\n */\n\nexport * from './index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["Injectable","Formio","get","EventEmitter","each","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵelement","Component","i0.ɵɵlistener","i0.ɵɵproperty","extendRouter","CommonModule","FormioModule","RouterModule","NgModule"],"mappings":"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"}