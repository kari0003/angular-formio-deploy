{"version":3,"sources":["../../../projects/angular-formio/resource/src/resource.config.ts","../../../projects/angular-formio/resource/src/resources.service.ts","../../../projects/angular-formio/resource/src/resource.service.ts","../../../projects/angular-formio/resource/src/resource.component.html","../../../projects/angular-formio/resource/src/resource.component.ts","../../../projects/angular-formio/resource/src/view/view.component.ts","../../../projects/angular-formio/resource/src/view/view.component.html","../../../projects/angular-formio/resource/src/edit/edit.component.ts","../../../projects/angular-formio/resource/src/edit/edit.component.html","../../../projects/angular-formio/resource/src/delete/delete.component.ts","../../../projects/angular-formio/resource/src/create/create.component.html","../../../projects/angular-formio/resource/src/delete/delete.component.html","../../../projects/angular-formio/resource/src/create/create.component.ts","../../../projects/angular-formio/resource/src/index/index.component.ts","../../../projects/angular-formio/resource/src/resource.routes.ts","../../../projects/angular-formio/resource/src/index/index.component.html","../../../projects/angular-formio/resource/src/resource.module.ts"],"names":["this","name","form","parents","FormioResourceConfig","factory","ɵfac","auth","resources","error","EventEmitter","onError","currentUser","resourceLoaded","userReady","FormioResources","i0","ɵɵinject","i1","FormioAuthService","FormioResourceService","appConfig","config","resourcesService","appRef","_this","initialized","isLoading","alerts","FormioAlerts","refresh","formLoaded","Promise","resolve","reject","formResolve","formReject","init","prototype","initialize","console","warn","appUrl","Formio","setBaseUrl","apiUrl","setProjectUrl","formOnly","formUrl","resource","data","loadForm","setAlert","type","message","emit","onFormError","err","setContext","route","resourceId","snapshot","params","resourceUrl","formio","FormioPromiseService","loadParents","formFormio","formLoading","then","catch","length","_parentsLoaded","forEach","parent","resourceName","resourceField","field","filterResource","hasOwnProperty","filter","push","parentPath","Utils","eachComponent","components","component","path","key","hidden","clearOnHide","_","set","all","submission","onSubmissionError","loadResource","resourceLoading","loadSubmission","ignoreCache","property","value","save","_id","saveSubmission","saved","remove","deleteSubmission","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵelement","i1$1","FormioAppConfig","ApplicationRef","FormioResourceComponent","service","perms","delete","edit","paramsSubscription","subscribe","ngOnInit","ready","userPermissions","user","ngOnDestroy","unsubscribe","ɵɵdirectiveInject","i2","ActivatedRoute","selectors","decls","vars","consts","template","rf","ctx","i0.ɵɵtemplate","i0.ɵɵadvance","i0.ɵɵproperty","FormioResourceViewComponent","FormioResourceEditComponent","router","triggerError","onSubmit","navigate","relativeTo","Router","i0.ɵɵlistener","$event","FormioResourceDeleteComponent","onDelete","onCancel","i0.ɵɵtextInterpolate1","FormioResourceCreateComponent","onSuccess","FormioResourceIndexComponent","cdr","ngZone","gridQuery","each","gridSrc","createText","title","detectChanges","onSelect","row","run","onCreateItem","FormioResourceRoutes","index","create","children","redirectTo","pathMatch","view","ChangeDetectorRef","NgZone","FormioResource","forChild","extendRouter","forRoot","providers","imports","CommonModule","FormioModule","FormioGrid","RouterModule","declarations"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\nexport interface FormioResourceRouteConfig {\n  index?: any;\n  create?: any;\n  resource?: any;\n  view?: any;\n  edit?: any;\n  delete?: any;\n}\n\n@Injectable()\nexport class FormioResourceConfig {\n  name = '';\n  form = '';\n  parents: any[] = [];\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { FormioAuthService } from 'angular-formio/auth';\n\nexport interface FormioResourceMap {\n  [name: string]: any;\n}\n\n@Injectable()\nexport class FormioResources {\n  resources: FormioResourceMap = {};\n  error: EventEmitter<any>;\n  onError: EventEmitter<any>;\n  constructor(\n    public auth?: FormioAuthService\n  ) {\n    this.error = new EventEmitter();\n    this.onError = this.error;\n    this.resources = {\n      currentUser: {\n        resourceLoaded: this.auth.userReady\n      }\n    };\n  }\n}\n","import { ApplicationRef, EventEmitter, Injectable, Optional } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormioResourceConfig } from './resource.config';\nimport { FormioResources } from './resources.service';\nimport { FormioPromiseService } from 'angular-formio';\nimport { FormioAlerts } from 'angular-formio';\nimport { FormioAppConfig } from 'angular-formio';\nimport { FormioRefreshValue } from 'angular-formio';\nimport Promise from 'native-promise-only';\nimport { Formio, Utils } from 'formiojs';\nimport _ from 'lodash';\n\n@Injectable()\nexport class FormioResourceService {\n  public initialized = false;\n  public form: any;\n  public alerts: FormioAlerts;\n  public resource: any;\n  public resourceUrl?: string;\n  public formUrl: string;\n  public formFormio: FormioPromiseService;\n  public formio: FormioPromiseService;\n  public refresh: EventEmitter<FormioRefreshValue>;\n\n  public resourceLoading?: Promise<any>;\n  public resourceLoaded?: Promise<any>;\n  public resourceId?: string;\n  public resources: any;\n\n  public formLoading?: Promise<any>;\n  public formLoaded: Promise<any>;\n  public formResolve: any;\n  public formReject: any;\n  public isLoading: boolean;\n\n  constructor(\n    public appConfig: FormioAppConfig,\n    public config: FormioResourceConfig,\n    @Optional() public resourcesService: FormioResources,\n    public appRef: ApplicationRef,\n  ) {\n    this.isLoading = true;\n    this.alerts = new FormioAlerts();\n    this.refresh = new EventEmitter();\n    this.formLoaded = new Promise((resolve: any, reject: any) => {\n      this.formResolve = resolve;\n      this.formReject = reject;\n    });\n    this.init();\n  }\n\n  initialize() {\n    console.warn('FormioResourceService.initialize() has been deprecated.');\n  }\n\n  init() {\n    if (this.initialized) {\n      return;\n    }\n    this.initialized = true;\n    if (this.appConfig && this.appConfig.appUrl) {\n      Formio.setBaseUrl(this.appConfig.apiUrl);\n      Formio.setProjectUrl(this.appConfig.appUrl);\n      Formio.formOnly = this.appConfig.formOnly;\n    } else {\n      console.error('You must provide an AppConfig within your application!');\n    }\n\n    // Create the form url and load the resources.\n    this.formUrl = this.appConfig.appUrl + '/' + this.config.form;\n    this.resource = { data: {} };\n\n    // Add this resource service to the list of all resources in context.\n    if (this.resourcesService) {\n      this.resources = this.resourcesService.resources;\n      this.resources[this.config.name] = this;\n    }\n\n    return this.loadForm();\n  }\n\n  onError(error: any) {\n    this.alerts.setAlert({\n      type: 'danger',\n      message: error.message || error\n    });\n    if (this.resourcesService) {\n      this.resourcesService.error.emit(error);\n    }\n    throw error;\n  }\n\n  onFormError(err: any) {\n    this.formReject(err);\n    this.onError(err);\n  }\n\n  setContext(route: ActivatedRoute) {\n    this.resourceId = route.snapshot.params['id'];\n    this.resource = { data: {} };\n    this.resourceUrl = this.appConfig.appUrl + '/' + this.config.form;\n    if (this.resourceId) {\n      this.resourceUrl += '/submission/' + this.resourceId;\n    }\n    this.formio = new FormioPromiseService(this.resourceUrl);\n    if (this.resourcesService) {\n      this.resources[this.config.name] = this;\n    }\n    this.loadParents();\n  }\n\n  loadForm() {\n    this.formFormio = new FormioPromiseService(this.formUrl);\n    this.isLoading = true;\n    this.formLoading = this.formFormio\n      .loadForm()\n      .then(\n        (form: any) => {\n          this.form = form;\n          this.formResolve(form);\n          this.isLoading = false;\n          this.loadParents();\n          return form;\n        },\n        (err: any) => this.onFormError(err)\n      )\n      .catch((err: any) => this.onFormError(err));\n    return this.formLoading;\n  }\n\n  loadParents() {\n    if (!this.config.parents || !this.config.parents.length) {\n      return Promise.resolve([]);\n    }\n    if (!this.resourcesService) {\n      console.warn(\n        'You must provide the FormioResources within your application to use nested resources.'\n      );\n      return Promise.resolve([]);\n    }\n    return this.formLoading.then((form) => {\n      // Iterate through the list of parents.\n      const _parentsLoaded: Array<Promise<any>> = [];\n      this.config.parents.forEach((parent: any) => {\n        const resourceName = parent.resource || parent;\n        const resourceField = parent.field || parent;\n        const filterResource = parent.hasOwnProperty('filter') ? parent.filter : true;\n        if (this.resources.hasOwnProperty(resourceName) && this.resources[resourceName].resourceLoaded) {\n          _parentsLoaded.push(\n            this.resources[resourceName].resourceLoaded.then((resource: any) => {\n              let parentPath = '';\n              Utils.eachComponent(form.components, (component, path) => {\n                if (component.key === resourceField) {\n                  component.hidden = true;\n                  component.clearOnHide = false;\n                  _.set(this.resource.data, path, resource);\n                  parentPath = path;\n                  return true;\n                }\n              });\n              return {\n                name: parentPath,\n                filter: filterResource,\n                resource\n              };\n            })\n          );\n        }\n      });\n\n      // When all the parents have loaded, emit that to the onParents emitter.\n      return Promise.all(_parentsLoaded).then((parents: any) => {\n        this.refresh.emit({\n          form: form,\n          submission: this.resource\n        });\n        return parents;\n      });\n    });\n  }\n\n  onSubmissionError(err: any) {\n    this.onError(err);\n  }\n\n  loadResource(route: ActivatedRoute) {\n    this.setContext(route);\n    this.isLoading = true;\n    this.resourceLoading = this.resourceLoaded = this.formio\n      .loadSubmission(null, {ignoreCache: true})\n      .then(\n        (resource: any) => {\n          this.resource = resource;\n          this.isLoading = false;\n          this.refresh.emit({\n            property: 'submission',\n            value: this.resource\n          });\n          return resource;\n        },\n        (err: any) => this.onSubmissionError(err)\n      )\n      .catch((err: any) => this.onSubmissionError(err));\n    return this.resourceLoading;\n  }\n\n  save(resource: any) {\n    const formio = resource._id ? this.formio : this.formFormio;\n    return formio\n      .saveSubmission(resource)\n      .then(\n        (saved: any) => {\n          this.resource = saved;\n          return saved;\n        },\n        (err: any) => this.onError(err)\n      )\n      .catch((err: any) => this.onError(err));\n  }\n\n  remove() {\n    return this.formio\n      .deleteSubmission()\n      .then(\n        () => {\n          this.resource = null;\n        },\n        (err: any) => this.onError(err)\n      )\n      .catch((err: any) => this.onError(err));\n  }\n}\n","<ul class=\"nav nav-tabs\" style=\"margin-bottom: 10px\">\n  <li class=\"nav-item\"><a class=\"nav-link\" routerLink=\"../\"><i class=\"fa fa-chevron-left glyphicon glyphicon-chevron-left\"></i></a></li>\n  <li class=\"nav-item\" routerLinkActive=\"active\"><a class=\"nav-link\" routerLink=\"view\" routerLinkActive=\"active\">View</a></li>\n  <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"perms.edit\"><a class=\"nav-link\" routerLink=\"edit\" routerLinkActive=\"active\">Edit</a></li>\n  <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"perms.delete\"><a class=\"nav-link\" routerLink=\"delete\" routerLinkActive=\"active\"><span class=\"fa fa-trash glyphicon glyphicon-trash\"></span></a></li>\n</ul>\n<router-outlet></router-outlet>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { FormioAuthService } from 'angular-formio/auth';\nimport { FormioResourceService } from './resource.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  templateUrl: './resource.component.html'\n})\nexport class FormioResourceComponent implements OnInit, OnDestroy {\n  private paramsSubscription: Subscription;\n  public perms = {delete: false, edit: false};\n\n  constructor(\n    public service: FormioResourceService,\n    public route: ActivatedRoute,\n    public auth: FormioAuthService,\n  ) {\n    // subscribe to the route param changes, so that we could re-load the submission if navigation happens from one submission to another\n    this.paramsSubscription = this.route.params.subscribe((params) => {\n      this.init();\n    });\n  }\n\n  ngOnInit() {\n    this.init();\n  }\n\n  init() {\n    this.service.loadResource(this.route);\n    this.service.formLoaded.then((form) => {\n      this.auth.ready.then(() => {\n        this.service.resourceLoaded.then((resource) => {\n          this.service.formFormio.userPermissions(this.auth.user, form, resource).then((perms) => {\n            this.perms.delete = perms.delete;\n            this.perms.edit = perms.edit;\n          });\n        });\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.paramsSubscription) {\n      this.paramsSubscription.unsubscribe();\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { FormioResourceService } from '../resource.service';\nimport { FormioResourceConfig } from '../resource.config';\n\n@Component({\n  templateUrl: './view.component.html'\n})\nexport class FormioResourceViewComponent {\n  constructor(\n    public service: FormioResourceService,\n    public config: FormioResourceConfig\n  ) {}\n}\n","<formio\n  [form]=\"service.form\"\n  [submission]=\"service.resource\"\n  [refresh]=\"service.refresh\"\n  [hideComponents]=\"config.parents\"\n  [readOnly]=\"true\"\n></formio>\n","import { Component, EventEmitter } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormioResourceService } from '../resource.service';\nimport { FormioResourceConfig } from '../resource.config';\n\n@Component({\n  templateUrl: './edit.component.html'\n})\nexport class FormioResourceEditComponent {\n  public triggerError: EventEmitter<any> = new EventEmitter();\n  constructor(\n    public service: FormioResourceService,\n    public route: ActivatedRoute,\n    public router: Router,\n    public config: FormioResourceConfig\n  ) {}\n\n  onSubmit(submission: any) {\n    const edit = this.service.resource;\n    edit.data = submission.data;\n    this.service.save(edit)\n      .then(() => {\n        this.router.navigate(['../', 'view'], { relativeTo: this.route });\n      })\n      .catch((err) => this.triggerError.emit(err));\n  }\n}\n","<formio\n  [form]=\"service.form\"\n  [submission]=\"service.resource\"\n  [error]=\"triggerError\"\n  [refresh]=\"service.refresh\"\n  (submit)=\"onSubmit($event)\"\n></formio>\n","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormioResourceService } from '../resource.service';\n\n@Component({\n  templateUrl: './delete.component.html'\n})\nexport class FormioResourceDeleteComponent {\n  constructor(\n    public service: FormioResourceService,\n    public route: ActivatedRoute,\n    public router: Router\n  ) {}\n\n  onDelete() {\n    this.service.remove().then(() => {\n      this.router.navigate(['../../'], { relativeTo: this.route });\n    });\n  }\n\n  onCancel() {\n    this.router.navigate(['../', 'view'], { relativeTo: this.route });\n  }\n}\n","<h3 *ngIf=\"service.form\" style=\"margin-top:0;\">\n  <a routerLink=\"../\" class=\"back-button\">\n    <i class=\"fa fa-chevron-left glyphicon glyphicon-chevron-left\"></i>\n  </a> | New {{ service.form.title }}\n</h3>\n<formio\n  [form]=\"service.form\"\n  [submission]=\"service.resource\"\n  [refresh]=\"service.refresh\"\n  [error]=\"onError\"\n  [success]=\"onSuccess\"\n  (submit)=\"onSubmit($event)\"\n></formio>\n","<h3>Are you sure you wish to delete this record?</h3>\n<div class=\"btn-toolbar\">\n  <button type=\"button\" (click)=\"onDelete()\" class=\"btn btn-danger\" style=\"margin-right: 10px;\">Yes</button>\n  <button type=\"button\" (click)=\"onCancel()\" class=\"btn btn-danger\">No</button>\n</div>\n","import { Component, EventEmitter, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormioResourceService } from '../resource.service';\nimport { FormioResourceConfig } from '../resource.config';\n\n@Component({\n  styleUrls: ['./create.component.scss'],\n  templateUrl: './create.component.html'\n})\nexport class FormioResourceCreateComponent implements OnInit {\n  public onError: EventEmitter<any>;\n  public onSuccess: EventEmitter<any>;\n  constructor(\n    public service: FormioResourceService,\n    public route: ActivatedRoute,\n    public router: Router,\n    public config: FormioResourceConfig\n  ) {\n    this.onError = new EventEmitter();\n    this.onSuccess = new EventEmitter();\n  }\n\n  ngOnInit() {\n    this.service.setContext(this.route);\n  }\n\n  onSubmit(submission: any) {\n    this.service\n      .save(submission)\n      .then(() => {\n        this.router.navigate(['../', this.service.resource._id, 'view'], {\n          relativeTo: this.route\n        });\n      })\n      .catch((err: any) => this.onError.emit(err));\n  }\n}\n","import { Component, OnInit, ChangeDetectorRef, NgZone } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormioResourceService } from '../resource.service';\nimport { FormioResourceConfig } from '../resource.config';\nimport { each } from 'lodash';\n\n@Component({\n  templateUrl: './index.component.html'\n})\nexport class FormioResourceIndexComponent implements OnInit {\n  public gridSrc?: string;\n  public gridQuery: any;\n  public createText: String;\n\n  constructor(\n    public service: FormioResourceService,\n    public route: ActivatedRoute,\n    public router: Router,\n    public config: FormioResourceConfig,\n    public cdr: ChangeDetectorRef,\n    public ngZone: NgZone,\n  ) {\n  }\n\n  ngOnInit() {\n    this.gridQuery = {};\n    this.service.setContext(this.route);\n    this.service.formLoaded.then(() => {\n      if (\n        this.service &&\n        this.config.parents &&\n        this.config.parents.length\n      ) {\n        this.service.loadParents().then((parents: any) => {\n          each(parents, (parent: any) => {\n            if (parent && parent.filter) {\n              this.gridQuery['data.' + parent.name + '._id'] =\n                parent.resource._id;\n            }\n          });\n\n          // Set the source to load the grid.\n          this.gridSrc = this.service.formUrl;\n          this.createText = `New ${this.service.form.title}`;\n        });\n      } else if (this.service.formUrl) {\n        this.gridSrc = this.service.formUrl;\n        this.createText = `New ${this.service.form.title}`;\n      }\n\n      this.cdr.detectChanges();\n    });\n  }\n\n  onSelect(row: any) {\n    this.ngZone.run(() => {\n      this.router.navigate([row._id, 'view'], { relativeTo: this.route });\n    });\n  }\n\n  onCreateItem() {\n    this.ngZone.run(() => {\n      this.router.navigate(['new'], { relativeTo: this.route });\n    });\n  }\n}\n","import { Routes } from '@angular/router';\nimport { FormioResourceComponent } from './resource.component';\nimport { FormioResourceViewComponent } from './view/view.component';\nimport { FormioResourceEditComponent } from './edit/edit.component';\nimport { FormioResourceDeleteComponent } from './delete/delete.component';\nimport { FormioResourceCreateComponent } from './create/create.component';\nimport { FormioResourceIndexComponent } from './index/index.component';\nimport { FormioResourceRouteConfig } from './resource.config';\nexport function FormioResourceRoutes(config?: FormioResourceRouteConfig): Routes {\n  return [\n    {\n      path: '',\n      component: config && config.index ? config.index : FormioResourceIndexComponent\n    },\n    {\n      path: 'new',\n      component: config && config.create ? config.create : FormioResourceCreateComponent\n    },\n    {\n      path: ':id',\n      component: config && config.resource ? config.resource : FormioResourceComponent,\n      children: [\n        {\n          path: '',\n          redirectTo: 'view',\n          pathMatch: 'full'\n        },\n        {\n          path: 'view',\n          component: config && config.view ? config.view : FormioResourceViewComponent\n        },\n        {\n          path: 'edit',\n          component: config && config.edit ? config.edit : FormioResourceEditComponent\n        },\n        {\n          path: 'delete',\n          component: config && config.delete ? config.delete : FormioResourceDeleteComponent\n        }\n      ]\n    }\n  ];\n}\n","<formio-alerts [alerts]=\"service.alerts\"></formio-alerts>\n<formio-grid\n  [src]=\"gridSrc\"\n  [query]=\"gridQuery\"\n  [onForm]=\"service.formLoaded\"\n  (rowSelect)=\"onSelect($event)\"\n  (error)=\"service.onError($event)\"\n  (createItem)=\"onCreateItem()\"\n  [createText]=\"createText\"\n></formio-grid>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormioModule } from 'angular-formio';\nimport { FormioAlerts } from 'angular-formio';\nimport { FormioGrid } from 'angular-formio/grid';\nimport { FormioResourceComponent } from './resource.component';\nimport { FormioResourceViewComponent } from './view/view.component';\nimport { FormioResourceEditComponent } from './edit/edit.component';\nimport { FormioResourceDeleteComponent } from './delete/delete.component';\nimport { FormioResourceCreateComponent } from './create/create.component';\nimport { FormioResourceIndexComponent } from './index/index.component';\nimport { FormioResourceRouteConfig } from './resource.config';\nimport { FormioResourceRoutes } from './resource.routes';\nimport { extendRouter } from 'angular-formio';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormioModule,\n    FormioGrid,\n    RouterModule\n  ],\n  declarations: [\n    FormioResourceComponent,\n    FormioResourceCreateComponent,\n    FormioResourceIndexComponent,\n    FormioResourceViewComponent,\n    FormioResourceEditComponent,\n    FormioResourceDeleteComponent\n  ],\n  providers: [\n    FormioAlerts\n  ]\n})\nexport class FormioResource {\n  static forChild(config?: FormioResourceRouteConfig): any {\n    return extendRouter(FormioResource, config, FormioResourceRoutes);\n  }\n  static forRoot(config?: FormioResourceRouteConfig): any {\n    return extendRouter(FormioResource, config, FormioResourceRoutes);\n  }\n}\n"]}