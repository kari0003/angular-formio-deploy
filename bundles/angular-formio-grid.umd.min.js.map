{"version":3,"sources":["../../../projects/angular-formio/grid/src/types/grid-footer-positions.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/angular-formio/grid/src/types/grid-header.ts","../../../projects/angular-formio/grid/src/GridHeaderComponent.ts","../../../projects/angular-formio/grid/src/form/FormGridHeader.component.html","../../../projects/angular-formio/grid/src/form/FormGridHeader.component.ts","../../../projects/angular-formio/grid/src/GridBodyComponent.ts","../../../projects/angular-formio/grid/src/form/FormGridBody.component.html","../../../projects/angular-formio/grid/src/form/FormGridBody.component.ts","../../../projects/angular-formio/grid/src/GridFooterComponent.ts","../../../projects/angular-formio/grid/src/form/FormGridFooter.component.html","../../../projects/angular-formio/grid/src/form/FormGridFooter.component.ts","../../../projects/angular-formio/grid/src/form/index.ts","../../../projects/angular-formio/grid/src/submission/SubmissionGridHeader.component.html","../../../projects/angular-formio/grid/src/submission/SubmissionGridHeader.component.ts","../../../projects/angular-formio/grid/src/submission/SubmissionGridBody.component.html","../../../projects/angular-formio/grid/src/submission/SubmissionGridBody.component.ts","../../../projects/angular-formio/grid/src/submission/SubmissionGridFooter.component.html","../../../projects/angular-formio/grid/src/submission/SubmissionGridFooter.component.ts","../../../projects/angular-formio/grid/src/submission/index.ts","../../../projects/angular-formio/grid/src/grid.component.html","../../../projects/angular-formio/grid/src/grid.component.ts","../../../projects/angular-formio/grid/src/grid.module.ts"],"names":["GridFooterPositions","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","__","this","constructor","create","SortType","GridHeaderComponent","headers","sort","EventEmitter","defineProperty","length","load","formio","query","columns","Promise","resolve","selectors","viewQuery","rf","ctx","TemplateRef","i0.ɵɵelement","i0.ɵɵproperty","i0.ɵɵelementStart","i0.ɵɵlistener","ctx_r2","emit","header","i0.ɵɵtext","i0.ɵɵtemplate","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","FormGridHeaderComponent","_super","label","key","ASC","features","i0","ɵɵInheritDefinitionFeature","decls","vars","consts","template","GridBodyComponent","firstItem","lastItem","skip","limit","total","rowSelect","rowAction","loading","loadForm","onRowSelect","event","row","preventDefault","onRowAction","action","setRows","items","_this","rows","serverCount","Math","floor","each","item","push","clone","i0.ɵɵpropertyInterpolate1","i0.ɵɵtextInterpolate","FormGridBodyComponent","loadForms","params","then","forms","footerPositions","pageChanged","createItem","i0.ɵɵelementContainer","$event","ɵɵrestoreView","_r12_1","ɵɵnextContext","i0.ɵɵtextInterpolate2","ctx_r7","body","size","GridFooterComponent","FormGridFooterComponent","ngOnInit","createText","FormComponents","footer","header_r2","SubmissionGridHeaderComponent","form","formComponents","Map","setComponents","components","forEach","column","setHeader","getHeaderForColumn","get","path","setComponentsHeaders","component","Components","undefined","renderCell","getHeaderForComponent","input","tableView","Utils","eachComponent","newPath","set","SubmissionGridBodyComponent","loadSubmissions","submissions","view","submission","cellValue","getView","asString","toString","SubmissionGridFooterComponent","SubmissionComponents","ɵɵpureFunction1","_c3","ctx_r6","top","ctx_r9","bottom","FormioGridComponent","alerts","resolver","ref","footerPosition","page","isLoading","initialized","select","error","createComponent","property","factory","resolveComponentFactory","instance","loadGrid","src","FormioPromiseService","formOnly","setPage","catch","onError","comps","gridType","headerElement","actionAllowed","bind","subscribe","sortColumn","bodyElement","footerElement","ngOnChanges","changes","currentValue","refreshGrid","ngAfterViewInit","setAlerts","refresh","detectChanges","isActionAllowed","setAlert","type","message","Formio","cache","info","num","col","DESC","ɵɵdirectiveInject","i1$1","FormioAlerts","ComponentFactoryResolver","ChangeDetectorRef","ViewContainerRef","FormioGrid","providers","imports","CommonModule","FormsModule","FormioModule","RouterModule","PaginationModule","forRoot","declarations","i2$1","exports"],"mappings":"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","sourcesContent":["export enum GridFooterPositions {\n  bottom,\n  top,\n  both\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {ComponentInstance} from 'angular-formio';\n\nexport interface GridHeader {\n  component?: ComponentInstance;\n  key: string;\n  sort?: SortType;\n  label: string;\n  renderCell?(cellValue: any, component?: ComponentInstance): string;\n}\n\nexport enum SortType {\n  ASC = 'asc',\n  DESC = 'desc'\n}\n","import { Output, EventEmitter, ViewChild, TemplateRef, Input, Component } from '@angular/core';\nimport {FormioPromiseService} from 'angular-formio';\nimport {GridHeader} from './types/grid-header';\n\n@Component({\n  template: ''\n})\nexport abstract class GridHeaderComponent {\n  @Input() actionAllowed: any;\n  @Output() sort: EventEmitter<GridHeader>;\n  @ViewChild(TemplateRef, {static: true}) template: TemplateRef<any>;\n  public headers: Array<GridHeader>;\n  constructor() {\n    this.headers = [];\n    this.sort = new EventEmitter();\n  }\n\n  get numHeaders() {\n    return this.headers.length;\n  }\n\n  load(formio: FormioPromiseService, query?: any, columns?: Array<any>): Promise<any> {\n    return Promise.resolve([]);\n  }\n}\n","<ng-template>\n  <thead>\n    <tr>\n      <th>\n        <div class=\"row\">\n          <div class=\"col-sm-8\">\n            <a (click)=\"sort.emit(header)\">\n              {{ header.label }}&nbsp;<span [ngClass]=\"{'glyphicon-triangle-top fa-caret-up': (header.sort === 'asc'), 'glyphicon-triangle-bottom fa-caret-down': (header.sort === 'desc')}\" class=\"glyphicon fa\" *ngIf=\"header.sort\"></span>\n            </a>\n          </div>\n          <div class=\"col-sm-4\">\n            Operations\n          </div>\n        </div>\n      </th>\n    </tr>\n  </thead>\n</ng-template>\n","import {Component} from '@angular/core';\nimport {GridHeaderComponent} from '../GridHeaderComponent';\nimport {GridHeader, SortType} from '../types/grid-header';\n\n@Component({\n  selector: 'form-grid-header',\n  templateUrl: './FormGridHeader.component.html'\n})\nexport class FormGridHeaderComponent extends GridHeaderComponent {\n  public header: GridHeader;\n  load(formio?: any) {\n    this.header = {\n      label: 'Title',\n      key: 'title',\n      sort: SortType.ASC\n    };\n    this.headers = [this.header];\n    return Promise.resolve(this.headers);\n  }\n\n  get numHeaders() {\n    return 2;\n  }\n}\n","import { Input, Output, EventEmitter, ViewChild, TemplateRef, Component } from '@angular/core';\nimport { each, clone } from 'lodash';\nimport { GridHeaderComponent } from './GridHeaderComponent';\nimport {FormioPromiseService} from 'angular-formio';\n\n@Component({\n  template: ''\n})\nexport abstract class GridBodyComponent {\n  @Input() header: GridHeaderComponent;\n  @Input() actionAllowed: any;\n  @Output() rowSelect: EventEmitter<any>;\n  @Output() rowAction: EventEmitter<any>;\n  @ViewChild(TemplateRef, {static: true}) template: TemplateRef<any>;\n  public rows: Array<any>;\n  public loading: Boolean;\n  public firstItem = 0;\n  public lastItem = 0;\n  public skip = 0;\n  public limit = 0;\n  public total = 0;\n  constructor() {\n    this.rowSelect = new EventEmitter();\n    this.rowAction = new EventEmitter();\n    this.loading = true;\n  }\n\n  load(formio: FormioPromiseService, query?: any): Promise<any> {\n    return formio.loadForm(query);\n  }\n\n  onRowSelect(event, row) {\n    event.preventDefault();\n    this.rowSelect.emit(row);\n  }\n\n  onRowAction(event, row, action) {\n    event.preventDefault();\n    this.rowAction.emit({ row, action });\n  }\n\n  /**\n   * Set the rows for this Grid body.\n   *\n   * @param query\n   * @param items\n   * @return any\n   */\n  setRows(query: any, items: any) {\n    this.rows = [];\n\n    if (typeof items !== 'object') {\n      this.firstItem = 0;\n      this.lastItem = 0;\n      this.total = 0;\n      this.skip = 0;\n      this.loading = false;\n      return this.rows;\n    }\n\n    this.firstItem = query.skip + 1;\n    this.lastItem = this.firstItem + items.length - 1;\n    this.total = items.serverCount;\n    this.limit = query.limit;\n    this.skip = Math.floor(items.skip / query.limit) + 1;\n    this.loading = false;\n    each(items, (item: any) => {\n      this.rows.push(clone(item));\n    });\n    return this.rows;\n  }\n}\n","<ng-template>\n  <tbody *ngIf=\"rows\">\n    <tr *ngFor=\"let form of rows\">\n      <td>\n        <div class=\"row\">\n          <div class=\"col-sm-8\">\n            <a routerLink=\"{{form._id}}/view\" (click)=\"onRowSelect($event, form)\"><h5>{{ form.title }}</h5></a>\n          </div>\n          <div class=\"col-sm-4\">\n            <button *ngIf=\"actionAllowed('formView')\" class=\"btn btn-secondary btn-sm form-btn\" (click)=\"onRowAction($event, form, 'view')\"><span class=\"fa fa-pencil\"></span> Enter Data</button>&nbsp;\n            <button *ngIf=\"actionAllowed('submissionIndex')\" class=\"btn btn-secondary btn-sm form-btn\" (click)=\"onRowAction($event, form, 'submission')\"><span class=\"fa fa-list-alt\"></span> View Data</button>&nbsp;\n            <button *ngIf=\"actionAllowed('formEdit')\" class=\"btn btn-secondary btn-sm form-btn\" (click)=\"onRowAction($event, form, 'edit')\"><span class=\"fa fa-edit\"></span> Edit Form</button>&nbsp;\n            <button *ngIf=\"actionAllowed('formDelete')\" class=\"btn btn-secondary btn-sm form-btn\" (click)=\"onRowAction($event, form, 'delete')\"><span class=\"fa fa-trash\"></span></button>\n          </div>\n        </div>\n      </td>\n    </tr>\n  </tbody>\n</ng-template>\n","import { Component } from '@angular/core';\nimport { GridBodyComponent } from '../GridBodyComponent';\nimport { FormioPromiseService } from 'angular-formio';\n\n@Component({\n  selector: 'form-grid-body',\n  styleUrls: ['./FormGridBody.component.scss'],\n  templateUrl: './FormGridBody.component.html'\n})\nexport class FormGridBodyComponent extends GridBodyComponent {\n  load(formio: FormioPromiseService, query?: any) {\n    query = query || {};\n    return formio.loadForms({ params: query }).then((forms: any) => this.setRows(query, forms));\n  }\n}\n","import { GridFooterPositions } from './types/grid-footer-positions';\nimport { Input, Output, ViewChild, TemplateRef, EventEmitter, Component } from '@angular/core';\nimport { GridHeaderComponent } from './GridHeaderComponent';\nimport { GridBodyComponent } from './GridBodyComponent';\n\n@Component({\n  template: ''\n})\nexport abstract class GridFooterComponent {\n  @Input() header: GridHeaderComponent;\n  @Input() body: GridBodyComponent;\n  @Input() createText: String;\n  @Input() size: number;\n  @Input() actionAllowed: any;\n  @Output() pageChanged: EventEmitter<any>;\n  @Output() createItem: EventEmitter<any>;\n  @ViewChild(TemplateRef, {static: true}) template: TemplateRef<any>;\n\n  public footerPositions = GridFooterPositions;\n\n  constructor() {\n    this.pageChanged = new EventEmitter();\n    this.createItem = new EventEmitter();\n  }\n}\n","<ng-template #footer let-position=\"position\">\n  <thead class=\"formio-grid-footer\" *ngIf=\"position === footerPositions.top\">\n    <ng-container [ngTemplateOutlet]=\"defaultFooterTemplate\"></ng-container>\n  </thead>\n  <tfoot class=\"formio-grid-footer\" *ngIf=\"position === footerPositions.bottom\">\n    <ng-container [ngTemplateOutlet]=\"defaultFooterTemplate\"></ng-container>\n  </tfoot>\n</ng-template>\n\n<ng-template #defaultFooterTemplate>\n  <tr>\n    <td *ngIf=\"header\" [colSpan]=\"header.numHeaders\">\n      <button *ngIf=\"actionAllowed('formCreate')\" class=\"btn btn-primary pull-left float-left\" (click)=\"createItem.emit('form')\"><i class=\"glyphicon glyphicon-plus fa fa-plus\"></i> {{ createText }}</button>\n      <span class=\"pull-right float-right item-counter\"><span class=\"page-num\">{{ body.firstItem }} - {{ body.lastItem }}</span> / {{ body.total }} total</span>\n      <pagination [totalItems]=\"body.total\" [itemsPerPage]=\"body.limit\" [(ngModel)]=\"body.skip\" (pageChanged)=\"pageChanged.emit($event)\" [maxSize]=\"size\" class=\"justify-content-center pagination-sm\">\n      </pagination>\n    </td>\n  </tr>\n</ng-template>\n","import {Component, ViewEncapsulation, OnInit } from '@angular/core';\nimport { GridFooterComponent } from '../GridFooterComponent';\n\n@Component({\n  templateUrl: './FormGridFooter.component.html',\n  styleUrls: ['../grid.footer.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class FormGridFooterComponent extends GridFooterComponent implements OnInit {\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    if (!this.createText) {\n      this.createText = 'Create Form';\n    }\n    if (!this.size) {\n      this.size = 7;\n    }\n  }\n}\n","import { FormGridHeaderComponent } from './FormGridHeader.component';\nimport { FormGridBodyComponent } from './FormGridBody.component';\nimport { FormGridFooterComponent } from './FormGridFooter.component';\nexport default {\n  header: FormGridHeaderComponent,\n  body: FormGridBodyComponent,\n  footer: FormGridFooterComponent\n};\n","<ng-template>\n  <thead>\n    <tr>\n      <th *ngFor=\"let header of headers\">\n        <a (click)=\"sort.emit(header)\">\n          {{ header.label }}&nbsp;<span [ngClass]=\"{'glyphicon-triangle-top': (header.sort === 'asc'), 'glyphicon-triangle-bottom': (header.sort === 'desc')}\" class=\"glyphicon\" *ngIf=\"header.sort\"></span>\n        </a>\n      </th>\n    </tr>\n  </thead>\n</ng-template>\n","import {Component, EventEmitter} from '@angular/core';\nimport {Utils, Components, ExtendedComponentSchema} from 'formiojs';\nimport {GridHeaderComponent} from '../GridHeaderComponent';\nimport {FormioPromiseService} from 'angular-formio';\nimport {ComponentInstance, FormioForm} from 'angular-formio';\nimport {GridColumn} from '../types/grid-column';\nimport {GridHeader, SortType} from '../types/grid-header';\n\n@Component({\n  templateUrl: './SubmissionGridHeader.component.html'\n})\nexport class SubmissionGridHeaderComponent extends GridHeaderComponent {\n\n  // Map structure where the key is the path and the value is the component\n  formComponents: Map<string, ExtendedComponentSchema>;\n\n  load(formio: FormioPromiseService, query?: any, columns?: Array<GridColumn>) {\n    query = query || {};\n    return formio.loadForm({params: query}).then((form: FormioForm) => {\n      this.headers = [];\n      this.formComponents = new Map<string, ExtendedComponentSchema>();\n      this.setComponents(form.components);\n      columns ? columns.forEach(column => {\n          this.setHeader(this.getHeaderForColumn(column, this.formComponents.get(column.path)));\n        }) : this.setComponentsHeaders(this.formComponents);\n\n      return this.headers;\n    });\n  }\n\n  setHeader(header: GridHeader) {\n    this.headers.push(header);\n  }\n\n  getHeaderForColumn(column: GridColumn, component?: ExtendedComponentSchema, sort?: SortType) {\n    return {\n      label: column.label,\n      key: column.path,\n      sort: sort,\n      component: component ? Components.create(component, null, null, true) as ComponentInstance : undefined,\n      renderCell: column ? column.renderCell : undefined\n    };\n  }\n\n  getHeaderForComponent(component: ExtendedComponentSchema, path: string, sort?: SortType) {\n    return {\n      label: component.label,\n      key: path,\n      sort: sort,\n      component: component ? Components.create(component, null, null, true) as ComponentInstance : undefined,\n    };\n  }\n  // Set headers from components in case if columns are not provided\n  setComponentsHeaders(components: Map<string, ExtendedComponentSchema>, sort?: SortType) {\n    components.forEach((component, path) => {\n      if (\n        component.input &&\n        (!component.hasOwnProperty('tableView') || component.tableView)\n      ) {\n        this.setHeader(this.getHeaderForComponent(component, path, sort));\n      }\n    });\n  }\n\n  // Map components\n  setComponents(components) {\n    Utils.eachComponent(components, (component: ExtendedComponentSchema, newPath: string) => {\n      this.formComponents.set(`data.${newPath}`, component);\n    });\n  }\n}\n\n","<ng-template>\n  <tbody>\n    <tr *ngFor=\"let row of rows\" (click)=\"onRowSelect($event, row)\">\n      <td *ngFor=\"let rowHeader of header.headers\" [innerHTML]=\"view(row, rowHeader)\"></td>\n    </tr>\n  </tbody>\n</ng-template>\n","import { Component } from '@angular/core';\nimport { each, get } from 'lodash';\nimport { GridBodyComponent } from '../GridBodyComponent';\nimport {FormioPromiseService} from 'angular-formio';\nimport { GridHeader } from '../types/grid-header';\nimport {FormioSubmission} from 'angular-formio';\n@Component({\n  templateUrl: './SubmissionGridBody.component.html'\n})\nexport class SubmissionGridBodyComponent extends GridBodyComponent {\n  load(formio: FormioPromiseService, query?: any) {\n    query = query || {};\n    return formio.loadSubmissions({ params: query })\n      .then((submissions: any) => this.setRows(query, submissions));\n  }\n\n  /**\n   * Render the cell data.\n   *\n   * @param submission\n   * @param header\n   * @return any\n   */\n  view(submission: FormioSubmission, header: GridHeader): string {\n    const cellValue: any = get(submission, header.key);\n    if (header.renderCell) {\n      return header.renderCell(cellValue, header.component);\n    } else {\n      if (header.component) {\n        if (header.component.getView) {\n          return header.component.getView(cellValue);\n        }\n        return header.component.asString(cellValue);\n      } else {\n        return cellValue.toString();\n      }\n    }\n  }\n}\n","<ng-template #footer let-position=\"position\">\n  <thead class=\"formio-grid-footer\" *ngIf=\"position === footerPositions.top\">\n    <ng-container [ngTemplateOutlet]=\"defaultFooterTemplate\"></ng-container>\n  </thead>\n  <tfoot class=\"formio-grid-footer\" *ngIf=\"position === footerPositions.bottom\">\n    <ng-container [ngTemplateOutlet]=\"defaultFooterTemplate\"></ng-container>\n  </tfoot>\n</ng-template>\n\n<ng-template #defaultFooterTemplate>\n  <tr>\n    <td *ngIf=\"header\" [colSpan]=\"header.numHeaders\">\n      <button *ngIf=\"actionAllowed('submissionCreate') && createText\" class=\"btn btn-primary pull-left float-left\" (click)=\"createItem.emit('form')\"><i class=\"glyphicon glyphicon-plus fa fa-plus\"></i> {{ createText }}</button>\n      <span class=\"pull-right float-right item-counter\"><span class=\"page-num\">{{ body.firstItem }} - {{ body.lastItem }}</span> / {{ body.total }} total</span>\n      <pagination [totalItems]=\"body.total\" [itemsPerPage]=\"body.limit\" [(ngModel)]=\"body.skip\" (pageChanged)=\"pageChanged.emit($event)\" [maxSize]=\"size\" class=\"justify-content-center pagination-sm\"></pagination>\n    </td>\n  </tr>\n</ng-template>\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport { GridFooterComponent } from '../GridFooterComponent';\n\n@Component({\n  templateUrl: './SubmissionGridFooter.component.html',\n  styleUrls: ['../grid.footer.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class SubmissionGridFooterComponent extends GridFooterComponent implements OnInit {\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    if (!this.size) {\n      this.size = 7;\n    }\n  }\n}\n","import { SubmissionGridHeaderComponent } from './SubmissionGridHeader.component';\nimport { SubmissionGridBodyComponent } from './SubmissionGridBody.component';\nimport { SubmissionGridFooterComponent } from './SubmissionGridFooter.component';\nexport default {\n  header: SubmissionGridHeaderComponent,\n  body: SubmissionGridBodyComponent,\n  footer: SubmissionGridFooterComponent\n};\n","<ng-template #headerTemplate></ng-template>\n<ng-template #bodyTemplate></ng-template>\n<ng-template #footerTemplate></ng-template>\n<div class=\"formio-grid\">\n  <formio-alerts [alerts]=\"alerts\"></formio-alerts>\n  <table class=\"table table-bordered table-striped table-hover\">\n    <ng-container *ngIf=\"initialized && [footerPositions.top, footerPositions.both].indexOf(footerPosition) !== -1\"\n      [ngTemplateOutlet]=\"footer.template\" [ngTemplateOutletContext]=\"{ position: footerPositions.top }\">\n    </ng-container>\n    <ng-container *ngIf=\"initialized\"\n      [ngTemplateOutlet]=\"header.template\"></ng-container>\n    <formio-loader [isLoading]=\"isLoading\"></formio-loader>\n    <ng-container *ngIf=\"initialized\" [ngTemplateOutlet]=\"body.template\"></ng-container>\n    <ng-container *ngIf=\"initialized && [footerPositions.bottom, footerPositions.both].indexOf(footerPosition) !== -1\"\n      [ngTemplateOutlet]=\"footer.template\" [ngTemplateOutletContext]=\"{ position: footerPositions.bottom }\">\n    </ng-container>\n  </table>\n</div>\n","import { GridFooterPositions } from './types/grid-footer-positions';\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport {FormioAlerts} from 'angular-formio';\nimport {each} from 'lodash';\nimport {Formio} from 'formiojs';\nimport {GridHeaderComponent} from './GridHeaderComponent';\nimport {GridBodyComponent} from './GridBodyComponent';\nimport {GridFooterComponent} from './GridFooterComponent';\nimport FormComponents from './form/index';\nimport SubmissionComponents from './submission/index';\nimport {FormioPromiseService} from 'angular-formio';\nimport {GridColumn} from './types/grid-column';\nimport {GridHeader, SortType} from './types/grid-header';\n\n@Component({\n  selector: 'formio-grid',\n  styleUrls: ['./grid.component.scss'],\n  templateUrl: './grid.component.html'\n})\nexport class FormioGridComponent implements OnChanges, OnInit, AfterViewInit {\n  @Input() footerPosition = GridFooterPositions.bottom;\n  @Input() src?: string;\n  @Input() items?: Array<any>;\n  @Input() onForm?: Promise<any>;\n  @Input() query?: any;\n  @Input() refresh?: EventEmitter<object>;\n  @Input() columns?: Array<GridColumn>;\n  @Input() gridType?: string;\n  @Input() size?: number;\n  @Input() components?: any;\n  @Input() formio?: FormioPromiseService;\n  @Input() createText: String;\n  @Input() isActionAllowed: any;\n  @Output() select: EventEmitter<object>;\n  @Output() rowSelect: EventEmitter<object>;\n  @Output() rowAction: EventEmitter<object>;\n  @Output() createItem: EventEmitter<any>;\n  @Output() error: EventEmitter<any>;\n  @ViewChild('headerTemplate', {read: ViewContainerRef, static: true}) headerElement: ViewContainerRef;\n  @ViewChild('bodyTemplate', {read: ViewContainerRef, static: true}) bodyElement: ViewContainerRef;\n  @ViewChild('footerTemplate', {read: ViewContainerRef, static: true}) footerElement: ViewContainerRef;\n\n  public page = 0;\n  public isLoading = false;\n  public initialized = false;\n  public header: GridHeaderComponent;\n  public body: GridBodyComponent;\n  public footer: GridFooterComponent;\n  public footerPositions = GridFooterPositions;\n\n  constructor(\n    public alerts: FormioAlerts,\n    private resolver: ComponentFactoryResolver,\n    private ref: ChangeDetectorRef\n  ) {\n    this.select = this.rowSelect = new EventEmitter();\n    this.rowAction = new EventEmitter();\n    this.createItem = new EventEmitter();\n    this.error = new EventEmitter();\n    this.isLoading = true;\n  }\n\n  createComponent(property, component) {\n    const factory = this.resolver.resolveComponentFactory(component);\n    const componentRef = property.createComponent(factory);\n    return componentRef.instance;\n  }\n\n  loadGrid(src?: string) {\n    // If no source is provided, then skip.\n    if (!src && !this.formio) {\n      return;\n    }\n    // Do not double load.\n    if (this.formio && this.src && (src === this.src)) {\n      return;\n    }\n\n    if (src) {\n      this.src = src;\n      this.formio = new FormioPromiseService(this.src, { formOnly: true });\n    }\n\n    // Load the header.\n    this.header.load(this.formio, {}, this.columns)\n      .then(() => this.setPage(0))\n      .catch(error => this.onError(error));\n  }\n\n  ngOnInit() {\n    // Create our components.\n    const comps = this.components || ((this.gridType === 'form') ? FormComponents : SubmissionComponents);\n\n    this.header = this.createComponent(this.headerElement, comps.header);\n    this.header.actionAllowed = this.actionAllowed.bind(this);\n    this.header.sort.subscribe(header => this.sortColumn(header));\n\n    this.body = this.createComponent(this.bodyElement, comps.body);\n    this.body.header = this.header;\n    this.body.actionAllowed = this.actionAllowed.bind(this);\n    this.body.rowSelect.subscribe(row => this.rowSelect.emit(row));\n    this.body.rowAction.subscribe(action => this.rowAction.emit(action));\n\n    this.footer = this.createComponent(this.footerElement, comps.footer);\n    this.footer.header = this.header;\n    this.footer.body = this.body;\n    this.footer.actionAllowed = this.actionAllowed.bind(this);\n    this.footer.createText = this.createText;\n    this.footer.size = this.size;\n    this.footer.pageChanged.subscribe(page => this.pageChanged(page));\n    this.footer.createItem.subscribe(item => this.createItem.emit(item));\n  }\n\n  ngOnChanges(changes: any) {\n    if (this.initialized) {\n      if (\n        (changes.src && changes.src.currentValue) ||\n        (changes.formio && changes.formio.currentValue)\n      ) {\n        this.loadGrid(changes.src.currentValue);\n      }\n\n      if (changes.items && changes.items.currentValue) {\n        this.refreshGrid();\n      }\n    }\n\n    if (this.footer &&\n        (changes.createText && changes.createText.currentValue)) {\n      this.footer.createText = changes.createText.currentValue;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.alerts.setAlerts([]);\n    this.query = this.query || {};\n    if (this.refresh) {\n      this.refresh.subscribe((query: object) => this.refreshGrid(query));\n    }\n    this.loadGrid(this.src);\n    this.initialized = true;\n    this.ref.detectChanges();\n  }\n\n  actionAllowed(action) {\n    if (this.isActionAllowed) {\n      return this.isActionAllowed(action);\n    } else {\n      return true;\n    }\n  }\n\n  onError(error: any) {\n    this.isLoading = false;\n    this.error.emit(error);\n    this.alerts.setAlert({\n      type: 'danger',\n      message: error\n    });\n  }\n\n  refreshGrid(query?: any) {\n    this.alerts.setAlerts([]);\n    this.query = query || this.query;\n    if (!this.query.hasOwnProperty('limit')) {\n      this.query.limit = 10;\n    }\n    if (!this.query.hasOwnProperty('skip')) {\n      this.query.skip = 0;\n    }\n    this.isLoading = true;\n    this.ref.detectChanges();\n    Formio.cache = {};\n    let loader = null;\n    if (this.items) {\n      loader = Promise.resolve(this.body.setRows(this.query, this.items));\n    } else {\n      loader = this.body.load(this.formio, this.query);\n    }\n\n    return loader.then(info => {\n      this.isLoading = false;\n      this.initialized = true;\n      this.ref.detectChanges();\n    }).catch(error => this.onError(error));\n  }\n\n  setPage(num = -1) {\n    this.page = num !== -1 ? num : this.page;\n    if (!this.query.hasOwnProperty('limit')) {\n      this.query.limit = 10;\n    }\n    if (!this.query.hasOwnProperty('skip')) {\n      this.query.skip = 0;\n    }\n    this.query.skip = this.page * this.query.limit;\n    this.refreshGrid();\n  }\n\n  sortColumn(header: GridHeader) {\n    // Reset all other column sorts.\n    each(this.header.headers, (col: any) => {\n      if (col.key !== header.key) {\n        col.sort = '';\n      }\n    });\n    switch (header.sort) {\n      case 'asc':\n        header.sort = SortType.DESC;\n        this.query.sort = '-' + header.key;\n        break;\n      case 'desc':\n        header.sort = undefined;\n        delete this.query.sort;\n        break;\n      case undefined:\n        header.sort = SortType.ASC;\n        this.query.sort = header.key;\n        break;\n    }\n    this.refreshGrid();\n  }\n\n  pageChanged(page: any) {\n    this.setPage(page.page - 1);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { FormioModule } from 'angular-formio';\nimport { FormioAlerts } from 'angular-formio';\nimport { FormioGridComponent } from './grid.component';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { FormGridHeaderComponent } from './form/FormGridHeader.component';\nimport { FormGridBodyComponent } from './form/FormGridBody.component';\nimport { FormGridFooterComponent } from './form/FormGridFooter.component';\nimport { SubmissionGridHeaderComponent } from './submission/SubmissionGridHeader.component';\nimport { SubmissionGridBodyComponent } from './submission/SubmissionGridBody.component';\nimport { SubmissionGridFooterComponent } from './submission/SubmissionGridFooter.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    FormioModule,\n    RouterModule,\n    PaginationModule.forRoot()\n  ],\n  declarations: [\n    FormioGridComponent,\n    FormGridHeaderComponent,\n    FormGridBodyComponent,\n    FormGridFooterComponent,\n    SubmissionGridHeaderComponent,\n    SubmissionGridBodyComponent,\n    SubmissionGridFooterComponent\n  ],\n  exports: [\n    FormioGridComponent\n  ],\n  entryComponents: [\n    FormGridHeaderComponent,\n    FormGridBodyComponent,\n    FormGridFooterComponent,\n    SubmissionGridHeaderComponent,\n    SubmissionGridBodyComponent,\n    SubmissionGridFooterComponent\n  ],\n  providers: [\n    FormioAlerts\n  ]\n})\nexport class FormioGrid {}\n"]}