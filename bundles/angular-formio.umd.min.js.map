{"version":3,"sources":["../../../projects/angular-formio/src/formio.config.ts","../../../projects/angular-formio/src/formio.common.ts","../../../projects/angular-formio/src/formio.service.ts","../../../projects/angular-formio/src/formio-promise.service.ts","../../../projects/angular-formio/src/types/alerts-position.ts","../../../projects/angular-formio/src/components/alerts/formio.alerts.ts","../../../projects/angular-formio/src/custom-component/custom-tags.service.ts","../../../projects/angular-formio/src/FormioBaseComponent.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/angular-formio/src/components/loader/formio.loader.component.html","../../../projects/angular-formio/src/components/loader/formio.loader.component.ts","../../../projects/angular-formio/src/components/alerts/parse-html-content.pipe.ts","../../../projects/angular-formio/src/components/alerts/formio.alerts.component.html","../../../projects/angular-formio/src/components/alerts/formio.alerts.component.ts","../../../projects/angular-formio/src/components/formio/formio.component.html","../../../projects/angular-formio/src/components/formio/formio.component.ts","../../../projects/angular-formio/src/components/formbuilder/formbuilder.component.ts","../../../projects/angular-formio/src/components/formbuilder/formbuilder.component.html","../../../projects/angular-formio/src/formio.module.ts","../../../projects/angular-formio/src/custom-component/create-custom-component.ts","../../../projects/angular-formio/src/custom-component/register-custom-component.ts","../../../projects/angular-formio/src/formio.utils.ts"],"names":["this","appUrl","apiUrl","FormioAppConfig","factory","ɵfac","message","component","silent","FormioService","url","options","formio","Formio","prototype","requestWrapper","fn","record","called","Observable","create","observer","next","complete","then","_record","catch","err","error","saveForm","form","_this","loadForm","query","loadForms","loadSubmission","userPermissions","user","submission","deleteSubmission","data","saveSubmission","loadSubmissions","FormioPromiseService","formioService","toPromise","AlertsPosition","FormioAlerts","alerts","setAlert","alert","addAlert","push","setAlerts","CustomTagsService","tags","addCustomTag","tag","FormioBaseComponent","ngZone","config","customTags","noeval","readOnly","viewOnly","hooks","watchSubmissionErrors","render","EventEmitter","customEvent","fileUploadingStatus","submit","prevPage","nextPage","beforeSubmit","change","invalid","errorChange","formLoad","submissionLoad","ready","initialized","submitting","submissionSuccess","isLoading","formioReady","Promise","formioReadyResolve","getRenderer","renderer","getRendererOptions","extraTags","assign","icons","get","noAlerts","viewAsHtml","i18n","fileService","sanitizeConfig","addTags","renderOptions","createRenderer","formioElement","nativeElement","instance","setForm","destroy","innerHTML","validateOnInit","setValue","setUrl","formioOptions","src","nosubmit","on","run","onPrevPage","onNextPage","value","flags","isModified","onChange","event","emit","forEach","eventName","index","status","saved","submitForm","onError","loadedForm","submissionReady","initialize","defaultOptions","errors","submitMessage","disableAlerts","alertsPosition","top","Object","none","ngOnInit","Evaluator","language","subscribe","lang","refresh","onRefresh","success","type","service","params","live","components","runOutsideAngular","isEmpty","submissionId","ngOnDestroy","setSubmission","property","ngOnChanges","changes","currentValue","fromSubmission","hideComponents","hiddenComponents_1","hide","everyComponent","includes","key","visible","onSubmit","noemit","Array","isArray","length","_a","details","map","detail","join","paths","path","toString","getComponent","comp","setCustomValidity","focusOnComponet","focusOnComponent","submitExecute","sub","i0","ɵɵdirectiveInject","NgZone","selectors","viewQuery","rf","ctx","extendStatics","d","b","setPrototypeOf","__proto__","p","hasOwnProperty","call","__extends","__","constructor","i0.ɵɵelementStart","i0.ɵɵelement","i0.ɵɵelementEnd","FormioLoaderComponent","inputs","decls","vars","consts","template","i0.ɵɵtemplate","i0.ɵɵproperty","ParseHtmlContentPipe","transform","content","DOMParser","parseFromString","body","childNodes","textContent","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵclassMapInterpolate1","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","pure","FormioAlertsComponent","focusComponent","outputs","FormioComponent","_super","setBaseUrl","setProjectUrl","console","warn","Form","features","ɵɵInheritDefinitionFeature","FormBuilderComponent","componentAdding","resolve","readyResolve","Utils","refreshSubscription","buildForm","rebuild","rebuildForm","setInstance","off","parent","isNew","builder","schema","original","originalComponent","setDisplay","display","builderElement","Builder","formbuilder","FormBuilder","unsubscribe","FormioModule","providers","imports","CommonModule","declarations","exports","BaseInputComponent","Components","input","TextfieldComponent","textfield","createCustomFormioComponent","customComponentOptions","CustomComponent","selector","id","FormioUtils","getRandomComponentId","extraValidators","validators","concat","defineProperty","emptyValue","title","group","icon","weight","documentation","elementInfo","info","changeEvent","attr","class","replace","renderElement","inputInfo","renderTemplate","attach","element","superAttach","_customAngularElement","querySelector","getAttribute","removeAttribute","newCustomElement_1","document","createElement","setAttribute","keys","appendChild","customOptions","validate","fieldOptions","addEventListener","disableMultiValueWrapper","restoreValue","useWrapper","multiple","defaultValue","isNil","customDefaultValue","preview","evaluate","clone","editForm","registerCustomTag","injector","Class","ClassRoutes","each","decorators","decorator","args","arg","_import","ngModule","name","RouterModule","forChild","angularComponent","complexCustomComponent","createCustomElement","customElements","define","setComponent","formioClass"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class FormioAppConfig {\n  appUrl = '';\n  apiUrl = '';\n  icons?: string;\n  formOnly?: boolean;\n}\n","import { ExtendedComponentSchema, ValidateOptions } from 'formiojs';\nimport { AlertsPosition } from './types/alerts-position';\nexport { ConditionalOptions, ValidateOptions } from 'formiojs';\n\nexport interface ComponentOptions<T = any, V = ValidateOptions> extends ExtendedComponentSchema<T> {\n  validate?: V;\n}\n\nexport interface FormioRefreshValue {\n  property?: string;\n  value?: object;\n  form?: object;\n  submission?: object;\n}\n\nexport interface AccessSetting {\n  type: string;\n  roles: string[];\n}\n\nexport interface FormioForm {\n  title?: string;\n  display?: string;\n  name?: string;\n  path?: string;\n  type?: string;\n  project?: string;\n  template?: string;\n  components?: ExtendedComponentSchema[];\n  tags?: string[];\n  access?: AccessSetting[];\n  submissionAccess?: AccessSetting[];\n}\n\nexport interface ComponentInstance {\n  component: ExtendedComponentSchema;\n  id: string;\n  type: string;\n  asString?(value: any): string;\n  getView(value: any): string;\n}\n\nexport interface AlertsOptions {\n  submitMessage: string;\n}\n\nexport interface ErrorsOptions {\n  message: string;\n}\n\nexport class FormioError {\n  constructor(\n    public message: string,\n    public component: ExtendedComponentSchema,\n    public silent?: boolean,\n  ) {}\n}\n\nexport type FormioSubmissionCallback = (\n  error: FormioError,\n  submission: object\n) => void;\nexport type FormioBeforeSubmit = (\n  submission: object,\n  callback: FormioSubmissionCallback\n) => void;\n\nexport interface FormioHookOptions {\n  beforeSubmit: FormioBeforeSubmit;\n}\n\nexport interface FormioOptions {\n  errors?: ErrorsOptions;\n  alerts?: AlertsOptions;\n  alertsPosition?: AlertsPosition;\n  disableAlerts?: boolean;\n  i18n?: object;\n  fileService?: object;\n  hooks?: FormioHookOptions;\n  sanitizeConfig?: any;\n}\n","import { Observable, Observer } from 'rxjs';\nimport { FormioForm } from './formio.common';\nimport { Formio } from 'formiojs';\n\nexport class FormioService {\n  public formio: any;\n  constructor(public url: string, public options?: object) {\n    this.formio = new Formio(this.url, this.options);\n  }\n  requestWrapper(fn: any) {\n    let record: any;\n    let called = false;\n    return Observable.create((observer: Observer<any>) => {\n      try {\n        if (!called) {\n          called = true;\n          fn()\n            .then((_record: any) => {\n              record = _record;\n              observer.next(record);\n              observer.complete();\n            })\n            .catch((err: any) => observer.error(err));\n        } else if (record) {\n          observer.next(record);\n          observer.complete();\n        }\n      } catch (err) {\n        observer.error(err);\n      }\n    });\n  }\n  saveForm(form: FormioForm, options?: any): Observable<FormioForm> {\n    return this.requestWrapper(() => this.formio.saveForm(form, options));\n  }\n  loadForm(query?: any, options?: any): Observable<FormioForm> {\n    return this.requestWrapper(() => this.formio.loadForm(query, options));\n  }\n  loadForms(query: any, options?: any): Observable<FormioForm> {\n    return this.requestWrapper(() => this.formio.loadForms(query, options));\n  }\n  loadSubmission(query?: any, options?: any): Observable<{}> {\n    return this.requestWrapper(() => this.formio.loadSubmission(query, options));\n  }\n  userPermissions(user: any, form: any, submission: any): Observable<{}> {\n    return this.requestWrapper(() => this.formio.userPermissions(user, form, submission));\n  }\n  deleteSubmission(data?: any, options?: any): Observable<{}> {\n    return this.requestWrapper(() => this.formio.deleteSubmission(data, options));\n  }\n  saveSubmission(submission: {}, options?: any): Observable<{}> {\n    return this.requestWrapper(() => this.formio.saveSubmission(submission, options));\n  }\n  loadSubmissions(query?: any, options?: any): Observable<{}> {\n    return this.requestWrapper(() => this.formio.loadSubmissions(query, options));\n  }\n}\n","import { from } from 'rxjs';\nimport { FormioService } from './formio.service';\nimport { FormioForm } from './formio.common';\n\nexport class FormioPromiseService {\n  private formioService: FormioService;\n\n  constructor(public url: string, public options?: object) {\n    this.formioService = new FormioService(url, options);\n  }\n\n  saveForm(form: FormioForm, options?: any): Promise<any> {\n    return this.formioService.saveForm(form, options).toPromise();\n  }\n  loadForm(query?: any, options?: any): Promise<any> {\n    return this.formioService.loadForm(query, options).toPromise();\n  }\n  loadSubmission(query?: any, options?: any): Promise<any> {\n    return this.formioService.loadSubmission(query, options).toPromise();\n  }\n  userPermissions(user: any, form: any, submission: any): Promise<any> {\n    return this.formioService.userPermissions(user, form, submission).toPromise();\n  }\n  deleteSubmission(data?: any, options?: any): Promise<any> {\n    return this.formioService.deleteSubmission(data, options).toPromise();\n  }\n  loadForms(query: any, options?: any): Promise<any> {\n    return this.formioService.loadForms(query, options).toPromise();\n  }\n  saveSubmission(submission: {}, options?: any): Promise<any> {\n    return this.formioService.saveSubmission(submission, options).toPromise();\n  }\n  loadSubmissions(query?: any, options?: any): Promise<any> {\n    return this.formioService.loadSubmissions(query, options).toPromise();\n  }\n}\n","export enum AlertsPosition {\n  none,\n  top,\n  bottom,\n  both\n}\n","export interface FormioAlert {\n  type: string;\n  message: string;\n  component?: any;\n}\n\nexport class FormioAlerts {\n  public alerts: FormioAlert[] = [];\n\n  setAlert(alert: FormioAlert) {\n    this.alerts = [alert];\n  }\n\n  addAlert(alert: FormioAlert) {\n    this.alerts.push(alert);\n  }\n\n  setAlerts(alerts: FormioAlert[]) {\n    this.alerts = alerts;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CustomTagsService {\n  tags: string[] = [];\n\n  addCustomTag(tag: string) {\n    this.tags.push(tag);\n  }\n}\n","import { Component, ElementRef, EventEmitter, Input, NgZone, OnChanges, OnDestroy, OnInit, Optional, Output, ViewChild } from '@angular/core';\nimport { FormioService } from './formio.service';\nimport { FormioAlerts } from './components/alerts/formio.alerts';\nimport { FormioAppConfig } from './formio.config';\nimport { FormioError, FormioForm, FormioOptions, FormioRefreshValue } from './formio.common';\nimport { assign, get, isEmpty } from 'lodash';\nimport { CustomTagsService } from './custom-component/custom-tags.service';\nimport Evaluator from 'formiojs/utils/Evaluator';\nimport { AlertsPosition } from './types/alerts-position';\n\n@Component({\n  template: ''\n})\nexport abstract class FormioBaseComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() form?: FormioForm;\n  @Input() submission?: any = {};\n  @Input() src?: string;\n  @Input() url?: string;\n  @Input() service?: FormioService;\n  @Input() options?: FormioOptions;\n  @Input() noeval ? = false;\n  @Input() formioOptions?: any;\n  @Input() renderOptions?: any;\n  @Input() readOnly ? = false;\n  @Input() viewOnly ? = false;\n  @Input() hideComponents?: string[];\n  @Input() refresh?: EventEmitter<FormioRefreshValue>;\n  @Input() error?: EventEmitter<any>;\n  @Input() success?: EventEmitter<object>;\n  @Input() language?: EventEmitter<string>;\n  @Input() hooks?: any = {};\n  @Input() renderer?: any;\n  @Input() watchSubmissionErrors ? = false;\n  @Output() render = new EventEmitter<object>();\n  @Output() customEvent = new EventEmitter<object>();\n  @Output() fileUploadingStatus = new EventEmitter<string>();\n  @Output() submit = new EventEmitter<object>();\n  @Output() prevPage = new EventEmitter<object>();\n  @Output() nextPage = new EventEmitter<object>();\n  @Output() beforeSubmit = new EventEmitter<object>();\n  @Output() change = new EventEmitter<object>();\n  @Output() invalid = new EventEmitter<boolean>();\n  @Output() errorChange = new EventEmitter<any>();\n  @Output() formLoad = new EventEmitter<any>();\n  @Output() submissionLoad = new EventEmitter<any>();\n  @Output() ready = new EventEmitter<FormioBaseComponent>();\n  @ViewChild('formio', { static: true }) formioElement?: ElementRef<any>;\n\n  public AlertsPosition = AlertsPosition;\n  public formio: any;\n  public initialized = false;\n  public alerts = new FormioAlerts();\n  public formioReady: Promise<any>;\n\n  private formioReadyResolve: any;\n  private submitting = false;\n  private submissionSuccess = false;\n  public isLoading: boolean;\n\n  constructor(\n    public ngZone: NgZone,\n    @Optional() public config: FormioAppConfig,\n    @Optional() public customTags?: CustomTagsService,\n  ) {\n    this.isLoading = true;\n    this.formioReady = new Promise((ready) => {\n      this.formioReadyResolve = ready;\n    });\n  }\n\n  getRenderer() {\n    return this.renderer;\n  }\n\n  getRendererOptions() {\n    const extraTags = this.customTags ? this.customTags.tags : [];\n    return assign({}, {\n      icons: get(this.config, 'icons', 'fontawesome'),\n      noAlerts: get(this.options, 'noAlerts', true),\n      readOnly: this.readOnly,\n      viewAsHtml: this.viewOnly,\n      i18n: get(this.options, 'i18n', null),\n      fileService: get(this.options, 'fileService', null),\n      hooks: this.hooks,\n      sanitizeConfig: {\n        addTags: extraTags\n      }\n    }, this.renderOptions || {});\n  }\n\n  createRenderer() {\n    const Renderer = this.getRenderer();\n    const form = (new Renderer(\n      this.formioElement ? this.formioElement.nativeElement : null,\n      this.form,\n      this.getRendererOptions()\n    ));\n    return form.instance;\n  }\n\n  setForm(form: FormioForm) {\n    this.form = form;\n    if (this.formio) {\n      this.formio.destroy();\n    }\n    // Clear out the element to render the new form.\n    if (this.formioElement && this.formioElement.nativeElement) {\n      this.formioElement.nativeElement.innerHTML = '';\n    }\n    this.formio = this.createRenderer();\n    this.formio.submission = this.submission;\n    if (this.renderOptions && this.renderOptions.validateOnInit) {\n      this.formio.setValue(this.submission, {validateOnInit: true});\n    }\n    if (this.url) {\n      this.formio.setUrl(this.url, this.formioOptions || {});\n    }\n    if (this.src) {\n      this.formio.setUrl(this.src, this.formioOptions || {});\n    }\n    this.formio.nosubmit = true;\n    this.formio.on('prevPage', (data: any) => this.ngZone.run(() => this.onPrevPage(data)));\n    this.formio.on('nextPage', (data: any) => this.ngZone.run(() => this.onNextPage(data)));\n    this.formio.on('change', (value: any, flags: any, isModified: boolean) => this.ngZone.run(() => this.onChange(value, flags, isModified)));\n    this.formio.on('customEvent', (event: any) =>\n      this.ngZone.run(() => this.customEvent.emit(event))\n    );\n    ['fileUploadingStart', 'fileUploadingEnd'].forEach((eventName, index) => {\n      const status = !!index ? 'end' : 'start';\n      this.formio.on(eventName, () =>\n        this.ngZone.run(() => this.fileUploadingStatus.emit(status))\n      );\n    });\n    this.formio.on('submit', (submission: any, saved: boolean) =>\n      this.ngZone.run(() => this.submitForm(submission, saved))\n    );\n    this.formio.on('error', (err: any) => this.ngZone.run(() => {\n      this.submissionSuccess = false;\n      return this.onError(err);\n    }));\n    this.formio.on('render', () => this.ngZone.run(() => this.render.emit()));\n    this.formio.on('formLoad', (loadedForm: any) =>\n      this.ngZone.run(() => this.formLoad.emit(loadedForm))\n    );\n\n    return this.formio.ready.then(() => {\n      this.ngZone.run(() => {\n        this.isLoading = false;\n        this.ready.emit(this);\n        this.formioReadyResolve(this.formio);\n        if (this.formio.submissionReady) {\n          this.formio.submissionReady.then((submission) => {\n            this.submissionLoad.emit(submission);\n          });\n        }\n      });\n      return this.formio;\n    });\n  }\n\n  initialize() {\n    if (this.initialized) {\n      return;\n    }\n\n    const extraTags = this.customTags ? this.customTags.tags : [];\n    const defaultOptions: FormioOptions = {\n      errors: {\n        message: 'Please fix the following errors before submitting.'\n      },\n      alerts: {\n        submitMessage: 'Submission Complete.'\n      },\n      disableAlerts: false,\n      hooks: {\n        beforeSubmit: null\n      },\n      sanitizeConfig: {\n        addTags: extraTags\n      },\n      alertsPosition: AlertsPosition.top,\n    };\n    this.options = Object.assign(defaultOptions, this.options);\n    if (this.options.disableAlerts) {\n      this.options.alertsPosition = AlertsPosition.none;\n    }\n    this.initialized = true;\n  }\n\n  ngOnInit() {\n    Evaluator.noeval = this.noeval;\n    this.initialize();\n\n    if (this.language) {\n      if (typeof this.language === 'string') {\n        this.formio.language = this.language;\n      } else {\n        this.language.subscribe((lang: string) => {\n          this.formio.language = lang;\n        });\n      }\n    }\n\n    if (this.refresh) {\n      this.refresh.subscribe((refresh: FormioRefreshValue) =>\n        this.onRefresh(refresh)\n      );\n    }\n\n    if (this.error) {\n      this.error.subscribe((err: any) => this.onError(err));\n    }\n\n    if (this.success) {\n      this.success.subscribe((message: string) => {\n        this.alerts.setAlert({\n          type: 'success',\n          message: message || get(this.options, 'alerts.submitMessage')\n        });\n      });\n    }\n\n    if (this.src) {\n      if (!this.service) {\n        this.service = new FormioService(this.src);\n      }\n      this.isLoading = true;\n      this.service.loadForm({ params: { live: 1 } }).subscribe(\n        (form: FormioForm) => {\n          if (form && form.components) {\n            this.ngZone.runOutsideAngular(() => {\n              this.setForm(form);\n            });\n          }\n\n          // if a submission is also provided.\n          if (\n            isEmpty(this.submission) &&\n            this.service &&\n            this.service.formio.submissionId\n          ) {\n            this.service.loadSubmission().subscribe(\n              (submission: any) => {\n                if (this.readOnly) {\n                  this.formio.options.readOnly = true;\n                }\n                this.submission = this.formio.submission = submission;\n              },\n              err => this.onError(err)\n            );\n          }\n        },\n        err => this.onError(err)\n      );\n    }\n    if (this.url && !this.service) {\n      this.service = new FormioService(this.url);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.formio) {\n      this.formio.destroy();\n    }\n  }\n\n  onRefresh(refresh: FormioRefreshValue) {\n    this.formioReady.then(() => {\n      if (refresh.form) {\n        this.formio.setForm(refresh.form).then(() => {\n          if (refresh.submission) {\n            this.formio.setSubmission(refresh.submission);\n          }\n        });\n      } else if (refresh.submission) {\n        this.formio.setSubmission(refresh.submission);\n      } else {\n        switch (refresh.property) {\n          case 'submission':\n            this.formio.submission = refresh.value;\n            break;\n          case 'form':\n            this.formio.form = refresh.value;\n            break;\n        }\n      }\n    });\n  }\n\n  ngOnChanges(changes: any) {\n    Evaluator.noeval = this.noeval;\n    this.initialize();\n\n    if (changes.form && changes.form.currentValue) {\n      this.ngZone.runOutsideAngular(() => {\n        this.setForm(changes.form.currentValue);\n      });\n    }\n\n    this.formioReady.then(() => {\n      if (changes.submission && changes.submission.currentValue) {\n        this.formio.setSubmission(changes.submission.currentValue, {\n          fromSubmission: false,\n        });\n      }\n\n      if (changes.hideComponents && changes.hideComponents.currentValue) {\n        const hiddenComponents = changes.hideComponents.currentValue;\n        this.formio.options.hide = hiddenComponents;\n        this.formio.everyComponent((component) => {\n          component.options.hide = hiddenComponents;\n          if (hiddenComponents.includes(component.component.key)) {\n            component.visible = false;\n          }\n        });\n      }\n    });\n  }\n\n  onPrevPage(data: any) {\n    this.alerts.setAlerts([]);\n    this.prevPage.emit(data);\n  }\n\n  onNextPage(data: any) {\n    this.alerts.setAlerts([]);\n    this.nextPage.emit(data);\n  }\n\n  onSubmit(submission: any, saved: boolean, noemit?: boolean) {\n    this.submitting = false;\n    this.submissionSuccess = true;\n    if (saved) {\n      this.formio.emit('submitDone', submission);\n    }\n    if (!noemit) {\n      this.submit.emit(submission);\n    }\n    if (!this.success) {\n      this.alerts.setAlert({\n        type: 'success',\n        message: get(this.options, 'alerts.submitMessage')\n      });\n    }\n  }\n\n  onError(err: any) {\n    this.alerts.setAlerts([]);\n    this.submitting = false;\n    this.isLoading = false;\n\n    if (!err) {\n      return;\n    }\n\n    // Make sure it is an array.\n    const errors = Array.isArray(err) ? err : [err];\n\n    // Emit these errors again.\n    this.errorChange.emit(errors);\n\n    if (err.silent) {\n      return;\n    }\n\n    if (this.formio && errors.length) {\n      this.formio.emit('submitError', errors);\n    }\n\n    // Iterate through each one and set the alerts array.\n    errors.forEach((error: any) => {\n      const {\n        message,\n        paths,\n      } = error\n        ? error.details\n          ? {\n            message: error.details.map((detail) => detail.message).join(' '),\n            paths: error.details.map((detail) => detail.path),\n          }\n          : {\n            message: error.message || error.toString(),\n            paths: error.path ? [error.path] : [],\n          }\n        : {\n          message: '',\n          paths: [],\n        };\n\n      this.alerts.addAlert({\n        type: 'danger',\n        message,\n        component: error.component,\n      });\n\n      if (this.formio) {\n        paths.forEach((path) => {\n          const component = this.formio.getComponent(path);\n          if (component) {\n            const components = Array.isArray(component) ? component : [component];\n            components.forEach((comp) => comp.setCustomValidity(message, true));\n          }\n        });\n      }\n    });\n  }\n\n  focusOnComponet(key: any) {\n    if (this.formio) {\n      this.formio.focusOnComponent(key);\n    }\n  }\n\n  submitExecute(submission: object, saved = false) {\n    if (this.service && !this.url && !saved) {\n      this.service\n        .saveSubmission(submission)\n        .subscribe(\n          (sub: {}) => this.onSubmit(sub, true),\n          err => this.onError(err)\n        );\n    } else {\n      this.onSubmit(submission, false);\n    }\n  }\n\n  submitForm(submission: any, saved = false) {\n    // Keep double submits from occurring...\n    if (this.submitting) {\n      return;\n    }\n    this.submissionSuccess = false;\n    this.submitting = true;\n    this.beforeSubmit.emit(submission);\n\n    // if they provide a beforeSubmit hook, then allow them to alter the submission asynchronously\n    // or even provide a custom Error method.\n    const beforeSubmit = get(this.options, 'hooks.beforeSubmit');\n    if (beforeSubmit) {\n      beforeSubmit(submission, (err: FormioError, sub: object) => {\n        if (err) {\n          this.onError(err);\n          return;\n        }\n        this.submitExecute(sub, saved);\n      });\n    } else {\n      this.submitExecute(submission, saved);\n    }\n  }\n\n  onChange(value: any, flags: any, isModified: boolean) {\n    if (this.watchSubmissionErrors && !this.submissionSuccess) {\n      const errors = get(this, 'formio.errors', []);\n      const alerts = get(this, 'alerts.alerts', []);\n      const submitted = get(this, 'formio.submitted', false);\n      if (submitted && (errors.length || alerts.length)) {\n        this.onError(errors);\n      }\n    }\n    return this.change.emit({...value, flags, isModified});\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","<div class=\"formio-loader-wrapper\" *ngIf=\"isLoading\">\n  <div class=\"formio-loader\"></div>\n</div>\n","import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'formio-loader',\n  styleUrls: ['./formio.loader.component.scss'],\n  templateUrl: './formio.loader.component.html'\n})\nexport class FormioLoaderComponent {\n  @Input() isLoading: boolean;\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'parseHtmlContent', pure: false })\nexport class ParseHtmlContentPipe implements PipeTransform {\n\n  /*\n    Some messages that are come from formiojs have hex codes. So the main aim of this pipe is transform this messages to html.\n    And then render in template.\n  */\n  transform(content) {\n    const parsedContent = new DOMParser().parseFromString(content, 'text/html').body.childNodes[0];\n\n    return parsedContent.textContent;\n  }\n}\n","<div *ngFor=\"let alert of alerts.alerts\" class=\"alert alert-{{ alert.type }}\" role=\"alert\" (click)=\"getComponent($event, alert)\">\n  {{alert.message | parseHtmlContent}}\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport { FormioAlerts } from './formio.alerts';\n\n@Component({\n  selector: 'formio-alerts',\n  templateUrl: './formio.alerts.component.html'\n})\nexport class FormioAlertsComponent implements OnInit {\n  @Input() alerts: FormioAlerts;\n  @Output() focusComponent = new EventEmitter<object>();\n  ngOnInit() {\n    if (!this.alerts) {\n      this.alerts = new FormioAlerts();\n    }\n  }\n  getComponent (event, alert) {\n    this.focusComponent.emit(alert.component.key);\n  }\n}\n","<div>\n  <div *ngIf=\"isLoading\" style=\"position:relative;height:200px\">\n    <formio-loader [isLoading]=\"isLoading\"></formio-loader>\n  </div>\n  <formio-alerts *ngIf=\"this.options.alertsPosition === AlertsPosition.top || this.options.alertsPosition === AlertsPosition.both\" (focusComponent)=\"focusOnComponet($event)\" [alerts]=\"alerts\"></formio-alerts>\n  <div #formio></div>\n  <formio-alerts *ngIf=\"this.options.alertsPosition === AlertsPosition.bottom || this.options.alertsPosition === AlertsPosition.both\" (focusComponent)=\"focusOnComponet($event)\" [alerts]=\"alerts\"></formio-alerts>\n</div>\n","import { Component, OnInit, Optional, ViewEncapsulation, Input, NgZone, OnChanges } from '@angular/core';\nimport { FormioAppConfig } from '../../formio.config';\nimport { Formio, Form } from 'formiojs';\nimport { FormioBaseComponent } from '../../FormioBaseComponent';\nimport { CustomTagsService } from '../../custom-component/custom-tags.service';\n\n/* tslint:disable */\n@Component({\n  selector: 'formio',\n  templateUrl: './formio.component.html',\n  styleUrls: ['./formio.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\n/* tslint:enable */\nexport class FormioComponent extends FormioBaseComponent implements OnInit, OnChanges {\n  constructor(\n    public ngZone: NgZone,\n    @Optional() public config: FormioAppConfig,\n    @Optional() public customTags?: CustomTagsService,\n  ) {\n    super(ngZone, config, customTags);\n    if (this.config) {\n      Formio.setBaseUrl(this.config.apiUrl);\n      Formio.setProjectUrl(this.config.appUrl);\n    } else {\n      console.warn('You must provide an AppConfig within your application!');\n    }\n  }\n\n  getRenderer() {\n    return this.renderer || Form;\n  }\n}\n","import {\n  Component,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  ViewEncapsulation,\n  Optional,\n  ElementRef,\n  ViewChild,\n  EventEmitter,\n  Output,\n  NgZone\n} from '@angular/core';\nimport { FormioAppConfig } from '../../formio.config';\nimport {\n  FormioForm,\n  FormioOptions\n} from '../../formio.common';\nimport { Formio, FormBuilder, Utils } from 'formiojs';\nimport { assign } from 'lodash';\nimport { Observable, Subscription } from 'rxjs';\nimport { CustomTagsService } from '../../custom-component/custom-tags.service';\n\n/* tslint:disable */\n@Component({\n  selector: 'form-builder',\n  templateUrl: './formbuilder.component.html',\n  styleUrls: ['./formbuilder.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n/* tslint:enable */\nexport class FormBuilderComponent implements OnInit, OnChanges, OnDestroy {\n  public ready: Promise<object>;\n  public readyResolve: any;\n  public formio: any;\n  public builder: FormBuilder;\n  public componentAdding = false;\n  private refreshSubscription: Subscription;\n  @Input() form?: FormioForm;\n  @Input() options?: FormioOptions;\n  @Input() formbuilder?: any;\n  @Input() noeval ? = false;\n  @Input() refresh?: Observable<void>;\n  @Input() rebuild?: Observable<object>;\n  @Output() change?: EventEmitter<object>;\n  @ViewChild('builder', { static: true }) builderElement?: ElementRef<any>;\n\n  constructor(\n    private ngZone: NgZone,\n    @Optional() private config: FormioAppConfig,\n    @Optional() private customTags?: CustomTagsService\n  ) {\n    if (this.config) {\n      Formio.setBaseUrl(this.config.apiUrl);\n      Formio.setProjectUrl(this.config.appUrl);\n    } else {\n      console.warn('You must provide an AppConfig within your application!');\n    }\n\n    this.change = new EventEmitter();\n    this.ready = new Promise((resolve: any) => {\n      this.readyResolve = resolve;\n    });\n  }\n\n  ngOnInit() {\n    Utils.Evaluator.noeval = this.noeval;\n\n    if (this.refresh) {\n      this.refreshSubscription = this.refresh.subscribe(() => {\n        this.ngZone.runOutsideAngular(() => {\n          this.buildForm(this.form);\n        });\n      });\n    }\n\n    if (this.rebuild) {\n      this.rebuild.subscribe((options) => {\n        this.ngZone.runOutsideAngular(() => {\n          this.rebuildForm(this.form, options);\n        });\n      });\n    }\n  }\n\n  setInstance(instance: any) {\n    this.formio = instance;\n    instance.off('addComponent');\n    instance.off('saveComponent');\n    instance.off('updateComponent');\n    instance.off('removeComponent');\n    instance.on('addComponent', (component, parent, path, index, isNew) => {\n      this.ngZone.run(() => {\n        if (isNew) {\n          this.componentAdding = true;\n        } else {\n          this.change.emit({\n            type: 'addComponent',\n            builder: instance,\n            form: instance.schema,\n            component: component,\n            parent: parent,\n            path: path,\n            index: index\n          });\n          this.componentAdding = false;\n        }\n      });\n    });\n    instance.on('saveComponent', (component, original, parent, path, index, isNew) => {\n      this.ngZone.run(() => {\n        this.change.emit({\n          type: this.componentAdding ? 'addComponent' : 'saveComponent',\n          builder: instance,\n          form: instance.schema,\n          component: component,\n          originalComponent: original,\n          parent: parent,\n          path: path,\n          index: index,\n          isNew: isNew || false\n        });\n        this.componentAdding = false;\n      });\n    });\n    instance.on('updateComponent', (component) => {\n      this.ngZone.run(() => {\n        this.change.emit({\n          type: 'updateComponent',\n          builder: instance,\n          form: instance.schema,\n          component: component\n        });\n      });\n    });\n    instance.on('removeComponent', (component, parent, path, index) => {\n      this.ngZone.run(() => {\n        this.change.emit({\n          type: 'deleteComponent',\n          builder: instance,\n          form: instance.schema,\n          component: component,\n          parent: parent,\n          path: path,\n          index: index\n        });\n      });\n    });\n    this.ngZone.run(() => {\n      this.readyResolve(instance);\n    });\n    return instance;\n  }\n\n  setDisplay(display: String) {\n    return this.builder.setDisplay(display).then(instance => this.setInstance(instance));\n  }\n\n  buildForm(form: any) {\n    if (!form || !this.builderElement || !this.builderElement.nativeElement) {\n      return;\n    }\n\n    if (this.builder) {\n      return this.setDisplay(form.display).then(() => {\n        this.builder.form = form;\n        this.builder.instance.form = form;\n        return this.builder.instance;\n      });\n    }\n\n    return this.rebuildForm(form);\n  }\n\n  rebuildForm(form: any, options?: object) {\n    const Builder = this.formbuilder || FormBuilder;\n    const extraTags = this.customTags ? this.customTags.tags : [];\n    this.builder = new Builder(\n      this.builderElement.nativeElement,\n      form,\n      assign({\n        icons: 'fontawesome',\n        sanitizeConfig: {\n          addTags: extraTags\n        }\n      }, options || this.options || {})\n    );\n    return this.builder.ready.then(instance => this.setInstance(instance));\n  }\n\n  ngOnChanges(changes: any) {\n    Utils.Evaluator.noeval = this.noeval;\n\n    if (changes.form && changes.form.currentValue) {\n      this.ngZone.runOutsideAngular(() => {\n        this.buildForm(changes.form.currentValue || {components: []});\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.refreshSubscription) {\n      this.refreshSubscription.unsubscribe();\n    }\n\n    if (this.formio) {\n      this.formio.destroy();\n    }\n  }\n}\n","<div #builder></div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormioComponent } from './components/formio/formio.component';\nimport { FormBuilderComponent } from './components/formbuilder/formbuilder.component';\nimport { FormioAlerts } from './components/alerts/formio.alerts';\nimport { ParseHtmlContentPipe } from './components/alerts/parse-html-content.pipe';\nimport { FormioAlertsComponent } from './components/alerts/formio.alerts.component';\nimport { FormioLoaderComponent } from './components/loader/formio.loader.component';\nimport { CustomTagsService } from './custom-component/custom-tags.service';\n\n@NgModule({\n  declarations: [\n    FormioComponent,\n    FormBuilderComponent,\n    FormioLoaderComponent,\n    FormioAlertsComponent,\n    ParseHtmlContentPipe\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    FormioComponent,\n    FormBuilderComponent,\n    FormioLoaderComponent,\n    FormioAlertsComponent\n  ],\n  providers: [\n    FormioAlerts,\n    CustomTagsService\n  ],\n  entryComponents: [\n    FormioComponent,\n    FormBuilderComponent\n  ]\n})\nexport class FormioModule {}\n","// @ts-nocheck\nimport { BuilderInfo, Components, ExtendedComponentSchema, Utils as FormioUtils } from 'formiojs';\nimport { FormioCustomComponentInfo, FormioCustomElement, FormioEvent } from '../elements.common';\nimport { clone, isNil, isArray } from 'lodash';\n\nconst BaseInputComponent = Components.components.input;\nconst TextfieldComponent = Components.components.textfield;\n\nexport function createCustomFormioComponent(customComponentOptions: FormioCustomComponentInfo) {\n  return class CustomComponent extends BaseInputComponent {\n    static editForm = customComponentOptions.editForm || TextfieldComponent.editForm;\n    id = FormioUtils.getRandomComponentId();\n    type = customComponentOptions.type;\n    _customAngularElement: FormioCustomElement;\n\n    static schema() {\n      return BaseInputComponent.schema({\n        ...customComponentOptions.schema,\n        type: customComponentOptions.type,\n      });\n    }\n\n    get defaultSchema() {\n      return CustomComponent.schema();\n    }\n\n    get emptyValue() {\n      return customComponentOptions.emptyValue || null;\n    }\n\n    static get builderInfo(): BuilderInfo {\n      return {\n        title: customComponentOptions.title,\n        group: customComponentOptions.group,\n        icon: customComponentOptions.icon,\n        weight: customComponentOptions.weight,\n        documentation: customComponentOptions.documentation,\n        schema: CustomComponent.schema(),\n      };\n    }\n\n    constructor(public component: ExtendedComponentSchema, options: any, data: any) {\n      super(component, {\n        ...options,\n        sanitizeConfig: {\n          addTags: [customComponentOptions.selector],\n        },\n      }, data);\n\n      if (customComponentOptions.extraValidators) {\n        this.validators = this.validators.concat(customComponentOptions.extraValidators);\n      }\n    }\n\n    elementInfo() {\n      const info = super.elementInfo();\n      info.type = customComponentOptions.selector;\n      info.changeEvent = customComponentOptions.changeEvent || 'valueChange';\n      info.attr = {\n        ...info.attr,\n        class: info.attr.class.replace('form-control', 'form-control-custom-field') // remove the form-control class as the custom angular component may look different\n      };\n      return info;\n    }\n\n    get inputInfo() {\n      const info = {\n        id: this.key,\n        ...this.elementInfo()\n      }\n      return info;\n    }\n\n    renderElement(value: any, index: number) {\n      const info = this.inputInfo;\n      return this.renderTemplate(customComponentOptions.template || 'input', {\n        input: info,\n        value,\n        index\n      });\n    }\n\n    attach(element: HTMLElement) {\n      let superAttach = super.attach(element);\n\n      this._customAngularElement = element.querySelector(customComponentOptions.selector);\n\n      // Bind the custom options and the validations to the Angular component's inputs (flattened)\n      if (this._customAngularElement) {\n        // To make sure we have working input in IE...\n        // IE doesn't render it properly if it's not visible on the screen\n        // due to the whole structure applied via innerHTML to the parent\n        // so we need to use appendChild\n        if (!this._customAngularElement.getAttribute('ng-version')) {\n          this._customAngularElement.removeAttribute('ref');\n\n          const newCustomElement = document.createElement(customComponentOptions.selector) as FormioCustomElement;\n\n          newCustomElement.setAttribute('ref', 'input');\n          Object.keys(this.inputInfo.attr).forEach((attr: string) => {\n            newCustomElement.setAttribute(attr, this.inputInfo.attr[attr]);\n          });\n\n          this._customAngularElement.appendChild(newCustomElement);\n          this._customAngularElement = newCustomElement;\n\n          superAttach = super.attach(element);\n        }\n\n        // Bind customOptions\n        for (const key in this.component.customOptions) {\n          if (this.component.customOptions.hasOwnProperty(key)) {\n            this._customAngularElement[key] = this.component.customOptions[key];\n          }\n        }\n        // Bind validate options\n        for (const key in this.component.validate) {\n          if (this.component.validate.hasOwnProperty(key)) {\n            this._customAngularElement[key] = this.component.validate[key];\n          }\n        }\n        // Bind options explicitly set\n        const fieldOptions = customComponentOptions.fieldOptions;\n        if (isArray(fieldOptions) && fieldOptions.length > 0) {\n          for (const key in fieldOptions) {\n            if (fieldOptions.hasOwnProperty(key)) {\n              this._customAngularElement[fieldOptions[key]] = this.component[fieldOptions[key]];\n            }\n          }\n        }\n\n        // Attach event listener for emit event\n        this._customAngularElement.addEventListener('formioEvent', (event: CustomEvent<FormioEvent>) => {\n          this.emit(event.detail.eventName, {\n            ...event.detail.data,\n            component: this.component\n          });\n        });\n\n        // Ensure we bind the value (if it isn't a multiple-value component with no wrapper)\n        if (!this._customAngularElement.value && !this.component.disableMultiValueWrapper) {\n          this.restoreValue();\n        }\n\n      }\n      return superAttach;\n    }\n\n    // Add extra option to support multiple value (e.g. datagrid) with single angular component (disableMultiValueWrapper)\n    useWrapper() {\n      return this.component.hasOwnProperty('multiple') && this.component.multiple && !this.component.disableMultiValueWrapper;\n    }\n\n    get defaultValue() {\n      let defaultValue = this.emptyValue;\n\n      // handle falsy default value\n      if (!isNil(this.component.defaultValue)) {\n        defaultValue = this.component.defaultValue;\n      }\n\n      if (this.component.customDefaultValue && !this.options.preview) {\n        defaultValue = this.evaluate(\n          this.component.customDefaultValue,\n          { value: '' },\n          'value'\n        );\n      }\n\n      return clone(defaultValue);\n    }\n  };\n}\n","import { Injector, Type } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\nimport { Components } from 'formiojs';\nimport { FormioCustomComponentInfo } from '../elements.common';\nimport { createCustomFormioComponent } from './create-custom-component';\nimport { CustomTagsService } from './custom-tags.service';\n\nexport function registerCustomTag(tag: string, injector: Injector): void {\n  injector.get(CustomTagsService).addCustomTag(tag);\n}\n\nexport function registerCustomTags(tags: string[], injector: Injector): void {\n  tags.forEach(tag => registerCustomTag(tag, injector));\n}\n\nexport function registerCustomFormioComponent(\n  options: FormioCustomComponentInfo,\n  angularComponent: Type<any>,\n  injector: Injector,\n): void {\n  registerCustomTag(options.selector, injector);\n\n  const complexCustomComponent = createCustomElement(angularComponent, { injector });\n  customElements.define(options.selector, complexCustomComponent);\n\n  Components.setComponent(options.type, createCustomFormioComponent(options));\n}\n\nexport function registerCustomFormioComponentWithClass(\n  options: FormioCustomComponentInfo,\n  angularComponent: Type<any>,\n  formioClass: any,\n  injector: Injector,\n): void {\n  registerCustomTag(options.selector, injector);\n\n  const complexCustomComponent = createCustomElement(angularComponent, { injector });\n  customElements.define(options.selector, complexCustomComponent);\n\n  Components.setComponent(options.type, formioClass);\n}\n","import { RouterModule } from '@angular/router';\nimport { find, trim, each, intersection } from 'lodash';\n\nexport function extendRouter(Class: any, config: any, ClassRoutes: any) {\n  each(Class.decorators, decorator => {\n    each(decorator.args, arg => {\n      if (arg.declarations) {\n        each(config, component => arg.declarations.push(component));\n      }\n      if (arg.imports) {\n        each(arg.imports, (_import, index) => {\n          if (\n            (_import.ngModule && (_import.ngModule.name === 'RouterModule')) ||\n            (_import.name === 'RouterModule')\n          ) {\n            arg.imports[index] = RouterModule.forChild(ClassRoutes(config));\n          }\n        });\n      }\n    });\n  });\n  return Class;\n}\n"]}